{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/models/usermodel.ts","../../src/pages/register/register.ts"],"names":[],"mappings":"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","file":"6.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n  ],\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","// import { reservationEnum } from \"../providers/Enums/reservationEnum\";\r\n\r\nexport class UserModel {\r\n  userId: number;\r\n  username: string;\r\n  password?: string;\r\n  name?: string;\r\n  userCode?: string;\r\n  tocken?:any;\r\n}\r\n\r\nexport class RegisterModel {\r\n  device_unique_id: string;\r\n  phone_number: number;\r\n  email: string;\r\n  password: string;\r\n  first_name: string;\r\n  last_name?: string;\r\n  gender?: boolean;\r\n  date_of_birth?: Date;\r\n}\r\nexport class VerifyModel {\r\n  mobileNumber: Number;\r\n  messageStr: string;\r\n  passCode: string;\r\n  email:string;\r\n}\r\nexport class LoginModel {\r\n  urlStr:string =\"http://localhost:30823/\";\r\n  username: string;\r\n  password: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/usermodel.ts","import { Component, OnInit } from '@angular/core';\r\nimport { IonicPage, MenuController, NavController, NavParams, Platform, Form } from 'ionic-angular';\r\n// import { Sim } from '@ionic-native/sim';\r\nimport { UniqueDeviceID } from '@ionic-native/unique-device-id';\r\nimport { RegisterModel } from '../../models/usermodel';\r\nimport { AuthProvider } from \"../../providers/auth/auth\";\r\nimport { ResponseModel } from '../../models/ResponseModel';\r\nimport 'rxjs/add/operator/map';\r\nimport { HttpClient } from '@angular/common/http';\r\n// import { apiConfig } from \"../../globalconfig\";\r\n// import { Observable } from 'rxjs/Observable';\r\nimport { ErrorModel } from '../../models/errorModel';\r\nimport { AlertsProvider } from '../../providers/generic/AlertsProvider';\r\nimport { VerfiypassPage } from '../verfiypass/verfiypass';\r\n//import {  FacebookLoginResponse, FacebookOriginal } from '@ionic-native/facebook';\r\n\r\n/**\r\n * Generated class for the RegisterPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-register',\r\n  templateUrl: 'register.html',\r\n})\r\nexport class RegisterPage implements OnInit {\r\n  registerModel: RegisterModel;\r\n  errorModel: ErrorModel;\r\n\r\n  constructor(public http: HttpClient, public navCtrl: NavController, public navParams: NavParams, \r\n    private uniqueDeviceID: UniqueDeviceID, private menu: MenuController, \r\n    //private facebook: FacebookOriginal,\r\n    private platform: Platform, public _auth: AuthProvider, public _alerts: AlertsProvider) {\r\n    this.registerModel = new RegisterModel();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.platform.ready().then(() => {\r\n\r\n      this.uniqueDeviceID.get()\r\n        .then((uuid: any) => {\r\n          this.registerModel.device_unique_id = uuid;\r\n        })\r\n        .catch((error: any) => console.log(error));\r\n\r\n    });\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    \r\n  }\r\n  ionViewDidEnter() {\r\n    this.menu.swipeEnable(false);\r\n  }\r\n\r\n  register() {\r\n    this._alerts.showLoader();\r\n\r\n    this._auth.registerUser(this.registerModel).subscribe(data => {\r\n      this._alerts.hideLoader();\r\n      let registerResult = <ResponseModel>data;\r\n      if (registerResult.IsDone) {\r\n        this.navCtrl.push(\"VerfiypassPage\", {\r\n          messageStr: registerResult.MessegesStr,\r\n          mobileNumber: this.registerModel.phone_number,\r\n          email:this.registerModel.email\r\n        });\r\n      } else {\r\n        this._alerts.showWarningToaster(registerResult.ErrorMessegesStr);\r\n      }\r\n    },\r\n      err => {\r\n        this._alerts.hideLoader();\r\n        this.errorModel = <ErrorModel>err;\r\n        if (this.errorModel.status == 0) {\r\n          this._alerts.showServiceError();\r\n        } else {\r\n          this._alerts.showErrorToaster(this.errorModel.message);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loginWithFB() {\r\n    \r\n    // this.facebook.login(['email', 'public_profile']).then((response: FacebookLoginResponse) => {\r\n    //   this.facebook.api('me?fields=id,name,email,first_name,last_name,birthday,gender', []).then(profile => {\r\n    //     this.userFBData = {\r\n    //       email: profile['email'],\r\n    //       first_name: profile['first_name'],\r\n    //       last_name : profile['last_name'],\r\n    //       username: profile['name'],\r\n    //       dob : profile['birthday'],\r\n    //       gender: profile['gender']\r\n\r\n    //       }\r\n\r\n    //       this.isFBaccount = true;\r\n    //       this.storage.set('isfb',this.isFBaccount);\r\n    //       var data = {\r\n    //         email : this.userFBData.email,\r\n    //         first_name: this.userFBData.first_name,\r\n    //         last_name: this.userFBData.last_name,\r\n    //         gender: this.userFBData.gender,\r\n    //         dob: this.userFBData.dob\r\n          \r\n    //       };\r\n      \r\n    //       this.changepassword(data);\r\n          \r\n    //   });\r\n    // });\r\n  }\r\n\r\n  changepassword(user)\r\n  {\r\n    // const prompt = this.alertCtrl.create({\r\n    //   title: 'Enter Password',\r\n    //   message: \"Choose your new password\",\r\n    //   inputs: [\r\n    //     {\r\n    //       name: 'new',\r\n    //       placeholder: 'New Password',\r\n    //       type: 'password'\r\n    //     },\r\n    //     {\r\n    //       name: 'confirm',\r\n    //       placeholder: 'Confirm Password',\r\n    //       type: 'password'\r\n    //     },\r\n        \r\n    //   ],\r\n    //   buttons: [\r\n    //     {\r\n    //       text: 'Cancel',\r\n    //       handler: data => {\r\n    //       }\r\n    //     },\r\n    //     {\r\n    //       text: 'Save',\r\n    //       handler: data => {\r\n    //         let loading = this.loadingCtrl.create({\r\n    //           showBackdrop: true\r\n    //         });\r\n    //         loading.present();\r\n\r\n    //             if(data.new != data.confirm)\r\n    //             {\r\n    //               let alert = this.alertCtrl.create({\r\n    //                 title: 'Password mismatch',\r\n    //                 message: 'Both passwords do not match'\r\n    //               })\r\n    //               alert.present();\r\n  \r\n    //             }\r\n  \r\n    //             else\r\n    //             {\r\n    //               user.password = data.new;\r\n    //               user.active = true;\r\n\r\n    //               this.http.post('https://zappbackendservice.herokuapp.com/users/register', user)\r\n    //               // .map(res => res.json())\r\n    //                .subscribe(res => {\r\n\r\n    //                  this.fbSignIn(user.email, user.password);\r\n\r\n                     \r\n\r\n                     \r\n    //             }, err=> {\r\n    //               console.log(err);\r\n    //             })          \r\n    //           }\r\n    //           loading.dismiss()\r\n\r\n    //       }\r\n    //     }\r\n    //   ]\r\n    // });\r\n    // prompt.present();\r\n  }\r\n\r\n  signIn() {\r\n    this.navCtrl.setRoot('LoginPage');\r\n  }\r\n\r\n  Terms(){\r\n    this.navCtrl.push('TermsconditionsPage');\r\n  }\r\n\r\n  Privacy(){\r\n    this.navCtrl.push('PrivatepolicyPage');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}