{"version":3,"sources":["../../node_modules/ionic-angular/components/fab/fab-container.ngfactory.js.pre-build-optimizer.js","../../node_modules/ionic-angular/components/fab/fab.ngfactory.js.pre-build-optimizer.js","../../src/pages/mapsapi/mapsapi.ngfactory.js.pre-build-optimizer.js","../../src/pages/mapsapi/mapsapi.ts","../../src/pages/mapsapi/mapsapi.module.ts","../../src/pages/mapsapi/mapsapi.module.ngfactory.js.pre-build-optimizer.js","../../node_modules/ionic-angular/components/toolbar/navbar.ngfactory.js.pre-build-optimizer.js","../../src/providers/Enums/reservationEnum.ts","../../src/models/MapModel.ts","../../node_modules/@ionic-native/google-maps/index.js.pre-build-optimizer.js","../../node_modules/rxjs/add/observable/fromEvent.js","../../src/providers/Enums/vehiclesIcons.ts"],"names":["View_FabContainer_0","_l","core","View_FabButton_0","icon","config","name","_ck","_v","_hidden","View_MapsapiPage_0","mapElement","toolbar_header","view_controller","navbar_ngfactory","navbar","app","nav_controller","en","$event","ad","toggle","button_ngfactory","button_button","menu_toggle","menu_controller","menuToggle","toolbar_item","toolbar","_buttons","toolbar_title_ngfactory","toolbar_title","content_ngfactory","content","platform_platform","dom_controller","keyboard","RenderType_FabContainer","fab_container","_mainButton","_fabLists","component","addYourLocationButton","RenderType_FabButton","fab","color","ios","md","_sbPadding","isHidden","statusbarPadding","_hasRefresher","mapsapi_MapsapiPage","MapsapiPage","navCtrl","platform","_VehiclsProvider","storage","geolocation","menu","navParams","diagnostic","modalController","locationAccuracy","_location","this","directionsService","google","maps","DirectionsService","directionsDisplay","DirectionsRenderer","geoModelVar","MapModel","prototype","ionViewDidEnter","console","log","swipeEnable","enable","ionViewWillEnter","ionViewWillLeave","ionViewDidLoad","_this","get","then","d","reservModel","table","reservationEnum","Start","create","enableBackdropDismiss","cssClass","present","ready","canRequest","request","REQUEST_PRIORITY_LOW_POWER","error","requestLocationAuthorization","state","JSON","stringify","catch","e","lat","lng","loadMap","map","Map","nativeElement","zoom","streetViewControl","mapTypeId","MapTypeId","ROADMAP","zoomControl","tilt","mapTypeControl","fullscreenControl","center","setMap","getVehicles","byArea","subscribe","returnData","_i","_a","ReturnedObject","$values","length","item","vechilModel","google_maps","Lat","Lng","iconImageEnum","vehiclesIcons","addMarker","initMap","long","addListener","getBounds","toJSON","polygonArray","push","getSouthWest","getNorthEast","getCenter","vehicaleModel","id","infowindow","InfoWindow","toString","tempPos","Number","marker","Marker","position","draggable","url","size","width","height","iconData","event","vId","navigator","getCurrentPosition","latlng","LatLng","coords","latitude","longitude","setCenter","MapsapiPageModule","encapsulation","styles","data","RenderType_MapsapiPage","MapsapiPageNgFactory","vechilsApi","ionic_storage","_ionic_native_geolocation","nav_params","_ionic_native_diagnostic","modal_controller","location_accuracy","locations","__webpack_require__","__webpack_exports__","MapsapiPageModuleNgFactory","action_sheet_component_ngfactory","alert_component_ngfactory","app_root_ngfactory","loading_component_ngfactory","modal_component_ngfactory","picker_component_ngfactory","popover_component_ngfactory","select_popover_component_ngfactory","toast_component_ngfactory","common","esm5_forms","ionic_angular_module","module_loader","View_Navbar_0","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","klass","ngClass","backButtonClick","__WEBPACK_IMPORTED_MODULE_2__button_button_ngfactory__","__WEBPACK_IMPORTED_MODULE_3__button_button__","__WEBPACK_IMPORTED_MODULE_4__config_config__","__WEBPACK_IMPORTED_MODULE_5__icon_icon__","_co","_mode","_bbIcon","_hideBb","_backText","RenderType_Navbar","GeoModel","TARGET_ELEMENT_FINDING_QUERYS","equals","other","toUrlValue","precision","toFixed","LatLngBounds","points","_objectInstance","GoogleMaps","getPlugin","extend","contains","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__","String","sync","Function","Boolean","VisibleRegion","southwest","northeast","farLeft","farRight","nearLeft","nearRight","GoogleMapsEvent","MAP_READY","MAP_CLICK","MAP_LONG_CLICK","POI_CLICK","MY_LOCATION_CLICK","MY_LOCATION_BUTTON_CLICK","INDOOR_BUILDING_FOCUSED","INDOOR_LEVEL_ACTIVATED","CAMERA_MOVE_START","CAMERA_MOVE","CAMERA_MOVE_END","OVERLAY_CLICK","POLYGON_CLICK","POLYLINE_CLICK","CIRCLE_CLICK","GROUND_OVERLAY_CLICK","INFO_CLICK","INFO_LONG_CLICK","INFO_CLOSE","INFO_OPEN","MARKER_CLICK","MARKER_DRAG","MARKER_DRAG_START","MARKER_DRAG_END","MAP_DRAG","MAP_DRAG_START","MAP_DRAG_END","KML_CLICK","PANORAMA_READY","PANORAMA_CAMERA_CHANGE","PANORAMA_LOCATION_CHANGE","PANORAMA_CLICK","_super","apply","arguments","GoogleMaps_1","element","options","getPluginRef","getPluginName","HTMLElement","offsetParent","Error","getAttribute","tagName","googleMap","GoogleMap","set","errorMessage","window","cordova","displayErrorMessage","join","targets","Array","from","document","querySelectorAll","filter","target","hasAttribute","createPanorama","StreetViewPanorama","pluginName","pluginRef","plugin","repo","install","installVariables","platforms","message","errorDiv","createElement","innerHTML","style","top","bottom","right","left","padding","margin","backgroundColor","appendChild","normalizeArgumentsOfEventListener","args","BaseClass","type","__pgmId","indexOf","overlay","getMap","getId","markerJS","markerId_1","one","objInstance","addEventListener","eventName","__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__","observer","newArgs","call","next","addEventListenerOnce","Promise","resolve","addListenerOnce","warn","key","value","noNotify","bindTo","targetKey","on","hasEventListener","empty","trigger","parameters","destroy","remove","removeEventListener","listener","off","observable","BaseArrayClass","initialData","isArray","forEach","fn","forEachAsync","mapAsync","mapSeries","filterAsync","getArray","getAt","index","getLength","reverse","sort","insertAt","pop","removeAt","setAt","Circle","_map","latLng","getRadius","setRadius","radius","setFillColor","getFillColor","setStrokeWidth","strokeWidth","getStrokeWidth","setStrokeColor","strokeColor","getStrokeColor","setClickable","clickable","getClickable","setZIndex","zIndex","getZIndex","setVisible","visible","getVisible","Environment","Environment_1","setEnv","envOptions","environment","getLicenseInfo","text","setBackgroundColor","offsetWidth","offsetHeight","StreetView","getPanorama","reject","count","i","timer","setInterval","clearInterval","setPov","pov","setPosition","cameraPosition","setPanningGesturesEnabled","gestureEnable","getPanningGesturesEnabled","setZoomGesturesEnabled","getZoomGesturesEnabled","setStreetNamesEnabled","getStreetNamesEnabled","setNavigationEnabled","getNavigationEnabled","getLinks","getLocation","getPanoId","getPosition","setDiv","domNode","getDiv","setMapTypeId","animateCamera","animateCameraZoomIn","animateCameraZoomOut","moveCamera","moveCameraZoomIn","moveCameraZoomOut","getCameraPosition","getCameraTarget","getCameraZoom","getCameraBearing","getCameraTilt","setCameraTarget","setCameraZoom","zoomLevel","setCameraTilt","tiltAngle","setCameraBearing","bearing","panBy","x","y","getVisibleRegion","getMyLocation","LocationService","isClickable","keys","overlayId","clear","fromLatLngToPoint","fromPointToLatLng","point","setMyLocationEnabled","enabled","setMyLocationButtonEnabled","getFocusedBuilding","setIndoorEnabled","setTrafficEnabled","setCompassEnabled","setAllGesturesEnabled","setPadding","setOptions","overlayId_1","overlay_1","addMarkerSync","addMarkerCluster","markerCluster","overlayId_2","overlay_2","MarkerCluster","addMarkerClusterSync","addCircle","circle","overlayId_3","overlay_3","addCircleSync","addPolygon","polygon","overlayId_4","overlay_4","Polygon","addPolygonSync","addPolyline","polyline","overlayId_5","overlay_5","Polyline","addPolylineSync","addTileOverlay","tileOverlay","overlayId_6","overlay_6","TileOverlay","addTileOverlaySync","addGroundOverlay","groundOverlay","overlayId_7","overlay_7","GroundOverlay","addGroundOverlaySync","addKmlOverlay","kmlOverlay","overlayId_8","overlay_8","KmlOverlay","toDataURL","setBounds","bounds","setBearing","getBearing","setImage","imageUrl","setOpacity","opacity","getOpacity","showInfoWindow","hideInfoWindow","setAnimation","animation","setDisableAutoPan","disableAutoPan","isVisible","setTitle","title","getTitle","setSnippet","snippet","getSnippet","alpha","setIconAnchor","setInfoWindowAnchor","isInfoWindowShown","setDraggable","isDraggable","setFlat","flat","setIcon","setRotation","rotation","getRotation","addMarkers","markers","undefined","setPoints","getPoints","setHoles","holes","getHoles","results","hole","fillColor","setGeodesic","geodesic","getGeodesic","setGeoDesic","geoDesic","setFadeIn","fadeIn","getFadeIn","getTileSize","defineProperty","self","camera","writable","kmlData","getDefaultViewport","Observable_1","fromEvent_1","Observable","fromEvent"],"mappings":"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","sourcesContent":["/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./fab-container\";\r\nimport * as i2 from \"../../platform/platform\";\r\nvar styles_FabContainer = [];\r\nvar RenderType_FabContainer = i0.ɵcrt({ encapsulation: 2, styles: styles_FabContainer, data: {} });\r\nexport { RenderType_FabContainer as RenderType_FabContainer };\r\nexport function View_FabContainer_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }\r\nexport function View_FabContainer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"ion-fab\", [], null, null, null, View_FabContainer_0, RenderType_FabContainer)), i0.ɵdid(1, 1228800, null, 2, i1.FabContainer, [i2.Platform], null, null), i0.ɵqud(335544320, 1, { _mainButton: 0 }), i0.ɵqud(603979776, 2, { _fabLists: 1 })], null, null); }\r\nvar FabContainerNgFactory = i0.ɵccf(\"ion-fab\", i1.FabContainer, View_FabContainer_Host_0, {}, {}, [\"*\"]);\r\nexport { FabContainerNgFactory as FabContainerNgFactory };\r\n//# sourceMappingURL=fab-container.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ionic-angular/components/fab/fab-container.ngfactory.js.pre-build-optimizer.js","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../icon/icon\";\r\nimport * as i2 from \"../../config/config\";\r\nimport * as i3 from \"./fab\";\r\nvar styles_FabButton = [];\r\nvar RenderType_FabButton = i0.ɵcrt({ encapsulation: 2, styles: styles_FabButton, data: {} });\r\nexport { RenderType_FabButton as RenderType_FabButton };\r\nexport function View_FabButton_0(_l) { return i0.ɵvid(2, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ion-icon\", [[\"class\", \"fab-close-icon\"], [\"name\", \"close\"], [\"role\", \"img\"]], [[2, \"hide\", null]], null, null, null, null)), i0.ɵdid(1, 147456, null, 0, i1.Icon, [i2.Config, i0.ElementRef, i0.Renderer], { name: [0, \"name\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"span\", [[\"class\", \"button-inner\"]], null, null, null, null, null)), i0.ɵncd(null, 0), (_l()(), i0.ɵeld(4, 0, null, null, 0, \"div\", [[\"class\", \"button-effect\"]], null, null, null, null, null))], function (_ck, _v) { var currVal_1 = \"close\"; _ck(_v, 1, 0, currVal_1); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._hidden; _ck(_v, 0, 0, currVal_0); }); }\r\nexport function View_FabButton_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"ion-fab\", \"\"]], null, null, null, View_FabButton_0, RenderType_FabButton)), i0.ɵdid(1, 49152, null, 0, i3.FabButton, [i2.Config, i0.ElementRef, i0.Renderer], null, null)], null, null); }\r\nvar FabButtonNgFactory = i0.ɵccf(\"[ion-fab]\", i3.FabButton, View_FabButton_Host_0, { color: \"color\", mode: \"mode\" }, {}, [\"*\"]);\r\nexport { FabButtonNgFactory as FabButtonNgFactory };\r\n//# sourceMappingURL=fab.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ionic-angular/components/fab/fab.ngfactory.js.pre-build-optimizer.js","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"ionic-angular/components/toolbar/toolbar-header\";\r\nimport * as i2 from \"ionic-angular/config/config\";\r\nimport * as i3 from \"ionic-angular/navigation/view-controller\";\r\nimport * as i4 from \"../../../node_modules/ionic-angular/components/toolbar/navbar.ngfactory\";\r\nimport * as i5 from \"ionic-angular/components/toolbar/navbar\";\r\nimport * as i6 from \"ionic-angular/components/app/app\";\r\nimport * as i7 from \"ionic-angular/navigation/nav-controller\";\r\nimport * as i8 from \"../../../node_modules/ionic-angular/components/button/button.ngfactory\";\r\nimport * as i9 from \"ionic-angular/components/button/button\";\r\nimport * as i10 from \"ionic-angular/components/menu/menu-toggle\";\r\nimport * as i11 from \"ionic-angular/components/app/menu-controller\";\r\nimport * as i12 from \"ionic-angular/components/toolbar/toolbar-item\";\r\nimport * as i13 from \"ionic-angular/components/toolbar/toolbar\";\r\nimport * as i14 from \"ionic-angular/components/icon/icon\";\r\nimport * as i15 from \"../../../node_modules/ionic-angular/components/toolbar/toolbar-title.ngfactory\";\r\nimport * as i16 from \"ionic-angular/components/toolbar/toolbar-title\";\r\nimport * as i17 from \"../../../node_modules/ionic-angular/components/content/content.ngfactory\";\r\nimport * as i18 from \"ionic-angular/components/content/content\";\r\nimport * as i19 from \"ionic-angular/platform/platform\";\r\nimport * as i20 from \"ionic-angular/platform/dom-controller\";\r\nimport * as i21 from \"ionic-angular/platform/keyboard\";\r\nimport * as i22 from \"../../../node_modules/ionic-angular/components/fab/fab-container.ngfactory\";\r\nimport * as i23 from \"ionic-angular/components/fab/fab-container\";\r\nimport * as i24 from \"../../../node_modules/ionic-angular/components/fab/fab.ngfactory\";\r\nimport * as i25 from \"ionic-angular/components/fab/fab\";\r\nimport * as i26 from \"./mapsapi\";\r\nimport * as i27 from \"../../providers/Map/vechilsApi\";\r\nimport * as i28 from \"@ionic/storage\";\r\nimport * as i29 from \"@ionic-native/geolocation/index\";\r\nimport * as i30 from \"ionic-angular/navigation/nav-params\";\r\nimport * as i31 from \"@ionic-native/diagnostic/index\";\r\nimport * as i32 from \"ionic-angular/components/modal/modal-controller\";\r\nimport * as i33 from \"@ionic-native/location-accuracy/index\";\r\nimport * as i34 from \"../../providers/Map/locations\";\r\nvar styles_MapsapiPage = [];\r\nvar RenderType_MapsapiPage = i0.ɵcrt({ encapsulation: 2, styles: styles_MapsapiPage, data: {} });\r\nexport { RenderType_MapsapiPage as RenderType_MapsapiPage };\r\nexport function View_MapsapiPage_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { mapElement: 0 }), (_l()(), i0.ɵted(-1, null, [\"\\n\\n\"])), (_l()(), i0.ɵeld(2, 0, null, null, 20, \"ion-header\", [], null, null, null, null, null)), i0.ɵdid(3, 16384, null, 0, i1.Header, [i2.Config, i0.ElementRef, i0.Renderer, [2, i3.ViewController]], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n  \"])), (_l()(), i0.ɵeld(5, 0, null, null, 16, \"ion-navbar\", [[\"class\", \"toolbar\"], [\"transparent\", \"\"]], [[8, \"hidden\", 0], [2, \"statusbar-padding\", null]], null, null, i4.View_Navbar_0, i4.RenderType_Navbar)), i0.ɵdid(6, 49152, null, 0, i5.Navbar, [i6.App, [2, i3.ViewController], [2, i7.NavController], i2.Config, i0.ElementRef, i0.Renderer], null, null), (_l()(), i0.ɵted(-1, 3, [\"\\n    \"])), (_l()(), i0.ɵeld(8, 0, null, 0, 8, \"button\", [[\"ion-button\", \"\"], [\"menuToggle\", \"\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\r\n        var pd_0 = (i0.ɵnov(_v, 10).toggle() !== false);\r\n        ad = (pd_0 && ad);\r\n    } return ad; }, i8.View_Button_0, i8.RenderType_Button)), i0.ɵdid(9, 1097728, [[2, 4]], 0, i9.Button, [[8, \"\"], i2.Config, i0.ElementRef, i0.Renderer], null, null), i0.ɵdid(10, 1064960, null, 0, i10.MenuToggle, [i11.MenuController, [2, i3.ViewController], [2, i9.Button], [2, i5.Navbar]], { menuToggle: [0, \"menuToggle\"] }, null), i0.ɵdid(11, 16384, null, 1, i12.ToolbarItem, [i2.Config, i0.ElementRef, i0.Renderer, [2, i13.Toolbar], [2, i5.Navbar]], null, null), i0.ɵqud(603979776, 2, { _buttons: 1 }), (_l()(), i0.ɵted(-1, 0, [\"\\n      \"])), (_l()(), i0.ɵeld(14, 0, null, 0, 1, \"ion-icon\", [[\"name\", \"menu\"], [\"role\", \"img\"]], [[2, \"hide\", null]], null, null, null, null)), i0.ɵdid(15, 147456, null, 0, i14.Icon, [i2.Config, i0.ElementRef, i0.Renderer], { name: [0, \"name\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"\\n    \"])), (_l()(), i0.ɵted(-1, 3, [\"\\n    \"])), (_l()(), i0.ɵeld(18, 0, null, 3, 2, \"ion-title\", [], null, null, null, i15.View_ToolbarTitle_0, i15.RenderType_ToolbarTitle)), i0.ɵdid(19, 49152, null, 0, i16.ToolbarTitle, [i2.Config, i0.ElementRef, i0.Renderer, [2, i13.Toolbar], [2, i5.Navbar]], null, null), (_l()(), i0.ɵted(-1, 0, [\"Find A Rabbit\"])), (_l()(), i0.ɵted(-1, 3, [\"\\n  \"])), (_l()(), i0.ɵted(-1, null, [\"\\n\"])), (_l()(), i0.ɵted(-1, null, [\"\\n\\n\"])), (_l()(), i0.ɵeld(24, 0, null, null, 21, \"ion-content\", [[\"padding\", \"\"], [\"style\", \"background: none transparent!important;background-color: rgba(0, 0, 0, 0) !important;\"]], [[2, \"statusbar-padding\", null], [2, \"has-refresher\", null]], null, null, i17.View_Content_0, i17.RenderType_Content)), i0.ɵdid(25, 4374528, null, 0, i18.Content, [i2.Config, i19.Platform, i20.DomController, i0.ElementRef, i0.Renderer, i6.App, i21.Keyboard, i0.NgZone, [2, i3.ViewController], [2, i7.NavController]], null, null), (_l()(), i0.ɵted(-1, 1, [\"\\n  \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n  \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n\\n  \\n    \"])), (_l()(), i0.ɵeld(29, 0, null, 0, 12, \"ion-fab\", [[\"bottom\", \"\"], [\"id\", \"currentBtn\"], [\"right\", \"\"]], null, null, null, i22.View_FabContainer_0, i22.RenderType_FabContainer)), i0.ɵdid(30, 1228800, null, 2, i23.FabContainer, [i19.Platform], null, null), i0.ɵqud(335544320, 3, { _mainButton: 0 }), i0.ɵqud(603979776, 4, { _fabLists: 1 }), (_l()(), i0.ɵted(-1, 0, [\"\\n      \"])), (_l()(), i0.ɵeld(34, 0, null, 0, 6, \"button\", [[\"color\", \"light\"], [\"ion-fab\", \"\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\r\n        var pd_0 = (_co.addYourLocationButton() !== false);\r\n        ad = (pd_0 && ad);\r\n    } return ad; }, i24.View_FabButton_0, i24.RenderType_FabButton)), i0.ɵdid(35, 49152, [[3, 4]], 0, i25.FabButton, [i2.Config, i0.ElementRef, i0.Renderer], { color: [0, \"color\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"\\n        \"])), (_l()(), i0.ɵeld(37, 0, null, 0, 2, \"ion-icon\", [[\"ios\", \"ios-locate-outline\"], [\"md\", \"md-locate\"], [\"role\", \"img\"]], [[2, \"hide\", null]], null, null, null, null)), i0.ɵdid(38, 147456, null, 0, i14.Icon, [i2.Config, i0.ElementRef, i0.Renderer], { ios: [0, \"ios\"], md: [1, \"md\"] }, null), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵted(-1, 0, [\"\\n      \"])), (_l()(), i0.ɵted(-1, 0, [\"\\n    \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n    \"])), (_l()(), i0.ɵeld(43, 0, [[1, 0], [\"map\", 1]], 1, 1, \"div\", [[\"class\", \"mapnone\"], [\"id\", \"map\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n\\n    \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n\\n\"]))], function (_ck, _v) { var currVal_3 = \"\"; _ck(_v, 10, 0, currVal_3); var currVal_5 = \"menu\"; _ck(_v, 15, 0, currVal_5); var currVal_8 = \"light\"; _ck(_v, 35, 0, currVal_8); var currVal_10 = \"ios-locate-outline\"; var currVal_11 = \"md-locate\"; _ck(_v, 38, 0, currVal_10, currVal_11); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 6)._hidden; var currVal_1 = i0.ɵnov(_v, 6)._sbPadding; _ck(_v, 5, 0, currVal_0, currVal_1); var currVal_2 = i0.ɵnov(_v, 10).isHidden; _ck(_v, 8, 0, currVal_2); var currVal_4 = i0.ɵnov(_v, 15)._hidden; _ck(_v, 14, 0, currVal_4); var currVal_6 = i0.ɵnov(_v, 25).statusbarPadding; var currVal_7 = i0.ɵnov(_v, 25)._hasRefresher; _ck(_v, 24, 0, currVal_6, currVal_7); var currVal_9 = i0.ɵnov(_v, 38)._hidden; _ck(_v, 37, 0, currVal_9); }); }\r\nexport function View_MapsapiPage_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"page-mapsapi\", [], null, null, null, View_MapsapiPage_0, RenderType_MapsapiPage)), i0.ɵdid(1, 49152, null, 0, i26.MapsapiPage, [i7.NavController, i19.Platform, i27.VehiclsProvider, i28.Storage, i29.Geolocation, i11.MenuController, i30.NavParams, i31.Diagnostic, i32.ModalController, i33.LocationAccuracy, i34.LocationsProvider], null, null)], null, null); }\r\nvar MapsapiPageNgFactory = i0.ɵccf(\"page-mapsapi\", i26.MapsapiPage, View_MapsapiPage_Host_0, {}, {}, []);\r\nexport { MapsapiPageNgFactory as MapsapiPageNgFactory };\r\n//# sourceMappingURL=mapsapi.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mapsapi/mapsapi.ngfactory.js.pre-build-optimizer.js","import { Component, ViewChild, ElementRef } from '@angular/core';\r\nimport { NavController, MenuController, NavParams, ModalController, Platform } from 'ionic-angular';\r\nimport { Geolocation } from '@ionic-native/geolocation';\r\nimport { VehiclsProvider } from '../../providers/Map/vechilsApi';\r\nimport { ResponseModel } from '../../models/ResponseModel';\r\nimport { Storage } from '@ionic/storage';\r\nimport { vehicaleReservationModel, vehicaleModel } from '../../models/vehicaleModel';\r\nimport { reservationEnum } from '../../providers/Enums/reservationEnum';\r\nimport { LocationAccuracy } from '@ionic-native/location-accuracy';\r\nimport { Diagnostic } from '@ionic-native/diagnostic';\r\nimport { LocationsProvider } from '../../providers/Map/locations';\r\nimport { GeoModel } from '../../models/MapModel';\r\nimport { LatLng, Poly } from '@ionic-native/google-maps';\r\nimport { vehiclesIcons } from '../../providers/Enums/vehiclesIcons';\r\n/**\r\n * Generated class for the MapsapiPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\ndeclare var google;\r\n\r\n\r\n@Component({\r\n  selector: 'page-mapsapi',\r\n  templateUrl: 'mapsapi.html',\r\n})\r\nexport class MapsapiPage {\r\n  @ViewChild('map') mapElement: ElementRef;\r\n\r\n  private map: any;\r\n  directionsService = new google.maps.DirectionsService;\r\n  directionsDisplay = new google.maps.DirectionsRenderer;\r\n\r\n  lat: any;\r\n  long: any;\r\n  // Variables\r\n  geoModelVar: GeoModel;\r\n  //vehicles;\r\n\r\n  constructor(public navCtrl: NavController, private platform: Platform, public _VehiclsProvider: VehiclsProvider, private storage: Storage\r\n    , private geolocation: Geolocation, private menu: MenuController, public navParams: NavParams, private diagnostic: Diagnostic,\r\n    public modalController: ModalController, private locationAccuracy: LocationAccuracy, private _location: LocationsProvider) {\r\n    this.geoModelVar = new GeoModel();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    console.log('ionViewDidEnter HistoryPage');\r\n    this.menu.swipeEnable(true);\r\n    this.menu.enable(true);\r\n  }\r\n  ionViewWillEnter() { this.menu.enable(true) }\r\n  ionViewWillLeave() {\r\n    this.menu.swipeEnable(false);\r\n  }\r\n  ionViewDidLoad() {\r\n    this.storage.get(\"RideStatus\").then(d => {\r\n\r\n      if (d != null) {\r\n        let reservModel = <vehicaleReservationModel>d;\r\n        console.table(reservModel)\r\n        if (reservModel.reservationEnum == reservationEnum.Start) {\r\n\r\n          let modal = this.modalController.create(\r\n            'InridestatusPage', null, { enableBackdropDismiss: false, cssClass: 'modal-bottom' }\r\n          );\r\n          modal.present();\r\n        }\r\n      }\r\n\r\n    });\r\n    this.platform.ready().then(() => {\r\n\r\n      this.locationAccuracy.canRequest().then((canRequest: boolean) => {\r\n        console.log(\"Can req : \" + canRequest)\r\n        if (canRequest) {\r\n          // the accuracy option will be ignored by iOS\r\n          this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_LOW_POWER).then(\r\n            () => console.log('Request successful'),\r\n            error => console.log('Error requesting location permissions', error)\r\n          );\r\n        }\r\n\r\n      });\r\n\r\n      this.diagnostic.requestLocationAuthorization(\"always\")\r\n        .then((state) => {\r\n          console.log(JSON.stringify(state));\r\n        }).catch(e => console.error(e));\r\n\r\n\r\n      // if (navigator.geolocation) {\r\n      //   navigator.geolocation.getCurrentPosition(function (position) {\r\n      //     this.geoModelVar.lat = position.coords.latitude;\r\n      //     this.geoModelVar.lng = position.coords.longitude;\r\n      //     this.loadMap();\r\n      //   });\r\n      // } else {\r\n      this.geoModelVar.lat = \"30.0371824\";\r\n      this.geoModelVar.lng = \"31.2145495\";\r\n      this.loadMap();\r\n      //}\r\n\r\n      // this._location.GetCurrent().then(((resp) => {\r\n      //   this.geoModelVar.lat = resp.coords.latitude;\r\n      //   this.geoModelVar.lng = resp.coords.longitude;\r\n\r\n      //   this.loadMap();\r\n      // })).catch(err => {\r\n      //   console.log(err);\r\n      //   this.geoModelVar.lat = \"30.0371824\";\r\n      //   this.geoModelVar.lng = \"31.2145495\";\r\n      //   this.loadMap();\r\n      // }\r\n      // );\r\n\r\n\r\n    });\r\n    // this.geolocation.getCurrentPosition().then((resp) => {\r\n    //   this.lat = resp.coords.latitude;\r\n    //   this.long = resp.coords.longitude;\r\n\r\n    //   this.initMap();\r\n    // }).catch((error) => {\r\n    //   console.log('Error getting location', error);\r\n    // });\r\n  }\r\n\r\n\r\n  loadMap() {\r\n\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\r\n      zoom: 15,\r\n      streetViewControl: false,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n      zoomControl: false,\r\n      tilt: 30,\r\n      mapTypeControl: false,\r\n      //scaleControl: false,\r\n      // rotateControl: false,\r\n      fullscreenControl: false,\r\n      center: { lat: this.geoModelVar.lat, lng: this.geoModelVar.lng }\r\n    });\r\n\r\n    this.directionsDisplay.setMap(this.map);\r\n\r\n    this.getVehicles();\r\n\r\n    this.addYourLocationButton();\r\n  }\r\n\r\n  getVehicles() {\r\n   // console.clear();\r\n    this._VehiclsProvider.byArea().subscribe(returnData => {\r\n      let ResultData = <ResponseModel>returnData;\r\n      //this.vehicles = [];\r\n      //  this.map.clear();\r\n      let tempPosition;\r\n      //console.log(ResultData.ReturnedObject.$values);\r\n      for (let item of ResultData.ReturnedObject.$values) {\r\n        let vechilModel: vehicaleModel = item;\r\n        tempPosition = new LatLng(vechilModel.Lat, vechilModel.Lng);\r\n\r\n        // console.log(Poly.containsLocation(tempPosition, pointsPoly) + \"    \" + tempPosition);\r\n\r\n        // if (Poly.containsLocation(tempPosition, pointsPoly)) {\r\n        item.iconImageEnum = vehiclesIcons[item.iconImageEnum];\r\n        // this.vehicles.push(item);\r\n        console.log(vechilModel)\r\n        this.addMarker(item)\r\n        // }\r\n      }\r\n    });\r\n  }\r\n\r\n  initMap() {\r\n\r\n    this.map = new google.maps.Map(this.mapElement.nativeElement, {\r\n      zoom: 15,\r\n      streetViewControl: false,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n      zoomControl: false,\r\n      mapTypeControl: false,\r\n      //scaleControl: false,\r\n      // rotateControl: false,\r\n      fullscreenControl: false,\r\n      center: { lat: this.lat, lng: this.long }\r\n    });\r\n\r\n    //     this.map.setMyLocationEnabled(true);\r\n    // this.map.getUiSettings().setMyLocationButtonEnabled(true);\r\n\r\n    this.directionsDisplay.setMap(this.map);\r\n    // this.addYourLocationButton();\r\n\r\n    let map = this.map;\r\n    // this.addMarker({ lat: this.lat, lng: this.long }, \"sc 1\", \"123\", 0, \"\");\r\n    // this.addMarker({ lat: -25.363, lng: 131.044 }, \"sc 2\", \"987\", 1, \"\");\r\n    //   let infowindow = new google.maps.InfoWindow({\r\n    //     content: \"name\"\r\n    //   });\r\n    //   let marker = new google.maps.Marker({\r\n    //     map: this.map,\r\n    //     icon: new google.maps.MarkerImage('//maps.gstatic.com/mapfiles/mobile/mobileimgs2.png',\r\n    //       new google.maps.Size(22, 22),\r\n    //       new google.maps.Point(0, 18),\r\n    //       new google.maps.Point(11, 11)),\r\n    //     position: { lat: this.lat, lng: this.long }\r\n    //   });\r\n    //   this.map.setCenter({ lat: this.lat, lng: this.long });\r\n\r\n    //   google.maps.event.addListener(marker, 'click', (function (marker, i) {\r\n    //     return function () {\r\n    //       infowindow.setContent(\"name1\");\r\n    //       this.getVehicles(infowindow);\r\n    //     }\r\n    // })(marker, 0));\r\n\r\n    // google.maps.event.addListener(marker, 'click', () => {\r\n    //   //infoWindow.open(this.map, marker);\r\n    //   this.getVehicles();\r\n    // });\r\n    // marker.addListener('click', function() {\r\n    //   this.ngZOne.run(()=>{\r\n    //     this.getVehicles();\r\n    //  });\r\n\r\n    //   map.setZoom(8);\r\n    //   map.setCenter(marker.getPosition());\r\n    // });\r\n\r\n    map.addListener('center_changed', function (e) {\r\n      // 3 seconds after the center of the map has changed, pan back to the\r\n      // marker.\r\n      //console.clear();\r\n      //console.log(map.getBounds())\r\n\r\n      // console.log(map.getBounds().extend())\r\n\r\n     // console.log(map.getBounds().getCenter())\r\n      //console.log(map.getBounds().getNorthEast())\r\n      //console.log(map.getBounds().getSouthWest())\r\n      // console.log(map.getBounds().intersects())\r\n\r\n      let poundsJson = map.getBounds().toJSON();\r\n      //console.log(map.getCenter().lat())\r\n      //console.log(map);\r\n\r\n      let polygonArray = [];\r\n\r\n\r\n      // console.log({ lat: map.getBounds().getNorthEast().lat(), lng: map.getBounds().getNorthEast().lng() });\r\n      // console.log({ lat: map.getBounds().getSouthWest().lat(), lng: map.getBounds().getSouthWest().lng() });\r\n      polygonArray.push({ lat: map.getBounds().getSouthWest().lat(), lng: map.getBounds().getSouthWest().lng() });\r\n      polygonArray.push({ lat: map.getBounds().getNorthEast().lat(), lng: map.getBounds().getNorthEast().lng() });\r\n      polygonArray.push({ lat: map.getBounds().getCenter().lat(), lng: map.getBounds().getCenter().lng() });\r\n\r\n\r\n\r\n\r\n      // let polyObj = new google.maps.Polygon({\r\n      //   paths: polygonArray,\r\n      //   strokeWeight: 0,\r\n      //   fillOpacity: 0.45,\r\n      //   editable: true\r\n      // });\r\n      // polyObj.setMap(map);\r\n\r\n    });\r\n\r\n    console.log(\"Finished\")\r\n  }\r\n\r\n  // marker: any;\r\n  addMarker(vehicaleModel: vehicaleModel) {//location, name, plateNo, i, imagePath\r\n    console.log(vehicaleModel.id)\r\n    let infowindow = new google.maps.InfoWindow({\r\n      content: vehicaleModel.id.toString()\r\n    });\r\n\r\n    let tempPos = { lat: Number(vehicaleModel.Lat), lng: Number(vehicaleModel.Lng) };\r\n    console.log(tempPos)\r\n\r\n    // if (!marker || !marker.setPosition) {\r\n    let marker = new google.maps.Marker({\r\n      position: tempPos,\r\n      map: this.map,\r\n      draggable: false,\r\n      icon: {\r\n        url: vehicaleModel.iconImageEnum,\r\n        size: {\r\n          width: 50,\r\n          height: 70\r\n        }\r\n      },\r\n      iconData: {\r\n        url: vehicaleModel.iconImageEnum,\r\n        size: {\r\n          width: 50,\r\n          height: 70\r\n        }\r\n      }\r\n    });\r\n\r\n    google.maps.event.addListener(marker, 'click', () => {\r\n      //infoWindow.open(this.map, marker);\r\n      let modal = this.modalController.create(\r\n        'SelectedRabbitPage', { vId: infowindow.content }, { enableBackdropDismiss: true, cssClass: 'modal-center' }\r\n      );\r\n      modal.present();\r\n    });\r\n\r\n    // google.maps.event.addListener(this.marker, 'click', (function (marker, i) {\r\n\r\n    //   return function () {\r\n    //     //this.getVehicles(\"D\")\r\n    //     infowindow.setContent(name + ' (' + plateNo + ')');\r\n    //     infowindow.open(this.map, marker);\r\n    //   }\r\n    // })(this.marker, i));\r\n  }\r\n\r\n  // getVehicles(infowindow) {\r\n  //   let pointsPoly: any[] = [];\r\n\r\n  //   console.log(\"GetVvvvvv\" + infowindow)\r\n  // pointsPoly.push({data.farLeft.lat, data.farLeft.lng));\r\n  // pointsPoly.push(new LatLng(data.farRight.lat, data.farRight.lng));\r\n  // pointsPoly.push(new LatLng(data.northeast.lat, data.northeast.lng));\r\n  // // pointsPoly.push(new LatLng(data.southwest.lat, data.southwest.lng));\r\n  // pointsPoly.push(new LatLng(data.nearRight.lat, data.nearRight.lng));\r\n  // pointsPoly.push(new LatLng(data.nearLeft.lat, data.nearLeft.lng));\r\n\r\n  // this._VehiclsProvider.byArea(pointsPoly).subscribe(returnData => {\r\n  //   let ResultData = <ResponseModel>returnData;\r\n  //   this.vehicles = [];\r\n  //   this.map.clear();\r\n  //   let tempPosition;\r\n  //   //console.log(ResultData.ReturnedObject.$values);\r\n  //   for (let item of ResultData.ReturnedObject.$values) {\r\n  //     let vechilModel: vehicaleModel = item;\r\n  //     tempPosition = new LatLng(vechilModel.Lat, vechilModel.Lng);\r\n\r\n  //    // console.log(Poly.containsLocation(tempPosition, pointsPoly) + \"    \" + tempPosition);\r\n\r\n  //     if (Poly.containsLocation(tempPosition, pointsPoly)) {\r\n  //       item.iconImageEnum = vehiclesIcons[item.iconImageEnum];\r\n  //       this.vehicles.push(item);\r\n  //       this.addMarker(item)\r\n  //     }\r\n  //   }\r\n  // });\r\n  // }\r\n\r\n  addYourLocationButton() {\r\n    let map = this.map;\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        let latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\r\n        map.setCenter(latlng);\r\n      });\r\n    } else {\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mapsapi/mapsapi.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MapsapiPage } from './mapsapi';\n\n@NgModule({\n  declarations: [\n    MapsapiPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MapsapiPage),\n  ],\n})\nexport class MapsapiPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mapsapi/mapsapi.module.ts","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./mapsapi.module\";\r\nimport * as i2 from \"../../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory\";\r\nimport * as i3 from \"../../../node_modules/ionic-angular/components/alert/alert-component.ngfactory\";\r\nimport * as i4 from \"../../../node_modules/ionic-angular/components/app/app-root.ngfactory\";\r\nimport * as i5 from \"../../../node_modules/ionic-angular/components/loading/loading-component.ngfactory\";\r\nimport * as i6 from \"../../../node_modules/ionic-angular/components/modal/modal-component.ngfactory\";\r\nimport * as i7 from \"../../../node_modules/ionic-angular/components/picker/picker-component.ngfactory\";\r\nimport * as i8 from \"../../../node_modules/ionic-angular/components/popover/popover-component.ngfactory\";\r\nimport * as i9 from \"../../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory\";\r\nimport * as i10 from \"../../../node_modules/ionic-angular/components/toast/toast-component.ngfactory\";\r\nimport * as i11 from \"./mapsapi.ngfactory\";\r\nimport * as i12 from \"@angular/common\";\r\nimport * as i13 from \"@angular/forms\";\r\nimport * as i14 from \"ionic-angular/module\";\r\nimport * as i15 from \"ionic-angular/util/module-loader\";\r\nimport * as i16 from \"./mapsapi\";\r\nvar MapsapiPageModuleNgFactory = i0.ɵcmf(i1.MapsapiPageModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ActionSheetCmpNgFactory, i3.AlertCmpNgFactory, i4.IonicAppNgFactory, i5.LoadingCmpNgFactory, i6.ModalCmpNgFactory, i7.PickerCmpNgFactory, i8.PopoverCmpNgFactory, i9.SelectPopoverNgFactory, i10.ToastCmpNgFactory, i11.MapsapiPageNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i12.NgLocalization, i12.NgLocaleLocalization, [i0.LOCALE_ID, [2, i12.ɵa]]), i0.ɵmpd(4608, i13.ɵi, i13.ɵi, []), i0.ɵmpd(4608, i13.FormBuilder, i13.FormBuilder, []), i0.ɵmpd(512, i12.CommonModule, i12.CommonModule, []), i0.ɵmpd(512, i13.ɵba, i13.ɵba, []), i0.ɵmpd(512, i13.FormsModule, i13.FormsModule, []), i0.ɵmpd(512, i13.ReactiveFormsModule, i13.ReactiveFormsModule, []), i0.ɵmpd(512, i14.IonicModule, i14.IonicModule, []), i0.ɵmpd(512, i14.IonicPageModule, i14.IonicPageModule, []), i0.ɵmpd(512, i1.MapsapiPageModule, i1.MapsapiPageModule, []), i0.ɵmpd(256, i15.LAZY_LOADED_TOKEN, i16.MapsapiPage, [])]); });\r\nexport { MapsapiPageModuleNgFactory as MapsapiPageModuleNgFactory };\r\n//# sourceMappingURL=mapsapi.module.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/mapsapi/mapsapi.module.ngfactory.js.pre-build-optimizer.js","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common\";\r\nimport * as i2 from \"../button/button.ngfactory\";\r\nimport * as i3 from \"../button/button\";\r\nimport * as i4 from \"../../config/config\";\r\nimport * as i5 from \"../icon/icon\";\r\nimport * as i6 from \"./navbar\";\r\nimport * as i7 from \"../app/app\";\r\nimport * as i8 from \"../../navigation/view-controller\";\r\nimport * as i9 from \"../../navigation/nav-controller\";\r\nvar styles_Navbar = [];\r\nvar RenderType_Navbar = i0.ɵcrt({ encapsulation: 2, styles: styles_Navbar, data: {} });\r\nexport { RenderType_Navbar as RenderType_Navbar };\r\nexport function View_Navbar_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"toolbar-background\"]], null, null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 8, \"button\", [[\"class\", \"back-button\"], [\"ion-button\", \"bar-button\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\r\n        var pd_0 = (_co.backButtonClick($event) !== false);\r\n        ad = (pd_0 && ad);\r\n    } return ad; }, i2.View_Button_0, i2.RenderType_Button)), i0.ɵdid(3, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵdid(4, 1097728, null, 0, i3.Button, [[8, \"bar-button\"], i4.Config, i0.ElementRef, i0.Renderer], null, null), (_l()(), i0.ɵeld(5, 0, null, 0, 2, \"ion-icon\", [[\"class\", \"back-button-icon\"], [\"role\", \"img\"]], [[2, \"hide\", null]], null, null, null, null)), i0.ɵdid(6, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵdid(7, 147456, null, 0, i5.Icon, [i4.Config, i0.ElementRef, i0.Renderer], { name: [0, \"name\"] }, null), (_l()(), i0.ɵeld(8, 0, null, 0, 2, \"span\", [[\"class\", \"back-button-text\"]], null, null, null, null, null)), i0.ɵdid(9, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), i0.ɵncd(null, 0), i0.ɵncd(null, 1), i0.ɵncd(null, 2), (_l()(), i0.ɵeld(14, 0, null, null, 2, \"div\", [[\"class\", \"toolbar-content\"]], null, null, null, null, null)), i0.ɵdid(15, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵncd(null, 3)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"toolbar-background\"; var currVal_1 = (\"toolbar-background-\" + _co._mode); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_3 = \"back-button\"; var currVal_4 = (\"back-button-\" + _co._mode); _ck(_v, 3, 0, currVal_3, currVal_4); var currVal_6 = \"back-button-icon\"; var currVal_7 = (\"back-button-icon-\" + _co._mode); _ck(_v, 6, 0, currVal_6, currVal_7); var currVal_8 = _co._bbIcon; _ck(_v, 7, 0, currVal_8); var currVal_9 = \"back-button-text\"; var currVal_10 = (\"back-button-text-\" + _co._mode); _ck(_v, 9, 0, currVal_9, currVal_10); var currVal_12 = \"toolbar-content\"; var currVal_13 = (\"toolbar-content-\" + _co._mode); _ck(_v, 15, 0, currVal_12, currVal_13); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = _co._hideBb; _ck(_v, 2, 0, currVal_2); var currVal_5 = i0.ɵnov(_v, 7)._hidden; _ck(_v, 5, 0, currVal_5); var currVal_11 = _co._backText; _ck(_v, 10, 0, currVal_11); }); }\r\nexport function View_Navbar_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ion-navbar\", [[\"class\", \"toolbar\"]], [[8, \"hidden\", 0], [2, \"statusbar-padding\", null]], null, null, View_Navbar_0, RenderType_Navbar)), i0.ɵdid(1, 49152, null, 0, i6.Navbar, [i7.App, [2, i8.ViewController], [2, i9.NavController], i4.Config, i0.ElementRef, i0.Renderer], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._hidden; var currVal_1 = i0.ɵnov(_v, 1)._sbPadding; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\r\nvar NavbarNgFactory = i0.ɵccf(\"ion-navbar\", i6.Navbar, View_Navbar_Host_0, { color: \"color\", mode: \"mode\", hideBackButton: \"hideBackButton\" }, {}, [\"[menuToggle],ion-buttons[left]\", \"ion-buttons[start]\", \"ion-buttons[end],ion-buttons[right]\", \"*\"]);\r\nexport { NavbarNgFactory as NavbarNgFactory };\r\n//# sourceMappingURL=navbar.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ionic-angular/components/toolbar/navbar.ngfactory.js.pre-build-optimizer.js","export  enum reservationEnum{\r\n    Start=1,\r\n    End=2,\r\n    TempRequest=3,\r\n    Cancel=4,\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/Enums/reservationEnum.ts","export class GeoModel{\r\n    lat?:any;\r\n    lng?:any;\r\n  }\r\n\r\n  export class GeoArea{\r\n    areaStr :any;\r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/models/MapModel.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _this = this;\nimport { CordovaInstance, InstanceCheck, InstanceProperty, IonicNativePlugin, Plugin, checkAvailability } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n];\n/**\n * @hidden\n */\nvar /**\n * @hidden\n */\nLatLng = (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\n/**\n * @hidden\n */\nexport { LatLng };\n/**\n * @hidden\n */\nvar LatLngBounds = (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    /**\n     * Converts to string\n     * @return {string}\n     */\n    /**\n       * Converts to string\n       * @return {string}\n       */\n    LatLngBounds.prototype.toString = /**\n       * Converts to string\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n     * @param precision {number}\n     * @return {string}\n     */\n    /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    LatLngBounds.prototype.toUrlValue = /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    function (precision) {\n        return;\n    };\n    /**\n     * Extends this bounds to contain the given point.\n     * @param LatLng {ILatLng}\n     */\n    /**\n       * Extends this bounds to contain the given point.\n       * @param LatLng {ILatLng}\n       */\n    LatLngBounds.prototype.extend = /**\n       * Extends this bounds to contain the given point.\n       * @param LatLng {ILatLng}\n       */\n    function (LatLng) {\n    };\n    /**\n     * Returns true if the given lat/lng is in this bounds.\n     * @param LatLng {ILatLng}\n     */\n    /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    LatLngBounds.prototype.contains = /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    function (LatLng) {\n        return;\n    };\n    /**\n     * Computes the center of this LatLngBounds\n     * @return {LatLng}\n     */\n    /**\n       * Computes the center of this LatLngBounds\n       * @return {LatLng}\n       */\n    LatLngBounds.prototype.getCenter = /**\n       * Computes the center of this LatLngBounds\n       * @return {LatLng}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], LatLngBounds.prototype, \"northeast\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], LatLngBounds.prototype, \"southwest\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", String)\n    ], LatLngBounds.prototype, \"type\", void 0);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], LatLngBounds.prototype, \"toString\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", String)\n    ], LatLngBounds.prototype, \"toUrlValue\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LatLngBounds.prototype, \"extend\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LatLngBounds.prototype, \"contains\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", LatLng)\n    ], LatLngBounds.prototype, \"getCenter\", null);\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\n/**\n * @hidden\n */\nvar VisibleRegion = (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    /**\n     * Converts to string\n     * @return {string}\n     */\n    /**\n       * Converts to string\n       * @return {string}\n       */\n    VisibleRegion.prototype.toString = /**\n       * Converts to string\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n     * @param precision {number}\n     * @return {string}\n     */\n    /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    VisibleRegion.prototype.toUrlValue = /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    function (precision) {\n        return;\n    };\n    /**\n     * Returns true if the given lat/lng is in this bounds.\n     * @param LatLng {ILatLng}\n     */\n    /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    VisibleRegion.prototype.contains = /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    function (LatLng) {\n        return;\n    };\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"northeast\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"southwest\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"farLeft\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"farRight\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"nearLeft\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"nearRight\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", String)\n    ], VisibleRegion.prototype, \"type\", void 0);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], VisibleRegion.prototype, \"toString\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", String)\n    ], VisibleRegion.prototype, \"toUrlValue\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Boolean)\n    ], VisibleRegion.prototype, \"contains\", null);\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n */\nexport var StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\n/**\n * @name Google Maps\n * @description\n * This plugin uses the native Google Maps SDK\n * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\n * @usage\n * ```typescript\n * import {\n *  GoogleMaps,\n *  GoogleMap,\n *  GoogleMapsEvent,\n *  GoogleMapOptions,\n *  CameraPosition,\n *  MarkerOptions,\n *  Marker\n * } from '@ionic-native/google-maps';\n * import { Component } from \"@angular/core/\";\n *\n * @Component({\n *   selector: 'page-home',\n *   templateUrl: 'home.html'\n * })\n * export class HomePage {\n *   map: GoogleMap;\n *   constructor() { }\n *\n *   ionViewDidLoad() {\n *    this.loadMap();\n *   }\n *\n *  loadMap() {\n *\n *     let mapOptions: GoogleMapOptions = {\n *       camera: {\n *         target: {\n *           lat: 43.0741904,\n *           lng: -89.3809802\n *         },\n *         zoom: 18,\n *         tilt: 30\n *       }\n *     }\n *\n *     this.map = GoogleMaps.create('map_canvas', mapOptions);\n *\n *     let marker: Marker = this.map.addMarkerSync({\n *       title: 'Ionic',\n *       icon: 'blue',\n *       animation: 'DROP',\n *       position: {\n *         lat: 43.0741904,\n *         lng: -89.3809802\n *       }\n *     });\n *\n *     marker.on(GoogleMapsEvent.MARKER_CLICK)\n *       .subscribe(() => {\n *         alert('clicked');\n *       });\n *     });\n *   }\n * }\n *\n * ```\n * @classes\n * GoogleMaps\n * GoogleMap\n * StreetView\n * Circle\n * Encoding\n * Environment\n * Geocoder\n * GroundOverlay\n * HtmlInfoWindow\n * Geocoder\n * LatLng\n * LatLngBounds\n * Marker\n * MarkerCluster\n * Polygon\n * Polyline\n * Spherical\n * KmlOverlay\n * Poly\n * TileOverlay\n * BaseClass\n * BaseArrayClass\n * @interfaces\n * GoogleMapOptions\n * CameraPosition\n * CircleOptions\n * GeocoderRequest\n * GeocoderResult\n * GroundOverlayOptions\n * ILatLng\n * MarkerIcon\n * MarkerOptions\n * MarkerClusterIcon\n * MarkerClusterOptions\n * MyLocation\n * MyLocationOptions\n * PolygonOptions\n * PolylineOptions\n * TileOverlayOptions\n * KmlOverlayOptions\n * VisibleRegion\n */\nvar GoogleMaps = (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GoogleMaps_1 = GoogleMaps;\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    /**\n       * Creates a new GoogleMap instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {GoogleMapOptions} [options] Options\n       * @return {GoogleMap}\n       */\n    GoogleMaps.create = /**\n       * Creates a new GoogleMap instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {GoogleMapOptions} [options] Options\n       * @return {GoogleMap}\n       */\n    function (element, options) {\n        if (checkAvailability(GoogleMaps_1.getPluginRef(), null, GoogleMaps_1.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    /**\n       * @deprecation keep this for backward compatibility.\n       * @hidden\n       */\n    GoogleMaps.prototype.create = /**\n       * @deprecation keep this for backward compatibility.\n       * @hidden\n       */\n    function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps_1.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    /**\n       * Creates a new StreetView instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {StreetViewOptions} [options] Options\n       * @return {StreetViewPanorama}\n       */\n    GoogleMaps.createPanorama = /**\n       * Creates a new StreetView instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {StreetViewOptions} [options] Options\n       * @return {StreetViewPanorama}\n       */\n    function (element, options) {\n        if (checkAvailability(GoogleMaps_1.getPluginRef(), null, GoogleMaps_1.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @name Google Maps\n     * @description\n     * This plugin uses the native Google Maps SDK\n     * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\n     * @usage\n     * ```typescript\n     * import {\n     *  GoogleMaps,\n     *  GoogleMap,\n     *  GoogleMapsEvent,\n     *  GoogleMapOptions,\n     *  CameraPosition,\n     *  MarkerOptions,\n     *  Marker\n     * } from '@ionic-native/google-maps';\n     * import { Component } from \"@angular/core/\";\n     *\n     * @Component({\n     *   selector: 'page-home',\n     *   templateUrl: 'home.html'\n     * })\n     * export class HomePage {\n     *   map: GoogleMap;\n     *   constructor() { }\n     *\n     *   ionViewDidLoad() {\n     *    this.loadMap();\n     *   }\n     *\n     *  loadMap() {\n     *\n     *     let mapOptions: GoogleMapOptions = {\n     *       camera: {\n     *         target: {\n     *           lat: 43.0741904,\n     *           lng: -89.3809802\n     *         },\n     *         zoom: 18,\n     *         tilt: 30\n     *       }\n     *     }\n     *\n     *     this.map = GoogleMaps.create('map_canvas', mapOptions);\n     *\n     *     let marker: Marker = this.map.addMarkerSync({\n     *       title: 'Ionic',\n     *       icon: 'blue',\n     *       animation: 'DROP',\n     *       position: {\n     *         lat: 43.0741904,\n     *         lng: -89.3809802\n     *       }\n     *     });\n     *\n     *     marker.on(GoogleMapsEvent.MARKER_CLICK)\n     *       .subscribe(() => {\n     *         alert('clicked');\n     *       });\n     *     });\n     *   }\n     * }\n     *\n     * ```\n     * @classes\n     * GoogleMaps\n     * GoogleMap\n     * StreetView\n     * Circle\n     * Encoding\n     * Environment\n     * Geocoder\n     * GroundOverlay\n     * HtmlInfoWindow\n     * Geocoder\n     * LatLng\n     * LatLngBounds\n     * Marker\n     * MarkerCluster\n     * Polygon\n     * Polyline\n     * Spherical\n     * KmlOverlay\n     * Poly\n     * TileOverlay\n     * BaseClass\n     * BaseArrayClass\n     * @interfaces\n     * GoogleMapOptions\n     * CameraPosition\n     * CircleOptions\n     * GeocoderRequest\n     * GeocoderResult\n     * GroundOverlayOptions\n     * ILatLng\n     * MarkerIcon\n     * MarkerOptions\n     * MarkerClusterIcon\n     * MarkerClusterOptions\n     * MyLocation\n     * MyLocationOptions\n     * PolygonOptions\n     * PolylineOptions\n     * TileOverlayOptions\n     * KmlOverlayOptions\n     * VisibleRegion\n     */\n    GoogleMaps = GoogleMaps_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: 'https://github.com/mapsplugin/cordova-plugin-googlemaps',\n            document: 'https://ionicframework.com/docs/native/google-maps/',\n            install: 'ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"',\n            installVariables: ['API_KEY_FOR_ANDROID', 'API_KEY_FOR_IOS'],\n            platforms: ['Android', 'iOS', 'Browser']\n        })\n    ], GoogleMaps);\n    return GoogleMaps;\n    var GoogleMaps_1;\n}(IonicNativePlugin));\nexport { GoogleMaps };\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar ɵ0 = displayErrorMessage;\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar ɵ1 = normalizeArgumentsOfEventListener;\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\n */\nvar BaseClass = (function () {\n    function BaseClass(objInstance) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    /**\n     * Adds an event listener.\n     * @param eventName {string} event name you want to observe.\n     * @return {Observable<any>}\n     */\n    /**\n       * Adds an event listener.\n       * @param eventName {string} event name you want to observe.\n       * @return {Observable<any>}\n       */\n    BaseClass.prototype.addEventListener = /**\n       * Adds an event listener.\n       * @param eventName {string} event name you want to observe.\n       * @return {Observable<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.addEventListener(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                observer.next(newArgs);\n            });\n        });\n    };\n    /**\n     * Attaches the handler for the event that is thrown by the target, where the minimum interval between events (in milliseconds) is specified as a parameter.\n     * @param eventName {string} event name you want to observe.\n     * @param throttleInterval {number} throttle interval in milliseconds\n     * @return {Observable<any>}\n     */\n    // addThrottledEventListener(eventName: string, throttleInterval: number): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.addThrottledEventListener(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n     * Adds an event listener that works once.\n     * @param eventName {string} event name you want to observe.\n     * @return {Promise<any>}\n     */\n    /**\n       * Attaches the handler for the event that is thrown by the target, where the minimum interval between events (in milliseconds) is specified as a parameter.\n       * @param eventName {string} event name you want to observe.\n       * @param throttleInterval {number} throttle interval in milliseconds\n       * @return {Observable<any>}\n       */\n    // addThrottledEventListener(eventName: string, throttleInterval: number): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.addThrottledEventListener(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    BaseClass.prototype.addEventListenerOnce = /**\n       * Attaches the handler for the event that is thrown by the target, where the minimum interval between events (in milliseconds) is specified as a parameter.\n       * @param eventName {string} event name you want to observe.\n       * @param throttleInterval {number} throttle interval in milliseconds\n       * @return {Observable<any>}\n       */\n    // addThrottledEventListener(eventName: string, throttleInterval: number): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.addThrottledEventListener(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.one(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                resolve(newArgs);\n            });\n        });\n    };\n    /**\n     * @deprecated\n     * Adds an event listener that works once.\n     * @param eventName {string} event name you want to observe.\n     * @return {Promise<any>}\n     */\n    /**\n       * @deprecated\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    BaseClass.prototype.addListenerOnce = /**\n       * @deprecated\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    function (eventName) {\n        console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n        return this.addEventListenerOnce(eventName);\n    };\n    /**\n     * Gets a value\n     * @param key {any}\n     */\n    /**\n       * Gets a value\n       * @param key {any}\n       */\n    BaseClass.prototype.get = /**\n       * Gets a value\n       * @param key {any}\n       */\n    function (key) {\n        return;\n    };\n    /**\n     * Sets a value\n     * @param key {string} The key name for the value. `(key)_changed` will be fired when you set value through this method.\n     * @param value {any}\n     * @param noNotify {boolean} [options] True if you want to prevent firing the `(key)_changed` event.\n     */\n    /**\n       * Sets a value\n       * @param key {string} The key name for the value. `(key)_changed` will be fired when you set value through this method.\n       * @param value {any}\n       * @param noNotify {boolean} [options] True if you want to prevent firing the `(key)_changed` event.\n       */\n    BaseClass.prototype.set = /**\n       * Sets a value\n       * @param key {string} The key name for the value. `(key)_changed` will be fired when you set value through this method.\n       * @param value {any}\n       * @param noNotify {boolean} [options] True if you want to prevent firing the `(key)_changed` event.\n       */\n    function (key, value, noNotify) {\n    };\n    /**\n     * Bind a key to another object\n     * @param key {string} The property name you want to observe.\n     * @param target {any} The target object you want to observe.\n     * @param targetKey? {string} [options]  The property name you want to observe. If you omit this, the `key` argument is used.\n     * @param noNotify? {boolean} [options] True if you want to prevent `(key)_changed` event when you bind first time, because the internal status is changed from `undefined` to something.\n     */\n    /**\n       * Bind a key to another object\n       * @param key {string} The property name you want to observe.\n       * @param target {any} The target object you want to observe.\n       * @param targetKey? {string} [options]  The property name you want to observe. If you omit this, the `key` argument is used.\n       * @param noNotify? {boolean} [options] True if you want to prevent `(key)_changed` event when you bind first time, because the internal status is changed from `undefined` to something.\n       */\n    BaseClass.prototype.bindTo = /**\n       * Bind a key to another object\n       * @param key {string} The property name you want to observe.\n       * @param target {any} The target object you want to observe.\n       * @param targetKey? {string} [options]  The property name you want to observe. If you omit this, the `key` argument is used.\n       * @param noNotify? {boolean} [options] True if you want to prevent `(key)_changed` event when you bind first time, because the internal status is changed from `undefined` to something.\n       */\n    function (key, target, targetKey, noNotify) {\n    };\n    /**\n     * Alias of `addEventListener`\n     * @param key {string} The property name you want to observe.\n     * @return {Observable<any>}\n     */\n    /**\n       * Alias of `addEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    BaseClass.prototype.on = /**\n       * Alias of `addEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.on(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                observer.next(newArgs);\n            });\n        });\n    };\n    /**\n     * Alias of `addThrottledEventListener`\n     * @param key {string} The property name you want to observe.\n     * @return {Observable<any>}\n     */\n    // @InstanceCheck({ observable: true })\n    // onThrottled(eventName: string): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.onThrottled(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n     * Alias of `addEventListenerOnce`\n     * @param key {string} The property name you want to observe.\n     * @return {Promise<any>}\n     */\n    /**\n       * Alias of `addThrottledEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    // @InstanceCheck({ observable: true })\n    // onThrottled(eventName: string): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.onThrottled(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Alias of `addEventListenerOnce`\n       * @param key {string} The property name you want to observe.\n       * @return {Promise<any>}\n       */\n    BaseClass.prototype.one = /**\n       * Alias of `addThrottledEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    // @InstanceCheck({ observable: true })\n    // onThrottled(eventName: string): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.onThrottled(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Alias of `addEventListenerOnce`\n       * @param key {string} The property name you want to observe.\n       * @return {Promise<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.one(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                resolve(newArgs);\n            });\n        });\n    };\n    /**\n     * Return true if this object has event listener for event name\n     * @param eventName {string} Event name\n     * @return {boolean}\n     */\n    /**\n       * Return true if this object has event listener for event name\n       * @param eventName {string} Event name\n       * @return {boolean}\n       */\n    BaseClass.prototype.hasEventListener = /**\n       * Return true if this object has event listener for event name\n       * @param eventName {string} Event name\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Clears all stored values\n     */\n    /**\n       * Clears all stored values\n       */\n    BaseClass.prototype.empty = /**\n       * Clears all stored values\n       */\n    function () {\n    };\n    /**\n     * Dispatch event.\n     * @param eventName {string} Event name\n     * @param parameters {any} [options] The data you want to pass to event listerners.\n     */\n    /**\n       * Dispatch event.\n       * @param eventName {string} Event name\n       * @param parameters {any} [options] The data you want to pass to event listerners.\n       */\n    BaseClass.prototype.trigger = /**\n       * Dispatch event.\n       * @param eventName {string} Event name\n       * @param parameters {any} [options] The data you want to pass to event listerners.\n       */\n    function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n    };\n    /**\n     * Executes off() and empty()\n     */\n    /**\n       * Executes off() and empty()\n       */\n    BaseClass.prototype.destroy = /**\n       * Executes off() and empty()\n       */\n    function () {\n        if (this._objectInstance.type === 'Map') {\n            var map = this._objectInstance.getMap();\n            if (map) {\n                delete this._objectInstance.getMap().get('_overlays')[this._objectInstance.getId()];\n            }\n        }\n        this._objectInstance.remove();\n    };\n    /**\n     * Remove event listener(s)\n     * The `removeEventListener()` has three usages:\n     *  - removeEventListener(\"eventName\", listenerFunction);\n     *     This removes one particular event listener\n     *  - removeEventListener(\"eventName\");\n     *     This removes the event listeners that added for the event name.\n     *  - removeEventListener();\n     *     This removes all listeners.\n     *\n     * @param eventName {string} [options] Event name\n     * @param listener {Function} [options] Event listener\n     */\n    /**\n       * Remove event listener(s)\n       * The `removeEventListener()` has three usages:\n       *  - removeEventListener(\"eventName\", listenerFunction);\n       *     This removes one particular event listener\n       *  - removeEventListener(\"eventName\");\n       *     This removes the event listeners that added for the event name.\n       *  - removeEventListener();\n       *     This removes all listeners.\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    BaseClass.prototype.removeEventListener = /**\n       * Remove event listener(s)\n       * The `removeEventListener()` has three usages:\n       *  - removeEventListener(\"eventName\", listenerFunction);\n       *     This removes one particular event listener\n       *  - removeEventListener(\"eventName\");\n       *     This removes the event listeners that added for the event name.\n       *  - removeEventListener();\n       *     This removes all listeners.\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    function (eventName, listener) { };\n    /**\n     * Alias of `removeEventListener`\n     *\n     * @param eventName {string} [options] Event name\n     * @param listener {Function} [options] Event listener\n     */\n    /**\n       * Alias of `removeEventListener`\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    BaseClass.prototype.off = /**\n       * Alias of `removeEventListener`\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    function (eventName, listener) { };\n    __decorate([\n        InstanceCheck({ observable: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], BaseClass.prototype, \"addEventListener\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"addEventListenerOnce\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"addListenerOnce\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseClass.prototype, \"get\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"set\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object, String, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"bindTo\", null);\n    __decorate([\n        InstanceCheck({ observable: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], BaseClass.prototype, \"on\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"one\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], BaseClass.prototype, \"hasEventListener\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"empty\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"trigger\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"destroy\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"removeEventListener\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"off\", null);\n    /**\n     * @hidden\n     * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\n     */\n    BaseClass = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.BaseClass',\n            repo: ''\n        }),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseClass);\n    return BaseClass;\n}());\nexport { BaseClass };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\n */\nvar BaseArrayClass = (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    /**\n     * Removes all elements from the array.\n     * @param noNotify? {boolean} [options] Set true to prevent remove_at events.\n     */\n    /**\n       * Removes all elements from the array.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at events.\n       */\n    BaseArrayClass.prototype.empty = /**\n       * Removes all elements from the array.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at events.\n       */\n    function (noNotify) {\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     */\n    /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       */\n    BaseArrayClass.prototype.forEach = /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       */\n    function (fn) {\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       * @return {Promise<void>}\n       */\n    BaseArrayClass.prototype.forEachAsync = /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       * @return {Promise<void>}\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    /**\n     * Iterate over each element, then Returns a new value.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @return {Object[]} returns a new array with the results\n     */\n    /**\n       * Iterate over each element, then Returns a new value.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @return {Object[]} returns a new array with the results\n       */\n    BaseArrayClass.prototype.map = /**\n       * Iterate over each element, then Returns a new value.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @return {Object[]} returns a new array with the results\n       */\n    function (fn) {\n        return;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    /**\n       * Iterate over each element, calling the provided callback.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    BaseArrayClass.prototype.mapAsync = /**\n       * Iterate over each element, calling the provided callback.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    /**\n       * Same as `mapAsync`, but keep the execution order\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    BaseArrayClass.prototype.mapSeries = /**\n       * Same as `mapAsync`, but keep the execution order\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    /**\n     * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @return {T[]} returns a new filtered array\n     */\n    /**\n       * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @return {T[]} returns a new filtered array\n       */\n    BaseArrayClass.prototype.filter = /**\n       * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @return {T[]} returns a new filtered array\n       */\n    function (fn) {\n        return;\n    };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    /**\n       * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<T[]>} returns a new filtered array\n       */\n    BaseArrayClass.prototype.filterAsync = /**\n       * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<T[]>} returns a new filtered array\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    /**\n     * Returns a reference to the underlying Array.\n     * @return {Object[]}\n     */\n    /**\n       * Returns a reference to the underlying Array.\n       * @return {Object[]}\n       */\n    BaseArrayClass.prototype.getArray = /**\n       * Returns a reference to the underlying Array.\n       * @return {Object[]}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the element at the specified index.\n     * @param index {number}\n     * @return {Object}\n     */\n    /**\n       * Returns the element at the specified index.\n       * @param index {number}\n       * @return {Object}\n       */\n    BaseArrayClass.prototype.getAt = /**\n       * Returns the element at the specified index.\n       * @param index {number}\n       * @return {Object}\n       */\n    function (index) {\n    };\n    /**\n     * Returns the number of the elements.\n     * @return {number}\n     */\n    /**\n       * Returns the number of the elements.\n       * @return {number}\n       */\n    BaseArrayClass.prototype.getLength = /**\n       * Returns the number of the elements.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n     * @param element {Object}\n     * @return {number}\n     */\n    /**\n       * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n       * @param element {Object}\n       * @return {number}\n       */\n    BaseArrayClass.prototype.indexOf = /**\n       * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n       * @param element {Object}\n       * @return {number}\n       */\n    function (element) {\n        return;\n    };\n    /**\n     * The reverse() method reverses an array in place.\n     */\n    /**\n       * The reverse() method reverses an array in place.\n       */\n    BaseArrayClass.prototype.reverse = /**\n       * The reverse() method reverses an array in place.\n       */\n    function () {\n    };\n    /**\n     * The sort() method sorts the elements of an array in place and returns the array.\n     */\n    /**\n       * The sort() method sorts the elements of an array in place and returns the array.\n       */\n    BaseArrayClass.prototype.sort = /**\n       * The sort() method sorts the elements of an array in place and returns the array.\n       */\n    function () {\n    };\n    /**\n     * Inserts an element at the specified index.\n     * @param index {number}\n     * @param element {Object}\n     * @param noNotify? {boolean} [options] Set true to prevent insert_at event.\n     * @return {Object}\n     */\n    /**\n       * Inserts an element at the specified index.\n       * @param index {number}\n       * @param element {Object}\n       * @param noNotify? {boolean} [options] Set true to prevent insert_at event.\n       * @return {Object}\n       */\n    BaseArrayClass.prototype.insertAt = /**\n       * Inserts an element at the specified index.\n       * @param index {number}\n       * @param element {Object}\n       * @param noNotify? {boolean} [options] Set true to prevent insert_at event.\n       * @return {Object}\n       */\n    function (index, element, noNotify) {\n    };\n    /**\n     * Removes the last element of the array and returns that element.\n     * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n     * @return {Object}\n     */\n    /**\n       * Removes the last element of the array and returns that element.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       * @return {Object}\n       */\n    BaseArrayClass.prototype.pop = /**\n       * Removes the last element of the array and returns that element.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       * @return {Object}\n       */\n    function (noNotify) {\n        return;\n    };\n    /**\n     * Adds one element to the end of the array and returns the new length of the array.\n     * @param element {object}\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\n     */\n    /**\n       * Adds one element to the end of the array and returns the new length of the array.\n       * @param element {object}\n       * @param noNotify? {boolean} Set true to prevent insert_at events.\n       */\n    BaseArrayClass.prototype.push = /**\n       * Adds one element to the end of the array and returns the new length of the array.\n       * @param element {object}\n       * @param noNotify? {boolean} Set true to prevent insert_at events.\n       */\n    function (element, noNotify) {\n    };\n    /**\n     * Removes an element from the specified index.\n     * @param index {number}\n     * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n     */\n    /**\n       * Removes an element from the specified index.\n       * @param index {number}\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       */\n    BaseArrayClass.prototype.removeAt = /**\n       * Removes an element from the specified index.\n       * @param index {number}\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       */\n    function (index, noNotify) { return; };\n    /**\n     * Sets an element at the specified index.\n     * @param index {number}\n     * @param element {object}\n     * @param noNotify? {boolean} [options] Set true to prevent set_at event.\n     */\n    /**\n       * Sets an element at the specified index.\n       * @param index {number}\n       * @param element {object}\n       * @param noNotify? {boolean} [options] Set true to prevent set_at event.\n       */\n    BaseArrayClass.prototype.setAt = /**\n       * Sets an element at the specified index.\n       * @param index {number}\n       * @param element {object}\n       * @param noNotify? {boolean} [options] Set true to prevent set_at event.\n       */\n    function (index, element, noNotify) {\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"empty\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"forEach\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"map\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"filter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"getArray\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"getAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], BaseArrayClass.prototype, \"getLength\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Number)\n    ], BaseArrayClass.prototype, \"indexOf\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"reverse\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"sort\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"insertAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"pop\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"push\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"removeAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"setAt\", null);\n    /**\n     * @hidden\n     * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\n     */\n    BaseArrayClass = __decorate([\n        Plugin({\n            pluginName: 'BaseArrayClass',\n            plugin: 'cordova-plugin-googlemaps',\n            pluginRef: 'plugin.google.maps.BaseArrayClass'\n        }),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/Circle/README.md\n */\nvar Circle = (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Circle.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Circle.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the center position.\n     * @param latLng {ILatLng}\n     */\n    /**\n       * Changes the center position.\n       * @param latLng {ILatLng}\n       */\n    Circle.prototype.setCenter = /**\n       * Changes the center position.\n       * @param latLng {ILatLng}\n       */\n    function (latLng) {\n    };\n    /**\n     * Returns the current center position\n     * @return {ILatLng}\n     */\n    /**\n       * Returns the current center position\n       * @return {ILatLng}\n       */\n    Circle.prototype.getCenter = /**\n       * Returns the current center position\n       * @return {ILatLng}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the current circle radius.\n     * @return {number}\n     */\n    /**\n       * Returns the current circle radius.\n       * @return {number}\n       */\n    Circle.prototype.getRadius = /**\n       * Returns the current circle radius.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the circle radius.\n     * @param radius {number}\n     */\n    /**\n       * Changes the circle radius.\n       * @param radius {number}\n       */\n    Circle.prototype.setRadius = /**\n       * Changes the circle radius.\n       * @param radius {number}\n       */\n    function (radius) {\n    };\n    /**\n     * Changes the filling color (inner color).\n     * @param color {string}\n     */\n    /**\n       * Changes the filling color (inner color).\n       * @param color {string}\n       */\n    Circle.prototype.setFillColor = /**\n       * Changes the filling color (inner color).\n       * @param color {string}\n       */\n    function (color) {\n    };\n    /**\n     * Returns the current circle filling color (inner color).\n     * @return {string}\n     */\n    /**\n       * Returns the current circle filling color (inner color).\n       * @return {string}\n       */\n    Circle.prototype.getFillColor = /**\n       * Returns the current circle filling color (inner color).\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the stroke width.\n     * @param strokeWidth {number}\n     */\n    /**\n       * Changes the stroke width.\n       * @param strokeWidth {number}\n       */\n    Circle.prototype.setStrokeWidth = /**\n       * Changes the stroke width.\n       * @param strokeWidth {number}\n       */\n    function (strokeWidth) {\n    };\n    /**\n     * Returns the current circle stroke width (unit: pixel).\n     * @return {number}\n     */\n    /**\n       * Returns the current circle stroke width (unit: pixel).\n       * @return {number}\n       */\n    Circle.prototype.getStrokeWidth = /**\n       * Returns the current circle stroke width (unit: pixel).\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the stroke color (outter color).\n     * @param strokeColor {string}\n     */\n    /**\n       * Changes the stroke color (outter color).\n       * @param strokeColor {string}\n       */\n    Circle.prototype.setStrokeColor = /**\n       * Changes the stroke color (outter color).\n       * @param strokeColor {string}\n       */\n    function (strokeColor) {\n    };\n    /**\n     * Returns the current circle stroke color (outer color).\n     * @return {string}\n     */\n    /**\n       * Returns the current circle stroke color (outer color).\n       * @return {string}\n       */\n    Circle.prototype.getStrokeColor = /**\n       * Returns the current circle stroke color (outer color).\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the circle.\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the circle.\n       * @param clickable {boolean}\n       */\n    Circle.prototype.setClickable = /**\n       * Changes click-ability of the circle.\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the circle is clickable.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the circle is clickable.\n       * @return {boolean}\n       */\n    Circle.prototype.getClickable = /**\n       * Returns true if the circle is clickable.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the circle zIndex order.\n     * @param zIndex {number}\n     */\n    /**\n       * Changes the circle zIndex order.\n       * @param zIndex {number}\n       */\n    Circle.prototype.setZIndex = /**\n       * Changes the circle zIndex order.\n       * @param zIndex {number}\n       */\n    function (zIndex) {\n    };\n    /**\n     * Returns the current circle zIndex.\n     * @return {number}\n     */\n    /**\n       * Returns the current circle zIndex.\n       * @return {number}\n       */\n    Circle.prototype.getZIndex = /**\n       * Returns the current circle zIndex.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the circle.\n     */\n    /**\n       * Remove the circle.\n       */\n    Circle.prototype.remove = /**\n       * Remove the circle.\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Returns the latLngBounds (rectangle) that contains the circle.\n     * @return {LatLngBounds}\n     */\n    /**\n       * Returns the latLngBounds (rectangle) that contains the circle.\n       * @return {LatLngBounds}\n       */\n    Circle.prototype.getBounds = /**\n       * Returns the latLngBounds (rectangle) that contains the circle.\n       * @return {LatLngBounds}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set circle visibility\n     * @param visible {boolean}\n     */\n    /**\n       * Set circle visibility\n       * @param visible {boolean}\n       */\n    Circle.prototype.setVisible = /**\n       * Set circle visibility\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the circle is visible.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the circle is visible.\n       * @return {boolean}\n       */\n    Circle.prototype.getVisible = /**\n       * Returns true if the circle is visible.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setCenter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Circle.prototype, \"getCenter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getRadius\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setRadius\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Circle.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", LatLngBounds)\n    ], Circle.prototype, \"getBounds\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Circle.prototype, \"getVisible\", null);\n    return Circle;\n}(BaseClass));\nexport { Circle };\n/**\n * @hidden\n */\nvar Environment = (function () {\n    function Environment() {\n    }\n    Environment_1 = Environment;\n    /**\n     * Set environment variables.\n     */\n    /**\n       * Set environment variables.\n       */\n    Environment.setEnv = /**\n       * Set environment variables.\n       */\n    function (envOptions) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    /**\n       * Get the open source software license information for Google Maps SDK for iOS.\n       * @return {Promise<any>}\n       */\n    Environment.getLicenseInfo = /**\n       * Get the open source software license information for Google Maps SDK for iOS.\n       * @return {Promise<any>}\n       */\n    function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return new Promise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    /**\n       * Specifies the background color of the app.\n       * @param color\n       */\n    Environment.setBackgroundColor = /**\n       * Specifies the background color of the app.\n       * @param color\n       */\n    function (color) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Environment.getLicenseInfo()\n       * @hidden\n       */\n    Environment.prototype.getLicenseInfo = /**\n       * @deprecation This method is static. Please use Environment.getLicenseInfo()\n       * @hidden\n       */\n    function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment_1.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Environment.setBackgroundColor()\n       * @hidden\n       */\n    Environment.prototype.setBackgroundColor = /**\n       * @deprecation This method is static. Please use Environment.setBackgroundColor()\n       * @hidden\n       */\n    function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment_1.setBackgroundColor(color);\n    };\n    /**\n     * @hidden\n     */\n    Environment = Environment_1 = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.environment',\n            repo: ''\n        })\n    ], Environment);\n    return Environment;\n    var Environment_1;\n}());\nexport { Environment };\n/**\n * @hidden\n */\nvar Geocoder = (function () {\n    function Geocoder() {\n    }\n    Geocoder_1 = Geocoder;\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Geocoder.geocode()\n       * @hidden\n       */\n    Geocoder.prototype.geocode = /**\n       * @deprecation This method is static. Please use Geocoder.geocode()\n       * @hidden\n       */\n    function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder_1.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    /**\n       * Converts position to address and vice versa\n       * @param {GeocoderRequest} request Request object with either an address or a position\n       * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n       */\n    Geocoder.geocode = /**\n       * Converts position to address and vice versa\n       * @param {GeocoderRequest} request Request object with either an address or a position\n       * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n       */\n    function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return new Promise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return new Promise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    Geocoder = Geocoder_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.Geocoder',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Geocoder);\n    return Geocoder;\n    var Geocoder_1;\n}());\nexport { Geocoder };\n/**\n * @hidden\n */\nvar LocationService = (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    /**\n       * Get the current device location without map\n       * @return {Promise<MyLocation>}\n       */\n    LocationService.getMyLocation = /**\n       * Get the current device location without map\n       * @return {Promise<MyLocation>}\n       */\n    function (options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return new Promise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    /**\n       * Return true if the application has geolocation permission\n       * @return {Promise<boolean>}\n       */\n    LocationService.hasPermission = /**\n       * Return true if the application has geolocation permission\n       * @return {Promise<boolean>}\n       */\n    function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return new Promise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    /**\n     * @hidden\n     */\n    LocationService = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.LocationService',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], LocationService);\n    return LocationService;\n}());\nexport { LocationService };\n/**\n * @hidden\n */\nvar Encoding = (function () {\n    function Encoding() {\n    }\n    Encoding_1 = Encoding;\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    /**\n       * Decodes an encoded path string into a sequence of LatLngs.\n       * @param encoded {string} an encoded path string\n       * @param precision? {number} default: 5\n       * @return {LatLng}\n       */\n    Encoding.decodePath = /**\n       * Decodes an encoded path string into a sequence of LatLngs.\n       * @param encoded {string} an encoded path string\n       * @param precision? {number} default: 5\n       * @return {LatLng}\n       */\n    function (encoded, precision) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    /**\n       * Encodes a sequence of LatLngs into an encoded path string.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n       * @return {string}\n       */\n    Encoding.encodePath = /**\n       * Encodes a sequence of LatLngs into an encoded path string.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n       * @return {string}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Encoding.decodePath()\n       * @hidden\n       */\n    Encoding.prototype.decodePath = /**\n       * @deprecation This method is static. Please use Encoding.decodePath()\n       * @hidden\n       */\n    function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding_1.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Encoding.encodePath()\n       * @hidden\n       */\n    Encoding.prototype.encodePath = /**\n       * @deprecation This method is static. Please use Encoding.encodePath()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding_1.encodePath(path);\n    };\n    /**\n     * @hidden\n     */\n    Encoding = Encoding_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.encoding',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Encoding);\n    return Encoding;\n    var Encoding_1;\n}());\nexport { Encoding };\n/**\n * @hidden\n */\nvar Poly = (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the specified location is in the polygon path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    Poly.containsLocation = /**\n       * Returns true if the specified location is in the polygon path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the specified location is on the polyline path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    Poly.isLocationOnEdge = /**\n       * Returns true if the specified location is on the polyline path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    /**\n     * @hidden\n     */\n    Poly = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.poly',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Poly);\n    return Poly;\n}());\nexport { Poly };\n/**\n * @hidden\n */\nvar Spherical = (function () {\n    function Spherical() {\n    }\n    Spherical_1 = Spherical;\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    /**\n       * Returns the distance, in meters, between two LatLngs.\n       * @param locationA {ILatLng}\n       * @param locationB {ILatLng}\n       * @return {number}\n       */\n    Spherical.computeDistanceBetween = /**\n       * Returns the distance, in meters, between two LatLngs.\n       * @param locationA {ILatLng}\n       * @param locationB {ILatLng}\n       * @return {number}\n       */\n    function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    /**\n       * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n       * @param from {ILatLng}\n       * @param distance {number}\n       * @param heading {number}\n       * @return {LatLng}\n       */\n    Spherical.computeOffset = /**\n       * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n       * @param from {ILatLng}\n       * @param distance {number}\n       * @param heading {number}\n       * @return {LatLng}\n       */\n    function (from, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    /**\n       * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n       * @param to {ILatLng} The destination LatLng.\n       * @param distance {number} The distance travelled, in meters.\n       * @param heading {number} The heading in degrees clockwise from north.\n       * @return {LatLng}\n       */\n    Spherical.computeOffsetOrigin = /**\n       * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n       * @param to {ILatLng} The destination LatLng.\n       * @param distance {number} The distance travelled, in meters.\n       * @param heading {number} The heading in degrees clockwise from north.\n       * @return {LatLng}\n       */\n    function (to, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    /**\n       * Returns the length of the given path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n       * @return {number}\n       */\n    Spherical.computeLength = /**\n       * Returns the length of the given path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n       * @return {number}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    /**\n       * Returns the area of a closed path. The computed area uses the same units as the radius.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    Spherical.computeArea = /**\n       * Returns the area of a closed path. The computed area uses the same units as the radius.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    /**\n       * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    Spherical.computeSignedArea = /**\n       * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    /**\n       * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n       * @param from {ILatLng}\n       * @param to {ILatLng}\n       * @return {number}\n       */\n    Spherical.computeHeading = /**\n       * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n       * @param from {ILatLng}\n       * @param to {ILatLng}\n       * @return {number}\n       */\n    function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    /**\n       * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n       * @param from {ILatLng}     The LatLng from which to start.\n       * @param to {ILatLng}       The LatLng toward which to travel.\n       * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n       * @return {LatLng}\n       */\n    Spherical.interpolate = /**\n       * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n       * @param from {ILatLng}     The LatLng from which to start.\n       * @param to {ILatLng}       The LatLng toward which to travel.\n       * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n       * @return {LatLng}\n       */\n    function (from, to, fraction) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n       * @hidden\n       */\n    Spherical.prototype.computeDistanceBetween = /**\n       * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n       * @hidden\n       */\n    function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical_1.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeOffset()\n       * @hidden\n       */\n    Spherical.prototype.computeOffset = /**\n       * @deprecation This method is static. Please use Spherical.computeOffset()\n       * @hidden\n       */\n    function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical_1.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n       * @hidden\n       */\n    Spherical.prototype.computeOffsetOrigin = /**\n       * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n       * @hidden\n       */\n    function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical_1.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeLength()\n       * @hidden\n       */\n    Spherical.prototype.computeLength = /**\n       * @deprecation This method is static. Please use Spherical.computeLength()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical_1.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeArea()\n       * @hidden\n       */\n    Spherical.prototype.computeArea = /**\n       * @deprecation This method is static. Please use Spherical.computeArea()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical_1.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeSignedArea()\n       * @hidden\n       */\n    Spherical.prototype.computeSignedArea = /**\n       * @deprecation This method is static. Please use Spherical.computeSignedArea()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical_1.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeHeading()\n       * @hidden\n       */\n    Spherical.prototype.computeHeading = /**\n       * @deprecation This method is static. Please use Spherical.computeHeading()\n       * @hidden\n       */\n    function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical_1.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.interpolate()\n       * @hidden\n       */\n    Spherical.prototype.interpolate = /**\n       * @deprecation This method is static. Please use Spherical.interpolate()\n       * @hidden\n       */\n    function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical_1.interpolate(from, to, fraction);\n    };\n    /**\n     * @hidden\n     */\n    Spherical = Spherical_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.spherical',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Spherical);\n    return Spherical;\n    var Spherical_1;\n}());\nexport { Spherical };\n/**\n * @hidden\n */\nvar StreetViewPanorama = (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(new Promise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            reject(new Error('Can not find the element [#' + element + ']'));\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    /**\n     * Sets the point of view for the Street View panorama.\n     */\n    /**\n       * Sets the point of view for the Street View panorama.\n       */\n    StreetViewPanorama.prototype.setPov = /**\n       * Sets the point of view for the Street View panorama.\n       */\n    function (pov) { };\n    /**\n     * Sets the StreetViewPanorama to a given location.\n     */\n    /**\n       * Sets the StreetViewPanorama to a given location.\n       */\n    StreetViewPanorama.prototype.setPosition = /**\n       * Sets the StreetViewPanorama to a given location.\n       */\n    function (cameraPosition) { };\n    /**\n     * Toggles the ability for users to use pan around on the panorama using gestures.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to use pan around on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = /**\n       * Toggles the ability for users to use pan around on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the panning gesture is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the panning gesture is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = /**\n       * Return true if the panning gesture is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Toggles the ability for users to zoom on the panorama using gestures.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to zoom on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = /**\n       * Toggles the ability for users to zoom on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the zooming gesture is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the zooming gesture is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = /**\n       * Return true if the zooming gesture is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Toggles the ability for users to see street names on the panorama.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to see street names on the panorama.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setStreetNamesEnabled = /**\n       * Toggles the ability for users to see street names on the panorama.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the street names control is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the street names control is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getStreetNamesEnabled = /**\n       * Return true if the street names control is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Toggles the ability for users to move between panoramas.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to move between panoramas.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setNavigationEnabled = /**\n       * Toggles the ability for users to move between panoramas.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the navigation control is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the navigation control is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getNavigationEnabled = /**\n       * Return true if the navigation control is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Return the navigation links (StreetViewLocation.links)\n     * @return {StreetViewNavigationLink[]}\n     */\n    /**\n       * Return the navigation links (StreetViewLocation.links)\n       * @return {StreetViewNavigationLink[]}\n       */\n    StreetViewPanorama.prototype.getLinks = /**\n       * Return the navigation links (StreetViewLocation.links)\n       * @return {StreetViewNavigationLink[]}\n       */\n    function () { return; };\n    /**\n     * Return the current location\n     * @return {StreetViewLocation}\n     */\n    /**\n       * Return the current location\n       * @return {StreetViewLocation}\n       */\n    StreetViewPanorama.prototype.getLocation = /**\n       * Return the current location\n       * @return {StreetViewLocation}\n       */\n    function () { return; };\n    /**\n     * Return the current panorama id\n     * @return {string}\n     */\n    /**\n       * Return the current panorama id\n       * @return {string}\n       */\n    StreetViewPanorama.prototype.getPanoId = /**\n       * Return the current panorama id\n       * @return {string}\n       */\n    function () { return; };\n    /**\n     * Return the current position (StreetViewLocation.latLng)\n     * @return {string}\n     */\n    /**\n       * Return the current position (StreetViewLocation.latLng)\n       * @return {string}\n       */\n    StreetViewPanorama.prototype.getPosition = /**\n       * Return the current position (StreetViewLocation.latLng)\n       * @return {string}\n       */\n    function () { return; };\n    /**\n     * Destroy a panorama completely\n     * @return {Promise<any>}\n     */\n    /**\n       * Destroy a panorama completely\n       * @return {Promise<any>}\n       */\n    StreetViewPanorama.prototype.remove = /**\n       * Destroy a panorama completely\n       * @return {Promise<any>}\n       */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.remove(function () { return resolve(); });\n        });\n    };\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setPov\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setPanningGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getPanningGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setZoomGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getZoomGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setStreetNamesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getStreetNamesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setNavigationEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getNavigationEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Array)\n    ], StreetViewPanorama.prototype, \"getLinks\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], StreetViewPanorama.prototype, \"getLocation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], StreetViewPanorama.prototype, \"getPanoId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], StreetViewPanorama.prototype, \"getPosition\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], StreetViewPanorama.prototype, \"remove\", null);\n    /**\n     * @hidden\n     */\n    StreetViewPanorama = __decorate([\n        Plugin({\n            pluginName: 'StreetViewPanorama',\n            plugin: 'cordova-plugin-googlemaps'\n        }),\n        __metadata(\"design:paramtypes\", [Object, Object])\n    ], StreetViewPanorama);\n    return StreetViewPanorama;\n}(BaseClass));\nexport { StreetViewPanorama };\n/**\n * @hidden\n */\nvar GoogleMap = (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(new Promise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            reject(new Error('Can not find the element [#' + element + ']'));\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Changes the map div\n     * @param domNode {HTMLElement | string} [options] If you want to display the map in an html element, you need to specify an element or id. If omit this argument, the map is detached from webview.\n     */\n    /**\n       * Changes the map div\n       * @param domNode {HTMLElement | string} [options] If you want to display the map in an html element, you need to specify an element or id. If omit this argument, the map is detached from webview.\n       */\n    GoogleMap.prototype.setDiv = /**\n       * Changes the map div\n       * @param domNode {HTMLElement | string} [options] If you want to display the map in an html element, you need to specify an element or id. If omit this argument, the map is detached from webview.\n       */\n    function (domNode) {\n        var _this = this;\n        if (!domNode) {\n            this._objectInstance.setDiv();\n            return;\n        }\n        if (typeof domNode === 'string') {\n            (new Promise(function (resolve, reject) {\n                var i, targets;\n                for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                    targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                    if (targets.length > 0) {\n                        targets = targets.filter(function (target) {\n                            return !target.hasAttribute('__pluginmapid');\n                        });\n                    }\n                    if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                        resolve(targets[0]);\n                        return;\n                    }\n                }\n                reject('Can not find [#' + domNode + '] element');\n            }))\n                .then(function (element) {\n                _this._objectInstance.setDiv(element);\n            });\n        }\n        else {\n            if (domNode instanceof HTMLElement &&\n                !domNode.offsetParent &&\n                domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                this._objectInstance.setDiv(domNode);\n            }\n            else {\n                throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n            }\n        }\n    };\n    /**\n     * Returns the map HTML element\n     * @return {HTMLElement}\n     */\n    /**\n       * Returns the map HTML element\n       * @return {HTMLElement}\n       */\n    GoogleMap.prototype.getDiv = /**\n       * Returns the map HTML element\n       * @return {HTMLElement}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the map type id\n     * @param mapTypeId {string}\n     */\n    /**\n       * Changes the map type id\n       * @param mapTypeId {string}\n       */\n    GoogleMap.prototype.setMapTypeId = /**\n       * Changes the map type id\n       * @param mapTypeId {string}\n       */\n    function (mapTypeId) {\n    };\n    /**\n     * Moves the camera with animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Moves the camera with animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.animateCamera = /**\n       * Moves the camera with animation\n       * @return {Promise<any>}\n       */\n    function (cameraPosition) {\n        return;\n    };\n    /**\n     * Zooming in the camera with animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming in the camera with animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.animateCameraZoomIn = /**\n       * Zooming in the camera with animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Zooming out the camera with animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming out the camera with animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.animateCameraZoomOut = /**\n       * Zooming out the camera with animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Moves the camera without animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Moves the camera without animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.moveCamera = /**\n       * Moves the camera without animation\n       * @return {Promise<any>}\n       */\n    function (cameraPosition) {\n        return;\n    };\n    /**\n     * Zooming in the camera without animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming in the camera without animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.moveCameraZoomIn = /**\n       * Zooming in the camera without animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Zooming out the camera without animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming out the camera without animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.moveCameraZoomOut = /**\n       * Zooming out the camera without animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the position of the camera.\n     * @return {CameraPosition}\n     */\n    /**\n       * Get the position of the camera.\n       * @return {CameraPosition}\n       */\n    GoogleMap.prototype.getCameraPosition = /**\n       * Get the position of the camera.\n       * @return {CameraPosition}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera target position\n     * @return {ILatLng}\n     */\n    /**\n       * Get the current camera target position\n       * @return {ILatLng}\n       */\n    GoogleMap.prototype.getCameraTarget = /**\n       * Get the current camera target position\n       * @return {ILatLng}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera zoom level\n     * @return {number}\n     */\n    /**\n       * Get the current camera zoom level\n       * @return {number}\n       */\n    GoogleMap.prototype.getCameraZoom = /**\n       * Get the current camera zoom level\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera bearing\n     * @return {number}\n     */\n    /**\n       * Get the current camera bearing\n       * @return {number}\n       */\n    GoogleMap.prototype.getCameraBearing = /**\n       * Get the current camera bearing\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera tilt (view angle)\n     * @return {number}\n     */\n    /**\n       * Get the current camera tilt (view angle)\n       * @return {number}\n       */\n    GoogleMap.prototype.getCameraTilt = /**\n       * Get the current camera tilt (view angle)\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set the center position of the camera view\n     * @param latLng {ILatLng | ILatLng[]}\n     */\n    /**\n       * Set the center position of the camera view\n       * @param latLng {ILatLng | ILatLng[]}\n       */\n    GoogleMap.prototype.setCameraTarget = /**\n       * Set the center position of the camera view\n       * @param latLng {ILatLng | ILatLng[]}\n       */\n    function (latLng) {\n    };\n    /**\n     * Set zoom level of the camera\n     * @param zoomLevel {number} Zoom level\n     */\n    /**\n       * Set zoom level of the camera\n       * @param zoomLevel {number} Zoom level\n       */\n    GoogleMap.prototype.setCameraZoom = /**\n       * Set zoom level of the camera\n       * @param zoomLevel {number} Zoom level\n       */\n    function (zoomLevel) {\n    };\n    /**\n     * Set the camera view angle\n     * @param tiltAngle {number} Tilt angle\n     */\n    /**\n       * Set the camera view angle\n       * @param tiltAngle {number} Tilt angle\n       */\n    GoogleMap.prototype.setCameraTilt = /**\n       * Set the camera view angle\n       * @param tiltAngle {number} Tilt angle\n       */\n    function (tiltAngle) { };\n    /**\n     * Set camera bearing\n     * @param bearing {any}\n     */\n    /**\n       * Set camera bearing\n       * @param bearing {any}\n       */\n    GoogleMap.prototype.setCameraBearing = /**\n       * Set camera bearing\n       * @param bearing {any}\n       */\n    function (bearing) {\n    };\n    /**\n     * Changes the center of the map by the given distance in pixels\n     * @param x {number}\n     * @param y {number}\n     */\n    /**\n       * Changes the center of the map by the given distance in pixels\n       * @param x {number}\n       * @param y {number}\n       */\n    GoogleMap.prototype.panBy = /**\n       * Changes the center of the map by the given distance in pixels\n       * @param x {number}\n       * @param y {number}\n       */\n    function (x, y) { };\n    /**\n     * Get the current visible region (southWest and northEast)\n     * @return {VisibleRegion}\n     */\n    /**\n       * Get the current visible region (southWest and northEast)\n       * @return {VisibleRegion}\n       */\n    GoogleMap.prototype.getVisibleRegion = /**\n       * Get the current visible region (southWest and northEast)\n       * @return {VisibleRegion}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current device location\n     * @return {Promise<MyLocation>}\n     */\n    /**\n       * Get the current device location\n       * @return {Promise<MyLocation>}\n       */\n    GoogleMap.prototype.getMyLocation = /**\n       * Get the current device location\n       * @return {Promise<MyLocation>}\n       */\n    function (options) {\n        return new Promise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Set false to ignore all clicks on the map\n     * @param isClickable {boolean}\n     */\n    /**\n       * Set false to ignore all clicks on the map\n       * @param isClickable {boolean}\n       */\n    GoogleMap.prototype.setClickable = /**\n       * Set false to ignore all clicks on the map\n       * @param isClickable {boolean}\n       */\n    function (isClickable) {\n    };\n    /**\n     * Destroy a map completely\n     * @return {Promise<any>}\n     */\n    /**\n       * Destroy a map completely\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.remove = /**\n       * Destroy a map completely\n       * @return {Promise<any>}\n       */\n    function () {\n        var _this = this;\n        if (this.get('_overlays')) {\n            Object.keys(this.get('_overlays')).forEach(function (overlayId) {\n                _this.get('_overlays')[overlayId] = null;\n                delete _this.get('_overlays')[overlayId];\n            });\n        }\n        return new Promise(function (resolve) {\n            _this._objectInstance.remove(function () { return resolve(); });\n        });\n    };\n    /**\n     * Remove all overlays, such as marker\n     * @return {Promise<any>}\n     */\n    /**\n       * Remove all overlays, such as marker\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.clear = /**\n       * Remove all overlays, such as marker\n       * @return {Promise<any>}\n       */\n    function () {\n        var _this = this;\n        if (this.get('_overlays')) {\n            Object.keys(this.get('_overlays')).forEach(function (overlayId) {\n                _this.get('_overlays')[overlayId] = null;\n                delete _this.get('_overlays')[overlayId];\n            });\n        }\n        return new Promise(function (resolve) {\n            _this._objectInstance.clear(function () { return resolve(); });\n        });\n    };\n    /**\n     * Convert the unit from LatLng to the pixels from the left/top of the map div\n     * @return {Promise<any>}\n     */\n    /**\n       * Convert the unit from LatLng to the pixels from the left/top of the map div\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.fromLatLngToPoint = /**\n       * Convert the unit from LatLng to the pixels from the left/top of the map div\n       * @return {Promise<any>}\n       */\n    function (latLng) {\n        return;\n    };\n    /**\n     * Convert the unit from the pixels from the left/top to the LatLng\n     * @return {Promise<LatLng>}\n     */\n    /**\n       * Convert the unit from the pixels from the left/top to the LatLng\n       * @return {Promise<LatLng>}\n       */\n    GoogleMap.prototype.fromPointToLatLng = /**\n       * Convert the unit from the pixels from the left/top to the LatLng\n       * @return {Promise<LatLng>}\n       */\n    function (point) { return; };\n    /**\n     * Set true if you want to show the MyLocation control (blue dot)\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the MyLocation control (blue dot)\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setMyLocationEnabled = /**\n       * Set true if you want to show the MyLocation control (blue dot)\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set true if you want to show the MyLocation button\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the MyLocation button\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setMyLocationButtonEnabled = /**\n       * Set true if you want to show the MyLocation button\n       * @param enabled {boolean}\n       */\n    function (enabled) { };\n    /**\n     * Get the currently focused building\n     * @return {Promise<any>}\n     */\n    /**\n       * Get the currently focused building\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.getFocusedBuilding = /**\n       * Get the currently focused building\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set true if you want to show the indoor map\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the indoor map\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setIndoorEnabled = /**\n       * Set true if you want to show the indoor map\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set true if you want to show the traffic layer\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the traffic layer\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setTrafficEnabled = /**\n       * Set true if you want to show the traffic layer\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set true if you want to show the compass button\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the compass button\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setCompassEnabled = /**\n       * Set true if you want to show the compass button\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Sets the preference for whether all gestures should be enabled or disabled\n     * @param enabled {boolean}\n     */\n    /**\n       * Sets the preference for whether all gestures should be enabled or disabled\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setAllGesturesEnabled = /**\n       * Sets the preference for whether all gestures should be enabled or disabled\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set visibility of the map\n     * @param visible {boolean}\n     */\n    /**\n       * Set visibility of the map\n       * @param visible {boolean}\n       */\n    GoogleMap.prototype.setVisible = /**\n       * Set visibility of the map\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Adjust the map padding (same as CSS padding rule)\n     * @param top {number}\n     * @param right {number}\n     * @param left {number}\n     * @param bottom {number}\n     */\n    /**\n       * Adjust the map padding (same as CSS padding rule)\n       * @param top {number}\n       * @param right {number}\n       * @param left {number}\n       * @param bottom {number}\n       */\n    GoogleMap.prototype.setPadding = /**\n       * Adjust the map padding (same as CSS padding rule)\n       * @param top {number}\n       * @param right {number}\n       * @param left {number}\n       * @param bottom {number}\n       */\n    function (top, right, bottom, left) { };\n    /**\n     * Set options\n     * @param options\n     */\n    /**\n       * Set options\n       * @param options\n       */\n    GoogleMap.prototype.setOptions = /**\n       * Set options\n       * @param options\n       */\n    function (options) {\n    };\n    /**\n     * Adds a marker\n     * @param options {MarkerOptions} options\n     * @return {Promise<Marker>}\n     */\n    /**\n       * Adds a marker\n       * @param options {MarkerOptions} options\n       * @return {Promise<Marker>}\n       */\n    GoogleMap.prototype.addMarker = /**\n       * Adds a marker\n       * @param options {MarkerOptions} options\n       * @return {Promise<Marker>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addMarker(options, function (marker) {\n                if (marker) {\n                    var overlayId_1 = marker.getId();\n                    var overlay_1 = new Marker(_this, marker);\n                    _this.get('_overlays')[overlayId_1] = overlay_1;\n                    marker.one(overlayId_1 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_1] = null;\n                            overlay_1.destroy();\n                        }\n                    });\n                    resolve(overlay_1);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a marker in synchronous\n     * @param options {MarkerOptions} options\n     * @Returns {Marker}\n     */\n    /**\n       * Adds a marker in synchronous\n       * @param options {MarkerOptions} options\n       * @Returns {Marker}\n       */\n    GoogleMap.prototype.addMarkerSync = /**\n       * Adds a marker in synchronous\n       * @param options {MarkerOptions} options\n       * @Returns {Marker}\n       */\n    function (options) {\n        var _this = this;\n        var marker = this._objectInstance.addMarker(options);\n        var overlayId = marker.getId();\n        var overlay = new Marker(this, marker);\n        this.get('_overlays')[overlayId] = overlay;\n        marker.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a marker cluster\n     * @param options {MarkerClusterOptions} options\n     * @return {Promise<MarkerCluster>}\n     */\n    /**\n       * Adds a marker cluster\n       * @param options {MarkerClusterOptions} options\n       * @return {Promise<MarkerCluster>}\n       */\n    GoogleMap.prototype.addMarkerCluster = /**\n       * Adds a marker cluster\n       * @param options {MarkerClusterOptions} options\n       * @return {Promise<MarkerCluster>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                if (markerCluster) {\n                    var overlayId_2 = markerCluster.getId();\n                    var overlay_2 = new MarkerCluster(_this, markerCluster);\n                    _this.get('_overlays')[overlayId_2] = overlay_2;\n                    markerCluster.one('remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_2] = null;\n                            overlay_2.destroy();\n                        }\n                    });\n                    markerCluster.set('_overlays', new BaseArrayClass());\n                    resolve(overlay_2);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a marker cluster in synchronous\n     * @param options {MarkerClusterOptions} options\n     * @Returns {MarkerCluster}\n     */\n    /**\n       * Adds a marker cluster in synchronous\n       * @param options {MarkerClusterOptions} options\n       * @Returns {MarkerCluster}\n       */\n    GoogleMap.prototype.addMarkerClusterSync = /**\n       * Adds a marker cluster in synchronous\n       * @param options {MarkerClusterOptions} options\n       * @Returns {MarkerCluster}\n       */\n    function (options) {\n        var _this = this;\n        var markerCluster = this._objectInstance.addMarkerCluster(options);\n        var overlayId = markerCluster.getId();\n        var overlay = new MarkerCluster(this, markerCluster);\n        this.get('_overlays')[overlayId] = overlay;\n        markerCluster.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        markerCluster.set('_overlays', new BaseArrayClass());\n        return overlay;\n    };\n    /**\n     * Adds a circle\n     * @param options {CircleOptions} options\n     * @return {Promise<Circle>}\n     */\n    /**\n       * Adds a circle\n       * @param options {CircleOptions} options\n       * @return {Promise<Circle>}\n       */\n    GoogleMap.prototype.addCircle = /**\n       * Adds a circle\n       * @param options {CircleOptions} options\n       * @return {Promise<Circle>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addCircle(options, function (circle) {\n                if (circle) {\n                    var overlayId_3 = circle.getId();\n                    var overlay_3 = new Circle(_this, circle);\n                    _this.get('_overlays')[overlayId_3] = overlay_3;\n                    circle.one(overlayId_3 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_3] = null;\n                            overlay_3.destroy();\n                        }\n                    });\n                    resolve(overlay_3);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a circle in synchronous\n     * @param options {CircleOptions} options\n     * @return {Circle}\n     */\n    /**\n       * Adds a circle in synchronous\n       * @param options {CircleOptions} options\n       * @return {Circle}\n       */\n    GoogleMap.prototype.addCircleSync = /**\n       * Adds a circle in synchronous\n       * @param options {CircleOptions} options\n       * @return {Circle}\n       */\n    function (options) {\n        var _this = this;\n        var circle = this._objectInstance.addCircle(options);\n        var overlayId = circle.getId();\n        var overlay = new Circle(this, circle);\n        this.get('_overlays')[overlayId] = overlay;\n        circle.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a polygon\n     * @param options {PolygonOptions} options\n     * @return {Promise<Polygon>}\n     */\n    /**\n       * Adds a polygon\n       * @param options {PolygonOptions} options\n       * @return {Promise<Polygon>}\n       */\n    GoogleMap.prototype.addPolygon = /**\n       * Adds a polygon\n       * @param options {PolygonOptions} options\n       * @return {Promise<Polygon>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addPolygon(options, function (polygon) {\n                if (polygon) {\n                    var overlayId_4 = polygon.getId();\n                    var overlay_4 = new Polygon(_this, polygon);\n                    _this.get('_overlays')[overlayId_4] = overlay_4;\n                    polygon.one(overlayId_4 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_4] = null;\n                            overlay_4.destroy();\n                        }\n                    });\n                    resolve(overlay_4);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a polygon in synchronous\n     * @param options {PolygonOptions} options\n     * @return {Polygon}\n     */\n    /**\n       * Adds a polygon in synchronous\n       * @param options {PolygonOptions} options\n       * @return {Polygon}\n       */\n    GoogleMap.prototype.addPolygonSync = /**\n       * Adds a polygon in synchronous\n       * @param options {PolygonOptions} options\n       * @return {Polygon}\n       */\n    function (options) {\n        var _this = this;\n        var polygon = this._objectInstance.addPolygon(options);\n        var overlayId = polygon.getId();\n        var overlay = new Polygon(this, polygon);\n        this.get('_overlays')[overlayId] = overlay;\n        polygon.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a polyline\n     * @param options {PolylineOptions} options\n     * @return {Promise<Polyline>}\n     */\n    /**\n       * Adds a polyline\n       * @param options {PolylineOptions} options\n       * @return {Promise<Polyline>}\n       */\n    GoogleMap.prototype.addPolyline = /**\n       * Adds a polyline\n       * @param options {PolylineOptions} options\n       * @return {Promise<Polyline>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addPolyline(options, function (polyline) {\n                if (polyline) {\n                    var overlayId_5 = polyline.getId();\n                    var overlay_5 = new Polyline(_this, polyline);\n                    _this.get('_overlays')[overlayId_5] = overlay_5;\n                    polyline.one(overlayId_5 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_5] = null;\n                            overlay_5.destroy();\n                        }\n                    });\n                    resolve(overlay_5);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a polyline in synchronous\n     * @param options {PolylineOptions} options\n     * @return {Polyline}\n     */\n    /**\n       * Adds a polyline in synchronous\n       * @param options {PolylineOptions} options\n       * @return {Polyline}\n       */\n    GoogleMap.prototype.addPolylineSync = /**\n       * Adds a polyline in synchronous\n       * @param options {PolylineOptions} options\n       * @return {Polyline}\n       */\n    function (options) {\n        var _this = this;\n        var polyline = this._objectInstance.addPolyline(options);\n        var overlayId = polyline.getId();\n        var overlay = new Polyline(this, polyline);\n        this.get('_overlays')[overlayId] = overlay;\n        polyline.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a tile overlay\n     * @param options {TileOverlayOptions} options\n     * @return {Promise<TileOverlay>}\n     */\n    /**\n       * Adds a tile overlay\n       * @param options {TileOverlayOptions} options\n       * @return {Promise<TileOverlay>}\n       */\n    GoogleMap.prototype.addTileOverlay = /**\n       * Adds a tile overlay\n       * @param options {TileOverlayOptions} options\n       * @return {Promise<TileOverlay>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                if (tileOverlay) {\n                    var overlayId_6 = tileOverlay.getId();\n                    var overlay_6 = new TileOverlay(_this, tileOverlay);\n                    _this.get('_overlays')[overlayId_6] = overlay_6;\n                    tileOverlay.one(overlayId_6 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_6] = null;\n                            overlay_6.destroy();\n                        }\n                    });\n                    resolve(overlay_6);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a tile overlay in synchronous\n     * @param options {TileOverlayOptions} options\n     * @return {TileOverlay}\n     */\n    /**\n       * Adds a tile overlay in synchronous\n       * @param options {TileOverlayOptions} options\n       * @return {TileOverlay}\n       */\n    GoogleMap.prototype.addTileOverlaySync = /**\n       * Adds a tile overlay in synchronous\n       * @param options {TileOverlayOptions} options\n       * @return {TileOverlay}\n       */\n    function (options) {\n        var _this = this;\n        var tileOverlay = this._objectInstance.addTileOverlay(options);\n        var overlayId = tileOverlay.getId();\n        var overlay = new TileOverlay(this, tileOverlay);\n        this.get('_overlays')[overlayId] = overlay;\n        tileOverlay.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a ground overlay\n     * @param options {GroundOverlayOptions} options\n     * @return {Promise<GroundOverlay>}\n     */\n    /**\n       * Adds a ground overlay\n       * @param options {GroundOverlayOptions} options\n       * @return {Promise<GroundOverlay>}\n       */\n    GoogleMap.prototype.addGroundOverlay = /**\n       * Adds a ground overlay\n       * @param options {GroundOverlayOptions} options\n       * @return {Promise<GroundOverlay>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                if (groundOverlay) {\n                    var overlayId_7 = groundOverlay.getId();\n                    var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                    _this.get('_overlays')[overlayId_7] = overlay_7;\n                    groundOverlay.one(overlayId_7 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_7] = null;\n                            overlay_7.destroy();\n                        }\n                    });\n                    resolve(overlay_7);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a ground overlay in synchronous\n     * @param options {GroundOverlayOptions} options\n     * @return {GroundOverlay}\n     */\n    /**\n       * Adds a ground overlay in synchronous\n       * @param options {GroundOverlayOptions} options\n       * @return {GroundOverlay}\n       */\n    GoogleMap.prototype.addGroundOverlaySync = /**\n       * Adds a ground overlay in synchronous\n       * @param options {GroundOverlayOptions} options\n       * @return {GroundOverlay}\n       */\n    function (options) {\n        var _this = this;\n        var groundOverlay = this._objectInstance.addGroundOverlay(options);\n        var overlayId = groundOverlay.getId();\n        var overlay = new GroundOverlay(this, groundOverlay);\n        this.get('_overlays')[overlayId] = overlay;\n        groundOverlay.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a kml overlay\n     * @param options {KmlOverlayOptions} options\n     * @return {Promise<KmlOverlay>}\n     */\n    /**\n       * Adds a kml overlay\n       * @param options {KmlOverlayOptions} options\n       * @return {Promise<KmlOverlay>}\n       */\n    GoogleMap.prototype.addKmlOverlay = /**\n       * Adds a kml overlay\n       * @param options {KmlOverlayOptions} options\n       * @return {Promise<KmlOverlay>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                if (kmlOverlay) {\n                    var overlayId_8 = kmlOverlay.getId();\n                    var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                    _this.get('_overlays')[overlayId_8] = overlay_8;\n                    kmlOverlay.one(overlayId_8 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_8] = null;\n                            overlay_8.destroy();\n                        }\n                    });\n                    resolve(overlay_8);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Returns the base64 encoded screen capture of the map.\n     * @param options {ToDataUrlOptions} [options] options\n     * @return {Promise<string>}\n     */\n    /**\n       * Returns the base64 encoded screen capture of the map.\n       * @param options {ToDataUrlOptions} [options] options\n       * @return {Promise<string>}\n       */\n    GoogleMap.prototype.toDataURL = /**\n       * Returns the base64 encoded screen capture of the map.\n       * @param options {ToDataUrlOptions} [options] options\n       * @return {Promise<string>}\n       */\n    function (options) { return; };\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setDiv\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", HTMLElement)\n    ], GoogleMap.prototype, \"getDiv\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMapTypeId\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCamera\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCameraZoomIn\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCameraZoomOut\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCamera\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCameraZoomIn\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCameraZoomOut\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], GoogleMap.prototype, \"getCameraPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], GoogleMap.prototype, \"getCameraTarget\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraZoom\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraTilt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraTarget\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraZoom\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraTilt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"panBy\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", VisibleRegion)\n    ], GoogleMap.prototype, \"getVisibleRegion\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"getMyLocation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"remove\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"clear\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"fromLatLngToPoint\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"fromPointToLatLng\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMyLocationEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMyLocationButtonEnabled\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"getFocusedBuilding\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setIndoorEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setTrafficEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCompassEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setAllGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number, Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setPadding\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setOptions\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addMarker\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Marker)\n    ], GoogleMap.prototype, \"addMarkerSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addMarkerCluster\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", MarkerCluster)\n    ], GoogleMap.prototype, \"addMarkerClusterSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addCircle\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Circle)\n    ], GoogleMap.prototype, \"addCircleSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addPolygon\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Polygon)\n    ], GoogleMap.prototype, \"addPolygonSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addPolyline\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Polyline)\n    ], GoogleMap.prototype, \"addPolylineSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addTileOverlay\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", TileOverlay)\n    ], GoogleMap.prototype, \"addTileOverlaySync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addGroundOverlay\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", GroundOverlay)\n    ], GoogleMap.prototype, \"addGroundOverlaySync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addKmlOverlay\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"toDataURL\", null);\n    /**\n     * @hidden\n     */\n    GoogleMap = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            plugin: 'cordova-plugin-googlemaps'\n        }),\n        __metadata(\"design:paramtypes\", [Object, Object])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\n/**\n * @hidden\n */\nvar GroundOverlay = (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    GroundOverlay.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    GroundOverlay.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the bounds of the GroundOverlay\n     * @param bounds { ILatLng[]}\n     */\n    /**\n       * Changes the bounds of the GroundOverlay\n       * @param bounds { ILatLng[]}\n       */\n    GroundOverlay.prototype.setBounds = /**\n       * Changes the bounds of the GroundOverlay\n       * @param bounds { ILatLng[]}\n       */\n    function (bounds) {\n    };\n    /**\n     * Changes the bearing of the ground overlay\n     * @param bearing {number}\n     */\n    /**\n       * Changes the bearing of the ground overlay\n       * @param bearing {number}\n       */\n    GroundOverlay.prototype.setBearing = /**\n       * Changes the bearing of the ground overlay\n       * @param bearing {number}\n       */\n    function (bearing) {\n    };\n    /**\n     * Returns the current bearing value\n     */\n    /**\n       * Returns the current bearing value\n       */\n    GroundOverlay.prototype.getBearing = /**\n       * Returns the current bearing value\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the image of the ground overlay\n     * @param imageUrl {string} URL of image\n     */\n    /**\n       * Changes the image of the ground overlay\n       * @param imageUrl {string} URL of image\n       */\n    GroundOverlay.prototype.setImage = /**\n       * Changes the image of the ground overlay\n       * @param imageUrl {string} URL of image\n       */\n    function (imageUrl) { };\n    /**\n     * Changes the opacity of the ground overlay from 0.0 to 1.0\n     * @param opacity {number}\n     */\n    /**\n       * Changes the opacity of the ground overlay from 0.0 to 1.0\n       * @param opacity {number}\n       */\n    GroundOverlay.prototype.setOpacity = /**\n       * Changes the opacity of the ground overlay from 0.0 to 1.0\n       * @param opacity {number}\n       */\n    function (opacity) {\n    };\n    /**\n     * Returns the current opacity\n     * @return {number}\n     */\n    /**\n       * Returns the current opacity\n       * @return {number}\n       */\n    GroundOverlay.prototype.getOpacity = /**\n       * Returns the current opacity\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the ground overlay\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the ground overlay\n       * @param clickable {boolean}\n       */\n    GroundOverlay.prototype.setClickable = /**\n       * Changes click-ability of the ground overlay\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the ground overlay is clickable\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the ground overlay is clickable\n       * @return {boolean}\n       */\n    GroundOverlay.prototype.getClickable = /**\n       * Returns true if the ground overlay is clickable\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes visibility of the ground overlay\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the ground overlay\n       * @param visible {boolean}\n       */\n    GroundOverlay.prototype.setVisible = /**\n       * Changes visibility of the ground overlay\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the ground overlay is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the ground overlay is visible\n       * @return {boolean}\n       */\n    GroundOverlay.prototype.getVisible = /**\n       * Returns true if the ground overlay is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the ground overlay zIndex order\n     * @param index {number}\n     */\n    /**\n       * Changes the ground overlay zIndex order\n       * @param index {number}\n       */\n    GroundOverlay.prototype.setZIndex = /**\n       * Changes the ground overlay zIndex order\n       * @param index {number}\n       */\n    function (index) {\n    };\n    /**\n     * Returns the current ground overlay zIndex\n     * @return {number}\n     */\n    /**\n       * Returns the current ground overlay zIndex\n       * @return {number}\n       */\n    GroundOverlay.prototype.getZIndex = /**\n       * Returns the current ground overlay zIndex\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the ground overlay\n     */\n    /**\n       * Remove the ground overlay\n       */\n    GroundOverlay.prototype.remove = /**\n       * Remove the ground overlay\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], GroundOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setBounds\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setImage\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], GroundOverlay.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], GroundOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"remove\", null);\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\n/**\n * @hidden\n */\nvar HtmlInfoWindow = (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    /**\n     * Changes the backgroundColor\n     * @param color {string}\n     */\n    /**\n       * Changes the backgroundColor\n       * @param color {string}\n       */\n    HtmlInfoWindow.prototype.setBackgroundColor = /**\n       * Changes the backgroundColor\n       * @param color {string}\n       */\n    function (color) {\n    };\n    /**\n     * Set your HTML contents.\n     * @param content {any} String containing text or HTML element\n     * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n     */\n    /**\n       * Set your HTML contents.\n       * @param content {any} String containing text or HTML element\n       * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n       */\n    HtmlInfoWindow.prototype.setContent = /**\n       * Set your HTML contents.\n       * @param content {any} String containing text or HTML element\n       * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n       */\n    function (content, cssOptions) {\n    };\n    /**\n     * Open the htmlInfoWindow\n     * @param marker {Marker}\n     */\n    /**\n       * Open the htmlInfoWindow\n       * @param marker {Marker}\n       */\n    HtmlInfoWindow.prototype.open = /**\n       * Open the htmlInfoWindow\n       * @param marker {Marker}\n       */\n    function (marker) {\n    };\n    /**\n     * Close the htmlInfoWindow\n     */\n    /**\n       * Close the htmlInfoWindow\n       */\n    HtmlInfoWindow.prototype.close = /**\n       * Close the htmlInfoWindow\n       */\n    function () {\n    };\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"setBackgroundColor\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"setContent\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Object)\n    ], HtmlInfoWindow.prototype, \"open\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"close\", null);\n    /**\n     * @hidden\n     */\n    HtmlInfoWindow = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.HtmlInfoWindow',\n            repo: ''\n        }),\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\n/**\n * @hidden\n */\nvar Marker = (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Marker.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Marker.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Set the marker position.\n     * @param latLng {ILatLng}\n     */\n    /**\n       * Set the marker position.\n       * @param latLng {ILatLng}\n       */\n    Marker.prototype.setPosition = /**\n       * Set the marker position.\n       * @param latLng {ILatLng}\n       */\n    function (latLng) {\n        return;\n    };\n    /**\n     * Returns the marker position.\n     * @return {ILatLng}\n     */\n    /**\n       * Returns the marker position.\n       * @return {ILatLng}\n       */\n    Marker.prototype.getPosition = /**\n       * Returns the marker position.\n       * @return {ILatLng}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Show the normal infoWindow of the marker.\n     */\n    /**\n       * Show the normal infoWindow of the marker.\n       */\n    Marker.prototype.showInfoWindow = /**\n       * Show the normal infoWindow of the marker.\n       */\n    function () {\n    };\n    /**\n     * Hide the normal infoWindow of the marker.\n     */\n    /**\n       * Hide the normal infoWindow of the marker.\n       */\n    Marker.prototype.hideInfoWindow = /**\n       * Hide the normal infoWindow of the marker.\n       */\n    function () {\n    };\n    /**\n     * Specify the animation either `DROP` or `BOUNCE`\n     * @param animation {string}\n     */\n    /**\n       * Specify the animation either `DROP` or `BOUNCE`\n       * @param animation {string}\n       */\n    Marker.prototype.setAnimation = /**\n       * Specify the animation either `DROP` or `BOUNCE`\n       * @param animation {string}\n       */\n    function (animation) {\n    };\n    /**\n     * Set true if you **do not want** to move the map when you click on the marker.\n     * @param disableAutoPan {boolean}\n     */\n    /**\n       * Set true if you **do not want** to move the map when you click on the marker.\n       * @param disableAutoPan {boolean}\n       */\n    Marker.prototype.setDisableAutoPan = /**\n       * Set true if you **do not want** to move the map when you click on the marker.\n       * @param disableAutoPan {boolean}\n       */\n    function (disableAutoPan) {\n    };\n    /**\n     * Set false if you want to hide the marker.\n     * @param visible\n     */\n    /**\n       * Set false if you want to hide the marker.\n       * @param visible\n       */\n    Marker.prototype.setVisible = /**\n       * Set false if you want to hide the marker.\n       * @param visible\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the marker is visible\n     */\n    /**\n       * Returns true if the marker is visible\n       */\n    Marker.prototype.isVisible = /**\n       * Returns true if the marker is visible\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes title of the normal infoWindow.\n     * @param title {string}\n     */\n    /**\n       * Changes title of the normal infoWindow.\n       * @param title {string}\n       */\n    Marker.prototype.setTitle = /**\n       * Changes title of the normal infoWindow.\n       * @param title {string}\n       */\n    function (title) {\n    };\n    /**\n     * Returns the title strings.\n     * @return {string}\n     */\n    /**\n       * Returns the title strings.\n       * @return {string}\n       */\n    Marker.prototype.getTitle = /**\n       * Returns the title strings.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes snippet of the normal infoWindow.\n     * @param snippet {string}\n     */\n    /**\n       * Changes snippet of the normal infoWindow.\n       * @param snippet {string}\n       */\n    Marker.prototype.setSnippet = /**\n       * Changes snippet of the normal infoWindow.\n       * @param snippet {string}\n       */\n    function (snippet) {\n    };\n    /**\n     * Returns the snippet strings.\n     * @return {string}\n     */\n    /**\n       * Returns the snippet strings.\n       * @return {string}\n       */\n    Marker.prototype.getSnippet = /**\n       * Returns the snippet strings.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the marker opacity from 0.0 to 1.0.\n     * @param alpha {number} Opacity\n     */\n    /**\n       * Changes the marker opacity from 0.0 to 1.0.\n       * @param alpha {number} Opacity\n       */\n    Marker.prototype.setOpacity = /**\n       * Changes the marker opacity from 0.0 to 1.0.\n       * @param alpha {number} Opacity\n       */\n    function (alpha) {\n    };\n    /**\n     * Returns the marker opacity.\n     * @return {number} Opacity\n     */\n    /**\n       * Returns the marker opacity.\n       * @return {number} Opacity\n       */\n    Marker.prototype.getOpacity = /**\n       * Returns the marker opacity.\n       * @return {number} Opacity\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the marker.\n     */\n    /**\n       * Remove the marker.\n       */\n    Marker.prototype.remove = /**\n       * Remove the marker.\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Changes the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n     * @param x {number} Distance from left of the icon image in pixels.\n     * @param y {number} Distance from top of the icon image in pixels.\n     */\n    /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    Marker.prototype.setIconAnchor = /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    function (x, y) {\n    };\n    /**\n     * Changes the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n     * @param x {number} Distance from left of the icon image in pixels.\n     * @param y {number} Distance from top of the icon image in pixels.\n     */\n    /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    Marker.prototype.setInfoWindowAnchor = /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    function (x, y) {\n    };\n    /**\n     * Returns true if the infoWindow is shown on the marker\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the infoWindow is shown on the marker\n       * @return {boolean}\n       */\n    Marker.prototype.isInfoWindowShown = /**\n       * Returns true if the infoWindow is shown on the marker\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n     * @param y {number} z-index\n     */\n    /**\n       * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n       * @param y {number} z-index\n       */\n    Marker.prototype.setZIndex = /**\n       * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n       * @param y {number} z-index\n       */\n    function (zIndex) {\n    };\n    /**\n     * Get z-index\n     * @return {number}\n     */\n    /**\n       * Get z-index\n       * @return {number}\n       */\n    Marker.prototype.getZIndex = /**\n       * Get z-index\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set true if you allow all users to drag the marker.\n     * @param draggable {boolean}\n     */\n    /**\n       * Set true if you allow all users to drag the marker.\n       * @param draggable {boolean}\n       */\n    Marker.prototype.setDraggable = /**\n       * Set true if you allow all users to drag the marker.\n       * @param draggable {boolean}\n       */\n    function (draggable) {\n    };\n    /**\n     * Returns true if the marker drag is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the marker drag is enabled.\n       * @return {boolean}\n       */\n    Marker.prototype.isDraggable = /**\n       * Returns true if the marker drag is enabled.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set true if you want to be flat marker.\n     * @param flat {boolean}\n     */\n    /**\n       * Set true if you want to be flat marker.\n       * @param flat {boolean}\n       */\n    Marker.prototype.setFlat = /**\n       * Set true if you want to be flat marker.\n       * @param flat {boolean}\n       */\n    function (flat) {\n        return;\n    };\n    /**\n     * Changes icon url and/or size\n     * @param icon\n     */\n    /**\n       * Changes icon url and/or size\n       * @param icon\n       */\n    Marker.prototype.setIcon = /**\n       * Changes icon url and/or size\n       * @param icon\n       */\n    function (icon) {\n        return;\n    };\n    /**\n     * Set the marker rotation angle.\n     * @param rotation {number}\n     */\n    /**\n       * Set the marker rotation angle.\n       * @param rotation {number}\n       */\n    Marker.prototype.setRotation = /**\n       * Set the marker rotation angle.\n       * @param rotation {number}\n       */\n    function (rotation) {\n    };\n    /**\n     * Returns the marker rotation angle.\n     * @return {number}\n     */\n    /**\n       * Returns the marker rotation angle.\n       * @return {number}\n       */\n    Marker.prototype.getRotation = /**\n       * Returns the marker rotation angle.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Marker.prototype, \"getPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"showInfoWindow\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"hideInfoWindow\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setAnimation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setDisableAutoPan\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setTitle\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getTitle\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setSnippet\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getSnippet\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setIconAnchor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setInfoWindowAnchor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isInfoWindowShown\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setDraggable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isDraggable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setFlat\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setIcon\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setRotation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getRotation\", null);\n    return Marker;\n}(BaseClass));\nexport { Marker };\n/**\n * @hidden\n */\nvar MarkerCluster = (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    MarkerCluster.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Add one marker location\n     * @param marker {MarkerOptions} one location\n     * @param skipRedraw? {boolean} marker cluster does not redraw the marker cluster if true.\n     */\n    /**\n       * Add one marker location\n       * @param marker {MarkerOptions} one location\n       * @param skipRedraw? {boolean} marker cluster does not redraw the marker cluster if true.\n       */\n    MarkerCluster.prototype.addMarker = /**\n       * Add one marker location\n       * @param marker {MarkerOptions} one location\n       * @param skipRedraw? {boolean} marker cluster does not redraw the marker cluster if true.\n       */\n    function (marker) {\n    };\n    /**\n     * Add marker locations\n     * @param markers {MarkerOptions[]} multiple location\n     */\n    /**\n       * Add marker locations\n       * @param markers {MarkerOptions[]} multiple location\n       */\n    MarkerCluster.prototype.addMarkers = /**\n       * Add marker locations\n       * @param markers {MarkerOptions[]} multiple location\n       */\n    function (markers) {\n    };\n    /**\n     * Remove the marker cluster\n     */\n    /**\n       * Remove the marker cluster\n       */\n    MarkerCluster.prototype.remove = /**\n       * Remove the marker cluster\n       */\n    function () {\n        this._objectInstance.set('_overlays', undefined);\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    MarkerCluster.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], MarkerCluster.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"addMarker\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"addMarkers\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"remove\", null);\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\n/**\n * @hidden\n */\nvar Polygon = (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Polygon.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Polygon.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the polygon points.\n     * @param points {ILatLng[]}\n     */\n    /**\n       * Changes the polygon points.\n       * @param points {ILatLng[]}\n       */\n    Polygon.prototype.setPoints = /**\n       * Changes the polygon points.\n       * @param points {ILatLng[]}\n       */\n    function (points) {\n    };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    Polygon.prototype.getPoints = /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    /**\n     * Changes the polygon holes.\n     * @param holes {ILatLng[][]}\n     */\n    /**\n       * Changes the polygon holes.\n       * @param holes {ILatLng[][]}\n       */\n    Polygon.prototype.setHoles = /**\n       * Changes the polygon holes.\n       * @param holes {ILatLng[][]}\n       */\n    function (holes) {\n    };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the holes.\n       * @return {BaseArrayClass<ILatLng[]>}\n       */\n    Polygon.prototype.getHoles = /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the holes.\n       * @return {BaseArrayClass<ILatLng[]>}\n       */\n    function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    /**\n     * Changes the filling color (inner color)\n     * @param fillColor {string}\n     */\n    /**\n       * Changes the filling color (inner color)\n       * @param fillColor {string}\n       */\n    Polygon.prototype.setFillColor = /**\n       * Changes the filling color (inner color)\n       * @param fillColor {string}\n       */\n    function (fillColor) {\n    };\n    /**\n     * Returns the current polygon filling color (inner color).\n     * @return {string}\n     */\n    /**\n       * Returns the current polygon filling color (inner color).\n       * @return {string}\n       */\n    Polygon.prototype.getFillColor = /**\n       * Returns the current polygon filling color (inner color).\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the stroke color (outer color)\n     * @param strokeColor {string}\n     */\n    /**\n       * Changes the stroke color (outer color)\n       * @param strokeColor {string}\n       */\n    Polygon.prototype.setStrokeColor = /**\n       * Changes the stroke color (outer color)\n       * @param strokeColor {string}\n       */\n    function (strokeColor) {\n    };\n    /**\n     * Returns the current polygon stroke color (outer color)\n     * @return {string}\n     */\n    /**\n       * Returns the current polygon stroke color (outer color)\n       * @return {string}\n       */\n    Polygon.prototype.getStrokeColor = /**\n       * Returns the current polygon stroke color (outer color)\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the polygon\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the polygon\n       * @param clickable {boolean}\n       */\n    Polygon.prototype.setClickable = /**\n       * Changes click-ability of the polygon\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the polygon is clickable\n     */\n    /**\n       * Returns true if the polygon is clickable\n       */\n    Polygon.prototype.getClickable = /**\n       * Returns true if the polygon is clickable\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes visibility of the polygon\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the polygon\n       * @param visible {boolean}\n       */\n    Polygon.prototype.setVisible = /**\n       * Changes visibility of the polygon\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the polygon is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polygon is visible\n       * @return {boolean}\n       */\n    Polygon.prototype.getVisible = /**\n       * Returns true if the polygon is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polygon zIndex order.\n     * @param zIndex {number}\n     */\n    /**\n       * Changes the polygon zIndex order.\n       * @param zIndex {number}\n       */\n    Polygon.prototype.setZIndex = /**\n       * Changes the polygon zIndex order.\n       * @param zIndex {number}\n       */\n    function (zIndex) {\n    };\n    /**\n     * Returns the current polygon zIndex\n     * @return {number}\n     */\n    /**\n       * Returns the current polygon zIndex\n       * @return {number}\n       */\n    Polygon.prototype.getZIndex = /**\n       * Returns the current polygon zIndex\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the polygon.\n     */\n    /**\n       * Remove the polygon.\n       */\n    Polygon.prototype.remove = /**\n       * Remove the polygon.\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Changes the polygon stroke width\n     */\n    /**\n       * Changes the polygon stroke width\n       */\n    Polygon.prototype.setStrokeWidth = /**\n       * Changes the polygon stroke width\n       */\n    function (strokeWidth) {\n    };\n    /**\n     * Returns the polygon stroke width\n     */\n    /**\n       * Returns the polygon stroke width\n       */\n    Polygon.prototype.getStrokeWidth = /**\n       * Returns the polygon stroke width\n       */\n    function () {\n        return;\n    };\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n     * @param geodesic {boolean}\n     */\n    /**\n       * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geodesic {boolean}\n       */\n    Polygon.prototype.setGeodesic = /**\n       * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geodesic {boolean}\n       */\n    function (geodesic) {\n    };\n    /**\n     * Returns true if the polygon is geodesic.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polygon is geodesic.\n       * @return {boolean}\n       */\n    Polygon.prototype.getGeodesic = /**\n       * Returns true if the polygon is geodesic.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setPoints\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setHoles\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polygon.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polygon.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setGeodesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getGeodesic\", null);\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\n/**\n * @hidden\n */\nvar Polyline = (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Polyline.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Polyline.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the polyline points.\n     * @param points {ILatLng[]}\n     */\n    /**\n       * Changes the polyline points.\n       * @param points {ILatLng[]}\n       */\n    Polyline.prototype.setPoints = /**\n       * Changes the polyline points.\n       * @param points {ILatLng[]}\n       */\n    function (points) {\n    };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    /**\n       * Returns an instance of the BaseArrayClass\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    Polyline.prototype.getPoints = /**\n       * Returns an instance of the BaseArrayClass\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    /**\n     * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n     * @param geoDesic {boolean}\n     */\n    /**\n       * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geoDesic {boolean}\n       */\n    Polyline.prototype.setGeoDesic = /**\n       * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geoDesic {boolean}\n       */\n    function (geoDesic) {\n    };\n    /**\n     * Returns true if the polyline is geodesic\n     */\n    /**\n       * Returns true if the polyline is geodesic\n       */\n    Polyline.prototype.getGeodesic = /**\n       * Returns true if the polyline is geodesic\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes visibility of the polyline\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the polyline\n       * @param visible {boolean}\n       */\n    Polyline.prototype.setVisible = /**\n       * Changes visibility of the polyline\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the polyline is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polyline is visible\n       * @return {boolean}\n       */\n    Polyline.prototype.getVisible = /**\n       * Returns true if the polyline is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the polyline\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the polyline\n       * @param clickable {boolean}\n       */\n    Polyline.prototype.setClickable = /**\n       * Changes click-ability of the polyline\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the polyline is clickable\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polyline is clickable\n       * @return {boolean}\n       */\n    Polyline.prototype.getClickable = /**\n       * Returns true if the polyline is clickable\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polyline color\n     * @param strokeColor {string}\n     */\n    /**\n       * Changes the polyline color\n       * @param strokeColor {string}\n       */\n    Polyline.prototype.setStrokeColor = /**\n       * Changes the polyline color\n       * @param strokeColor {string}\n       */\n    function (strokeColor) {\n    };\n    /**\n     * Returns the current polyline color\n     * @return {string}\n     */\n    /**\n       * Returns the current polyline color\n       * @return {string}\n       */\n    Polyline.prototype.getStrokeColor = /**\n       * Returns the current polyline color\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polyline stroke width\n     * @param strokeWidth {number}\n     */\n    /**\n       * Changes the polyline stroke width\n       * @param strokeWidth {number}\n       */\n    Polyline.prototype.setStrokeWidth = /**\n       * Changes the polyline stroke width\n       * @param strokeWidth {number}\n       */\n    function (strokeWidth) {\n    };\n    /**\n     * Returns the current stroke width (unit: pixel).\n     * @return {number}\n     */\n    /**\n       * Returns the current stroke width (unit: pixel).\n       * @return {number}\n       */\n    Polyline.prototype.getStrokeWidth = /**\n       * Returns the current stroke width (unit: pixel).\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polyline zIndex order.\n     * @param index {number}\n     */\n    /**\n       * Changes the polyline zIndex order.\n       * @param index {number}\n       */\n    Polyline.prototype.setZIndex = /**\n       * Changes the polyline zIndex order.\n       * @param index {number}\n       */\n    function (index) {\n    };\n    /**\n     * Returns the current polyline zIndex\n     * @return {number}\n     */\n    /**\n       * Returns the current polyline zIndex\n       * @return {number}\n       */\n    Polyline.prototype.getZIndex = /**\n       * Returns the current polyline zIndex\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the polyline\n     */\n    /**\n       * Remove the polyline\n       */\n    Polyline.prototype.remove = /**\n       * Remove the polyline\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polyline.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setPoints\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setGeoDesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getGeodesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polyline.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polyline.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polyline.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"remove\", null);\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\n/**\n * @hidden\n */\nvar TileOverlay = (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    TileOverlay.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    TileOverlay.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Set whether the tiles should fade in.\n     * @param fadeIn {boolean}\n     */\n    /**\n       * Set whether the tiles should fade in.\n       * @param fadeIn {boolean}\n       */\n    TileOverlay.prototype.setFadeIn = /**\n       * Set whether the tiles should fade in.\n       * @param fadeIn {boolean}\n       */\n    function (fadeIn) {\n    };\n    /**\n     * Get whether the tiles should fade in\n     * @return {boolean}\n     */\n    /**\n       * Get whether the tiles should fade in\n       * @return {boolean}\n       */\n    TileOverlay.prototype.getFadeIn = /**\n       * Get whether the tiles should fade in\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set the zIndex of the tile overlay\n     * @param zIndex {number}\n     */\n    /**\n       * Set the zIndex of the tile overlay\n       * @param zIndex {number}\n       */\n    TileOverlay.prototype.setZIndex = /**\n       * Set the zIndex of the tile overlay\n       * @param zIndex {number}\n       */\n    function (zIndex) {\n    };\n    /**\n     * Returns the zIndex of the tile overlay\n     * @return {number}\n     */\n    /**\n       * Returns the zIndex of the tile overlay\n       * @return {number}\n       */\n    TileOverlay.prototype.getZIndex = /**\n       * Returns the zIndex of the tile overlay\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set the opacity of the tile overlay\n     * @param opacity {number}\n     */\n    /**\n       * Set the opacity of the tile overlay\n       * @param opacity {number}\n       */\n    TileOverlay.prototype.setOpacity = /**\n       * Set the opacity of the tile overlay\n       * @param opacity {number}\n       */\n    function (opacity) {\n    };\n    /**\n     * Returns the opacity of the tile overlay\n     * @return {number}\n     */\n    /**\n       * Returns the opacity of the tile overlay\n       * @return {number}\n       */\n    TileOverlay.prototype.getOpacity = /**\n       * Returns the opacity of the tile overlay\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set false if you want to hide\n     * @param visible {boolean}\n     */\n    /**\n       * Set false if you want to hide\n       * @param visible {boolean}\n       */\n    TileOverlay.prototype.setVisible = /**\n       * Set false if you want to hide\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the tile overlay is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the tile overlay is visible\n       * @return {boolean}\n       */\n    TileOverlay.prototype.getVisible = /**\n       * Returns true if the tile overlay is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get tile size\n     */\n    /**\n       * Get tile size\n       */\n    TileOverlay.prototype.getTileSize = /**\n       * Get tile size\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the tile overlay\n     */\n    /**\n       * Remove the tile overlay\n       */\n    TileOverlay.prototype.remove = /**\n       * Remove the tile overlay\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], TileOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setFadeIn\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], TileOverlay.prototype, \"getFadeIn\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], TileOverlay.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], TileOverlay.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], TileOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], TileOverlay.prototype, \"getTileSize\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"remove\", null);\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\n/**\n * @hidden\n */\nvar KmlOverlay = (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    /**\n     * Returns the viewport to contains all overlays\n     */\n    /**\n       * Returns the viewport to contains all overlays\n       */\n    KmlOverlay.prototype.getDefaultViewport = /**\n       * Returns the viewport to contains all overlays\n       */\n    function () { return; };\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    KmlOverlay.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () { return; };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    KmlOverlay.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () { return this._map; };\n    /**\n     * Changes visibility of the kml overlay\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the kml overlay\n       * @param visible {boolean}\n       */\n    KmlOverlay.prototype.setVisible = /**\n       * Changes visibility of the kml overlay\n       * @param visible {boolean}\n       */\n    function (visible) { };\n    /**\n     * Returns true if the kml overlay is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the kml overlay is visible\n       * @return {boolean}\n       */\n    KmlOverlay.prototype.getVisible = /**\n       * Returns true if the kml overlay is visible\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Changes click-ability of the KmlOverlay\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the KmlOverlay\n       * @param clickable {boolean}\n       */\n    KmlOverlay.prototype.setClickable = /**\n       * Changes click-ability of the KmlOverlay\n       * @param clickable {boolean}\n       */\n    function (clickable) { };\n    /**\n     * Returns true if the KmlOverlay is clickable\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the KmlOverlay is clickable\n       * @return {boolean}\n       */\n    KmlOverlay.prototype.getClickable = /**\n       * Returns true if the KmlOverlay is clickable\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Remove the KmlOverlay\n     */\n    /**\n       * Remove the KmlOverlay\n       */\n    KmlOverlay.prototype.remove = /**\n       * Remove the KmlOverlay\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], KmlOverlay.prototype, \"getDefaultViewport\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], KmlOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], KmlOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], KmlOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], KmlOverlay.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], KmlOverlay.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], KmlOverlay.prototype, \"remove\", null);\n    return KmlOverlay;\n}(BaseClass));\nexport { KmlOverlay };\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=index.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@ionic-native/google-maps/index.js.pre-build-optimizer.js","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/fromEvent.js\n// module id = 284\n// module chunks = 0 1","export  enum vehiclesIcons{\r\n    Moto=\"assets/imgs/marker.png\"\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/Enums/vehiclesIcons.ts"]}