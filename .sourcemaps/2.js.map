{"version":3,"sources":["../../src/pages/scan-code/scan-code.module.ts","../../src/providers/Enums/reservationEnum.ts","../../src/pages/scan-code/scan-code.ts","../../src/models/vehicaleModel.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ScanCodePage } from './scan-code';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ScanCodePage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ScanCodePage),\r\n  ],\r\n})\r\nexport class ScanCodePageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/scan-code/scan-code.module.ts","export  enum reservationEnum{\r\n    Start=1,\r\n    End=2,\r\n    TempRequest=3,\r\n    Cancel=4,\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/Enums/reservationEnum.ts","import { Component, OnInit } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, MenuController, Platform, LoadingController } from 'ionic-angular';\r\nimport { QRScanner, QRScannerStatus } from '@ionic-native/qr-scanner';\r\nimport { Diagnostic } from '@ionic-native/diagnostic';\r\nimport { vehicaleReservationModel } from '../../models/vehicaleModel';\r\nimport { reservationEnum } from '../../providers/Enums/reservationEnum';\r\nimport { VehiclsProvider } from '../../providers/Map/vechilsApi';\r\nimport { AlertsProvider } from '../../providers/generic/AlertsProvider';\r\nimport { UserStateProvider } from '../../providers/userstate/user-state';\r\n/**\r\n * Generated class for the ScanCodePage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-scan-code',\r\n  templateUrl: 'scan-code.html',\r\n})\r\nexport class ScanCodePage implements OnInit {\r\n  reservationModel: vehicaleReservationModel;\r\n  constructor(public navCtrl: NavController, public navParams: NavParams, private platform: Platform,\r\n    private diagnostic: Diagnostic, private qrScanner: QRScanner, private menu: MenuController, \r\n    private _alertsService: AlertsProvider, public _VehiclsProvider: VehiclsProvider, private _userState: UserStateProvider) {\r\n\r\n    this.reservationModel = new vehicaleReservationModel();\r\n    this.reservationModel.vehicleId = navParams.get('vId');\r\n\r\n    this.reservationModel.riderId = 1;\r\n    this.reservationModel.reservationEnum = reservationEnum.Start;\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.menu.swipeEnable(true);\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    this.qrScanner.hide();\r\n    this.qrScanner.destroy();\r\n    this.menu.swipeEnable(false);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.reservationModel.qrStr = \"ccc\";\r\n    this.reservVechil();\r\n    return;\r\n    // this.platform.ready().then(() => {\r\n\r\n    //   this.diagnostic.requestCameraAuthorization()\r\n    //     .then((state) => {\r\n    //       console.log(JSON.stringify(state));\r\n\r\n    //       this.qrScanner.prepare()\r\n    //         .then((status: QRScannerStatus) => {\r\n    //           if (status.authorized) {\r\n    //             // camera permission was granted\r\n\r\n    //             this.qrScanner.show();\r\n    //             // start scanning\r\n    //             let scanSub = this.qrScanner.scan().subscribe((text: string) => {\r\n    //               this.reservationModel.qrStr = text;\r\n\r\n    //               this._VehiclsProvider.reserve(this.reservationModel).subscribe(returnData => {\r\n    //                 console.log(returnData);\r\n\r\n    //                 if (returnData.IsDone) {\r\n    //                   this.qrScanner.hide(); // hide camera preview\r\n    //                   scanSub.unsubscribe(); // stop scanning\r\n\r\n    //                   // this.reservVechil();\r\n    //                 }\r\n\r\n    //               });\r\n    //             });\r\n\r\n    //           } else if (status.denied) {\r\n    //             // camera permission was permanently denied\r\n    //             // you must use QRScanner.openSettings() method to guide the user to the settings page\r\n    //             // then they can grant the permission from there\r\n    //           } else {\r\n    //             // permission was denied, but not permanently. You can ask for permission again at a later time.\r\n    //           }\r\n    //         })\r\n    //         .catch((e: any) => console.log('Error is', e));\r\n\r\n    //     }).catch(e => console.error(e));\r\n\r\n\r\n    // });\r\n  }\r\n\r\n\r\n  ionViewDidLoad() {\r\n\r\n  }\r\n\r\n\r\n  reservVechil() {//id: number\r\n    //this._alertsService.showConfirmationDialog(id.toString(), \"\");\r\n\r\n    // this.reservationModel = new vehicaleReservationModel();\r\n    // this.reservationModel.vehicleId = \"3\";\r\n\r\n    // this.reservationModel.riderId = 1;\r\n    // this.reservationModel.reservationEnum = reservationEnum.Start;\r\n    this._alertsService.showLoader();\r\n    this._VehiclsProvider.reserve(this.reservationModel).subscribe(returnData => {\r\n      console.log(returnData);\r\n\r\n      this._alertsService.hideLoader();\r\n      if (returnData.IsDone) {\r\n        this.reservationModel.tripId=returnData.ResponseIdStr;\r\n        this._userState.setRideStatus(this.reservationModel);\r\n        this.navCtrl.setRoot(\"MapsPage\");\r\n      } else {\r\n        this._alertsService.showWarningToaster(returnData.ErrorMessegesStr);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/scan-code/scan-code.ts","import { vehiclesIcons } from \"../providers/Enums/vehiclesIcons\";\r\nimport { reservationEnum } from \"../providers/Enums/reservationEnum\";\r\n\r\nexport interface vehicaleModel {\r\n    id: string,\r\n    name: string,\r\n    avilable: boolean,\r\n    description: string,\r\n    iconImageEnum: vehiclesIcons,\r\n    ImageUrl: string,\r\n    Lat: number,\r\n    Lng: number\r\n}\r\n\r\nexport class vehicaleReservationModel {\r\n    tripId: null;\r\n    riderId: number;\r\n    vehicleId: string;\r\n    qrStr: string;\r\n    reservationEnum: reservationEnum;\r\n    returnObj:any;\r\n    needPrepare:boolean;\r\n    rateValue:number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/vehicaleModel.ts"],"sourceRoot":""}