{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/models/usermodel.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAUpC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAR3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;ACZ5B;AAAA;AAAA;AAAA;AAAA;IAAA;IAMA,CAAC;IAAD,gBAAC;AAAD,CAAC;;AAED;IAAA;IASA,CAAC;IAAD,oBAAC;AAAD,CAAC;;AACD;IAAA;IAIA,CAAC;IAAD,kBAAC;AAAD,CAAC;;AACD;IAAA;QACE,WAAM,GAAS,yBAAyB,CAAC;IAG3C,CAAC;IAAD,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BiD;AACyE;AAGlF;AACgB;AACgB;AACzB;AACI;AAEoB;AAExE;;;;;GAKG;AAOH;IAIE,mBAAmB,OAAsB,EAAS,WAA8B,EACvE,SAA0B,EAAU,IAAoB,EACvD,OAAgB,EAAU,IAAW,EAAQ,SAAoB,EAClE,KAAmB,EAAU,SAA4B,EAAQ,OAAuB;QAH9E,YAAO,GAAP,OAAO,CAAe;QAAS,gBAAW,GAAX,WAAW,CAAmB;QACvE,cAAS,GAAT,SAAS,CAAiB;QAAU,SAAI,GAAJ,IAAI,CAAgB;QACvD,YAAO,GAAP,OAAO,CAAS;QAAU,SAAI,GAAJ,IAAI,CAAO;QAAQ,cAAS,GAAT,SAAS,CAAW;QAClE,UAAK,GAAL,KAAK,CAAc;QAAU,cAAS,GAAT,SAAS,CAAmB;QAAQ,YAAO,GAAP,OAAO,CAAgB;QAE/F,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,qEAAU,EAAE,CAAC;IACrC,CAAC;IAED,4BAAQ,GAAR;IACA,CAAC;IACD,mCAAe,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IACM,yBAAK,GAAZ;QACE,4DAA4D;QAC5D,+BAA+B;QAE/B,oFAAoF;QACpF,wCAAwC;QACxC,wBAAwB;QACxB,6CAA6C;QAC7C,mDAAmD;QACnD,yDAAyD;QACzD,aAAa;QACb,aAAa;QACb,mEAAmE;QACnE,MAAM;QACN,IAAI;QACJ,KAAK;QAEL,yDAAyD;QACtD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QACpC,QAAQ;IACV,CAAC;IAED,kCAAc,GAAd;QACE,0CAA0C;IAC5C,CAAC;IAED,iCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACpC,CAAC;IAED,kCAAc,GAAd;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACtC,CAAC;IAlDU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;yJAK4B,CAAoD;YAC5D,mIAAe,iEAAgB,CAAc;YAC9C,0EAAuB,EAAK,0FAA4B;YAC3D,MAAiF;OAPtF,SAAS,CAmDrB;IAAD,CAAC;AAAA;SAnDY,SAAS,e","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n  ],\r\n})\r\nexport class LoginPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","export class UserModel {\r\n  userId: number;\r\n  username: string;\r\n  password?: string;\r\n  name?: string;\r\n  userCode?: string;\r\n}\r\n\r\nexport class RegisterModel {\r\n  device_unique_id: string;\r\n  phone_number: number;\r\n  email: string;\r\n  password: string;\r\n  first_name: string;\r\n  last_name?: string;\r\n  gender?: boolean;\r\n  date_of_birth?: Date;\r\n}\r\nexport class VerifyModel {\r\n  mobileNumber: Number;\r\n  messageStr: string;\r\n  passCode: string;\r\n}\r\nexport class LoginModel {\r\n  urlStr:string =\"http://localhost:30823/\";\r\n  username: string;\r\n  password: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/usermodel.ts","import { Component, OnInit } from '@angular/core';\r\nimport { IonicPage, LoadingController, MenuController, NavController, ToastController, ToastOptions, NavParams } from 'ionic-angular';\r\n//import { MapsPage } from '../maps/maps';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Storage } from '@ionic/storage';\r\nimport { AuthProvider } from \"../../providers/auth/auth\";\r\nimport { UserStateProvider } from \"../../providers/userstate/user-state\";\r\nimport { MyApp } from '../../app/app.component';\r\nimport { LoginModel } from '../../models/usermodel';\r\nimport { ResponseModel } from '../../models/ResponseModel';\r\nimport { AlertsProvider } from '../../providers/generic/AlertsProvider';\r\n\r\n/**\r\n * Generated class for the LoginPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html',\r\n})\r\nexport class LoginPage implements OnInit {\r\n  loginModel: LoginModel;\r\n  tosterOption: ToastOptions;\r\n  messageStr:string;\r\n  constructor(public navCtrl: NavController, public loadingCtrl: LoadingController,\r\n    public toastCtrl: ToastController, private menu: MenuController,\r\n    private storage: Storage, private _app: MyApp,public navParams: NavParams,\r\n    public _auth: AuthProvider, private userState: UserStateProvider,public _alerts: AlertsProvider\r\n  ) {\r\n    this.messageStr = navParams.get('messageStr');\r\n    this.loginModel = new LoginModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  ionViewDidEnter() {\r\n    this.menu.swipeEnable(false);\r\n  }\r\n  public login() {\r\n    // this._auth.loginUser(this.loginModel).subscribe(data => {\r\n    //   let registerResult = data;\r\n    \r\n    //   if (registerResult.access_token != \"\" && registerResult.access_token != null) {\r\n    //     this.navCtrl.setRoot('MapsPage');\r\n    //     console.log(data)\r\n    //     // this.navCtrl.push(VerfiypassPage, {\r\n    //     //   messageStr: registerResult.MessegesStr,\r\n    //     //   mobileNumber: this.registerModel.phone_number\r\n    //     // });\r\n    //   } else {\r\n    //     this._alerts.showWarningToaster(\"Invalid User or password\");\r\n    //   }\r\n    // }\r\n    // );\r\n    \r\n    // //this._auth.loginUser(this.loginModel).then(data => {\r\n       this.navCtrl.setRoot('MapsPage');\r\n    // //});\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    //console.log('ionViewDidLoad LoginPage');\r\n  }\r\n\r\n  createAccount() {\r\n    this.navCtrl.push('RegisterPage');\r\n  }\r\n\r\n  verifyPassCode(){\r\n    this.navCtrl.push('VerfiypassPage');\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}