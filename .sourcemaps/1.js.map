{"version":3,"sources":["../../src/pages/maps/maps.ngfactory.js.pre-build-optimizer.js","../../src/pages/maps/maps.ts","../../src/pages/maps/maps.module.ts","../../src/pages/maps/maps.module.ngfactory.js.pre-build-optimizer.js","../../node_modules/ionic-angular/components/toolbar/navbar.ngfactory.js.pre-build-optimizer.js","../../src/providers/Enums/reservationEnum.ts","../../src/models/MapModel.ts","../../node_modules/@ionic-native/google-maps/index.js.pre-build-optimizer.js","../../node_modules/rxjs/add/observable/fromEvent.js","../../src/providers/Enums/vehiclesIcons.ts"],"names":["View_MapsPage_0","_l","core","toolbar_header","config","view_controller","navbar_ngfactory","navbar","app","nav_controller","_v","en","$event","ad","toggle","button_ngfactory","button_button","menu_toggle","menu_controller","menuToggle","toolbar_item","toolbar","_buttons","icon","name","toolbar_title_ngfactory","toolbar_title","content_ngfactory","content","platform_platform","dom_controller","keyboard","_ck","_hidden","_sbPadding","isHidden","statusbarPadding","_hasRefresher","maps_MapsPage","MapsPage","navCtrl","platform","diagnostic","menu","_location","storage","events","navParams","geolocation","_userState","locationAccuracy","modalController","_VehiclsProvider","this","geoModelVar","MapModel","get","then","user","prototype","ngOnInit","_this","console","table","undefined","publish","d","reservModel","reservationEnum","Start","create","enableBackdropDismiss","cssClass","present","address","place","ready","canRequest","request","REQUEST_PRIORITY_LOW_POWER","log","error","requestLocationAuthorization","state","catch","e","GetCurrent","resp","lat","coords","latitude","lng","longitude","loadMap","err","ionViewDidEnter","swipeEnable","ionViewWillLeave","ionViewDidLoad","google_maps","setEnv","API_KEY_FOR_BROWSER_DEBUG","API_KEY_FOR_BROWSER_RELEASE","map","camera","duration","target","zoom","tilt","controls","compass","mapToolbar","myLocation","myLocationButton","gestures","scroll","rotate","one","MAP_READY","readyData","setTimeout","getVehicles","getVisibleRegion","addEventListener","CAMERA_MOVE_END","subscribe","data","pointsPoly","push","farLeft","farRight","northeast","nearRight","nearLeft","byArea","returnData","ResultData","vehicles","clear","_i","_a","ReturnedObject","$values","length","item","Lat","Lng","iconImageEnum","vehiclesIcons","addMarker","successFun","pos","failurFun","backGroundGeo","options","maximumAge","timeout","enableHighAccuracy","navigator","getCurrentPosition","watchPosition","position","setOptions","vehicaleModel","html","id","addMarkerSync","url","size","width","height","iconData","styles","animation","draggable","on","MARKER_CLICK","vId","searchPlace","MapsPageModule","RenderType_MapsPage","encapsulation","MapsPageNgFactory","_ionic_native_diagnostic","locations","ionic_storage","util_events","nav_params","_ionic_native_geolocation","user_state","location_accuracy","modal_controller","vechilsApi","__webpack_require__","__webpack_exports__","MapsPageModuleNgFactory","action_sheet_component_ngfactory","alert_component_ngfactory","app_root_ngfactory","loading_component_ngfactory","modal_component_ngfactory","picker_component_ngfactory","popover_component_ngfactory","select_popover_component_ngfactory","toast_component_ngfactory","common","esm5_forms","ionic_angular_module","module_loader","View_Navbar_0","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__WEBPACK_IMPORTED_MODULE_1__angular_common__","klass","ngClass","component","backButtonClick","__WEBPACK_IMPORTED_MODULE_2__button_button_ngfactory__","__WEBPACK_IMPORTED_MODULE_3__button_button__","__WEBPACK_IMPORTED_MODULE_4__config_config__","__WEBPACK_IMPORTED_MODULE_5__icon_icon__","_co","_mode","_bbIcon","_hideBb","_backText","RenderType_Navbar","GeoModel","TARGET_ELEMENT_FINDING_QUERYS","LatLng","equals","other","toString","toUrlValue","precision","toFixed","LatLngBounds","points","_objectInstance","GoogleMaps","getPlugin","extend","contains","getCenter","Object","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__ionic_native_core__","String","sync","Function","Number","Boolean","VisibleRegion","southwest","GoogleMapsEvent","MAP_CLICK","MAP_LONG_CLICK","POI_CLICK","MY_LOCATION_CLICK","MY_LOCATION_BUTTON_CLICK","INDOOR_BUILDING_FOCUSED","INDOOR_LEVEL_ACTIVATED","CAMERA_MOVE_START","CAMERA_MOVE","OVERLAY_CLICK","POLYGON_CLICK","POLYLINE_CLICK","CIRCLE_CLICK","GROUND_OVERLAY_CLICK","INFO_CLICK","INFO_LONG_CLICK","INFO_CLOSE","INFO_OPEN","MARKER_DRAG","MARKER_DRAG_START","MARKER_DRAG_END","MAP_DRAG","MAP_DRAG_START","MAP_DRAG_END","KML_CLICK","PANORAMA_READY","PANORAMA_CAMERA_CHANGE","PANORAMA_LOCATION_CHANGE","PANORAMA_CLICK","_super","apply","arguments","GoogleMaps_1","element","getPluginRef","getPluginName","HTMLElement","offsetParent","Error","getAttribute","tagName","googleMap","GoogleMap","set","errorMessage","window","cordova","displayErrorMessage","join","targets","Array","from","document","querySelectorAll","filter","hasAttribute","createPanorama","StreetViewPanorama","pluginName","pluginRef","plugin","repo","install","installVariables","platforms","message","errorDiv","createElement","innerHTML","style","color","top","bottom","right","left","padding","margin","backgroundColor","appendChild","normalizeArgumentsOfEventListener","args","BaseClass","type","__pgmId","indexOf","overlay","getMap","getId","markerJS","markerId_1","Marker","objInstance","eventName","__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__","observer","newArgs","call","next","addEventListenerOnce","Promise","resolve","addListenerOnce","warn","key","value","noNotify","bindTo","targetKey","hasEventListener","empty","trigger","parameters","destroy","remove","removeEventListener","listener","off","observable","BaseArrayClass","initialData","isArray","forEach","fn","forEachAsync","mapAsync","mapSeries","filterAsync","getArray","getAt","index","getLength","reverse","sort","insertAt","pop","removeAt","setAt","Circle","_map","setCenter","latLng","getRadius","setRadius","radius","setFillColor","getFillColor","setStrokeWidth","strokeWidth","getStrokeWidth","setStrokeColor","strokeColor","getStrokeColor","setClickable","clickable","getClickable","setZIndex","zIndex","getZIndex","getBounds","setVisible","visible","getVisible","Environment","Environment_1","envOptions","environment","getLicenseInfo","text","setBackgroundColor","offsetWidth","offsetHeight","StreetView","getPanorama","reject","count","i","timer","setInterval","clearInterval","setPov","pov","setPosition","cameraPosition","setPanningGesturesEnabled","gestureEnable","getPanningGesturesEnabled","setZoomGesturesEnabled","getZoomGesturesEnabled","setStreetNamesEnabled","getStreetNamesEnabled","setNavigationEnabled","getNavigationEnabled","getLinks","getLocation","getPanoId","getPosition","Map","setDiv","domNode","getDiv","setMapTypeId","mapTypeId","animateCamera","animateCameraZoomIn","animateCameraZoomOut","moveCamera","moveCameraZoomIn","moveCameraZoomOut","getCameraPosition","getCameraTarget","getCameraZoom","getCameraBearing","getCameraTilt","setCameraTarget","setCameraZoom","zoomLevel","setCameraTilt","tiltAngle","setCameraBearing","bearing","panBy","x","y","getMyLocation","LocationService","isClickable","keys","overlayId","fromLatLngToPoint","fromPointToLatLng","point","setMyLocationEnabled","enabled","setMyLocationButtonEnabled","getFocusedBuilding","setIndoorEnabled","setTrafficEnabled","setCompassEnabled","setAllGesturesEnabled","setPadding","marker","overlayId_1","overlay_1","addMarkerCluster","markerCluster","overlayId_2","overlay_2","MarkerCluster","addMarkerClusterSync","addCircle","circle","overlayId_3","overlay_3","addCircleSync","addPolygon","polygon","overlayId_4","overlay_4","Polygon","addPolygonSync","addPolyline","polyline","overlayId_5","overlay_5","Polyline","addPolylineSync","addTileOverlay","tileOverlay","overlayId_6","overlay_6","TileOverlay","addTileOverlaySync","addGroundOverlay","groundOverlay","overlayId_7","overlay_7","GroundOverlay","addGroundOverlaySync","addKmlOverlay","kmlOverlay","overlayId_8","overlay_8","KmlOverlay","toDataURL","setBounds","bounds","setBearing","getBearing","setImage","imageUrl","setOpacity","opacity","getOpacity","showInfoWindow","hideInfoWindow","setAnimation","setDisableAutoPan","disableAutoPan","isVisible","setTitle","title","getTitle","setSnippet","snippet","getSnippet","alpha","setIconAnchor","setInfoWindowAnchor","isInfoWindowShown","setDraggable","isDraggable","setFlat","flat","setIcon","setRotation","rotation","getRotation","addMarkers","markers","setPoints","getPoints","setHoles","holes","getHoles","results","hole","fillColor","setGeodesic","geodesic","getGeodesic","setGeoDesic","geoDesic","setFadeIn","fadeIn","getFadeIn","getTileSize","defineProperty","self","writable","kmlData","getDefaultViewport","Observable_1","fromEvent_1","Observable","fromEvent"],"mappings":"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","sourcesContent":["/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"ionic-angular/components/toolbar/toolbar-header\";\r\nimport * as i2 from \"ionic-angular/config/config\";\r\nimport * as i3 from \"ionic-angular/navigation/view-controller\";\r\nimport * as i4 from \"../../../node_modules/ionic-angular/components/toolbar/navbar.ngfactory\";\r\nimport * as i5 from \"ionic-angular/components/toolbar/navbar\";\r\nimport * as i6 from \"ionic-angular/components/app/app\";\r\nimport * as i7 from \"ionic-angular/navigation/nav-controller\";\r\nimport * as i8 from \"../../../node_modules/ionic-angular/components/button/button.ngfactory\";\r\nimport * as i9 from \"ionic-angular/components/button/button\";\r\nimport * as i10 from \"ionic-angular/components/menu/menu-toggle\";\r\nimport * as i11 from \"ionic-angular/components/app/menu-controller\";\r\nimport * as i12 from \"ionic-angular/components/toolbar/toolbar-item\";\r\nimport * as i13 from \"ionic-angular/components/toolbar/toolbar\";\r\nimport * as i14 from \"ionic-angular/components/icon/icon\";\r\nimport * as i15 from \"../../../node_modules/ionic-angular/components/toolbar/toolbar-title.ngfactory\";\r\nimport * as i16 from \"ionic-angular/components/toolbar/toolbar-title\";\r\nimport * as i17 from \"../../../node_modules/ionic-angular/components/content/content.ngfactory\";\r\nimport * as i18 from \"ionic-angular/components/content/content\";\r\nimport * as i19 from \"ionic-angular/platform/platform\";\r\nimport * as i20 from \"ionic-angular/platform/dom-controller\";\r\nimport * as i21 from \"ionic-angular/platform/keyboard\";\r\nimport * as i22 from \"./maps\";\r\nimport * as i23 from \"@ionic-native/diagnostic/index\";\r\nimport * as i24 from \"../../providers/Map/locations\";\r\nimport * as i25 from \"@ionic/storage\";\r\nimport * as i26 from \"ionic-angular/util/events\";\r\nimport * as i27 from \"ionic-angular/navigation/nav-params\";\r\nimport * as i28 from \"@ionic-native/geolocation/index\";\r\nimport * as i29 from \"../../providers/userstate/user-state\";\r\nimport * as i30 from \"@ionic-native/location-accuracy/index\";\r\nimport * as i31 from \"ionic-angular/components/modal/modal-controller\";\r\nimport * as i32 from \"../../providers/Map/vechilsApi\";\r\nvar styles_MapsPage = [];\r\nvar RenderType_MapsPage = i0.ɵcrt({ encapsulation: 2, styles: styles_MapsPage, data: {} });\r\nexport { RenderType_MapsPage as RenderType_MapsPage };\r\nexport function View_MapsPage_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 20, \"ion-header\", [], null, null, null, null, null)), i0.ɵdid(1, 16384, null, 0, i1.Header, [i2.Config, i0.ElementRef, i0.Renderer, [2, i3.ViewController]], null, null), (_l()(), i0.ɵted(-1, null, [\"\\n  \"])), (_l()(), i0.ɵeld(3, 0, null, null, 16, \"ion-navbar\", [[\"class\", \"toolbar\"], [\"transparent\", \"\"]], [[8, \"hidden\", 0], [2, \"statusbar-padding\", null]], null, null, i4.View_Navbar_0, i4.RenderType_Navbar)), i0.ɵdid(4, 49152, null, 0, i5.Navbar, [i6.App, [2, i3.ViewController], [2, i7.NavController], i2.Config, i0.ElementRef, i0.Renderer], null, null), (_l()(), i0.ɵted(-1, 3, [\"\\n    \"])), (_l()(), i0.ɵeld(6, 0, null, 0, 8, \"button\", [[\"ion-button\", \"\"], [\"menuToggle\", \"\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\r\n        var pd_0 = (i0.ɵnov(_v, 8).toggle() !== false);\r\n        ad = (pd_0 && ad);\r\n    } return ad; }, i8.View_Button_0, i8.RenderType_Button)), i0.ɵdid(7, 1097728, [[1, 4]], 0, i9.Button, [[8, \"\"], i2.Config, i0.ElementRef, i0.Renderer], null, null), i0.ɵdid(8, 1064960, null, 0, i10.MenuToggle, [i11.MenuController, [2, i3.ViewController], [2, i9.Button], [2, i5.Navbar]], { menuToggle: [0, \"menuToggle\"] }, null), i0.ɵdid(9, 16384, null, 1, i12.ToolbarItem, [i2.Config, i0.ElementRef, i0.Renderer, [2, i13.Toolbar], [2, i5.Navbar]], null, null), i0.ɵqud(603979776, 1, { _buttons: 1 }), (_l()(), i0.ɵted(-1, 0, [\"\\n      \"])), (_l()(), i0.ɵeld(12, 0, null, 0, 1, \"ion-icon\", [[\"name\", \"menu\"], [\"role\", \"img\"]], [[2, \"hide\", null]], null, null, null, null)), i0.ɵdid(13, 147456, null, 0, i14.Icon, [i2.Config, i0.ElementRef, i0.Renderer], { name: [0, \"name\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"\\n    \"])), (_l()(), i0.ɵted(-1, 3, [\"\\n    \"])), (_l()(), i0.ɵeld(16, 0, null, 3, 2, \"ion-title\", [], null, null, null, i15.View_ToolbarTitle_0, i15.RenderType_ToolbarTitle)), i0.ɵdid(17, 49152, null, 0, i16.ToolbarTitle, [i2.Config, i0.ElementRef, i0.Renderer, [2, i13.Toolbar], [2, i5.Navbar]], null, null), (_l()(), i0.ɵted(-1, 0, [\"Find A Rabbit\"])), (_l()(), i0.ɵted(-1, 3, [\"\\n  \"])), (_l()(), i0.ɵted(-1, null, [\"\\n\"])), (_l()(), i0.ɵted(-1, null, [\"\\n\\n\"])), (_l()(), i0.ɵted(-1, null, [\"\\n\"])), (_l()(), i0.ɵeld(23, 0, null, null, 9, \"ion-content\", [[\"class\", \"map-page\"]], [[2, \"statusbar-padding\", null], [2, \"has-refresher\", null]], null, null, i17.View_Content_0, i17.RenderType_Content)), i0.ɵdid(24, 4374528, null, 0, i18.Content, [i2.Config, i19.Platform, i20.DomController, i0.ElementRef, i0.Renderer, i6.App, i21.Keyboard, i0.NgZone, [2, i3.ViewController], [2, i7.NavController]], null, null), (_l()(), i0.ɵted(-1, 1, [\"\\n \\n  \"])), (_l()(), i0.ɵeld(26, 0, null, 1, 2, \"div\", [[\"id\", \"map_canvas\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵted(-1, null, [\"\\n  \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n  \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n\\n  \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n\\n  \"])), (_l()(), i0.ɵted(-1, 1, [\"\\n\\n\\n\"]))], function (_ck, _v) { var currVal_3 = \"\"; _ck(_v, 8, 0, currVal_3); var currVal_5 = \"menu\"; _ck(_v, 13, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 4)._hidden; var currVal_1 = i0.ɵnov(_v, 4)._sbPadding; _ck(_v, 3, 0, currVal_0, currVal_1); var currVal_2 = i0.ɵnov(_v, 8).isHidden; _ck(_v, 6, 0, currVal_2); var currVal_4 = i0.ɵnov(_v, 13)._hidden; _ck(_v, 12, 0, currVal_4); var currVal_6 = i0.ɵnov(_v, 24).statusbarPadding; var currVal_7 = i0.ɵnov(_v, 24)._hasRefresher; _ck(_v, 23, 0, currVal_6, currVal_7); }); }\r\nexport function View_MapsPage_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"page-maps\", [], null, null, null, View_MapsPage_0, RenderType_MapsPage)), i0.ɵdid(1, 114688, null, 0, i22.MapsPage, [i7.NavController, i19.Platform, i23.Diagnostic, i11.MenuController, i24.LocationsProvider, i25.Storage, i26.Events, i27.NavParams, i28.Geolocation, i29.UserStateProvider, i30.LocationAccuracy, i31.ModalController, i32.VehiclsProvider], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\r\nvar MapsPageNgFactory = i0.ɵccf(\"page-maps\", i22.MapsPage, View_MapsPage_Host_0, {}, {}, []);\r\nexport { MapsPageNgFactory as MapsPageNgFactory };\r\n//# sourceMappingURL=maps.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maps/maps.ngfactory.js.pre-build-optimizer.js","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavController, MenuController, NavParams, Platform, Events } from 'ionic-angular';\r\nimport {\r\n  GoogleMaps,\r\n  GoogleMap,\r\n  GoogleMapsEvent,\r\n  GoogleMapOptions,\r\n  // CameraPosition,\r\n  // MarkerOptions,\r\n  Marker,\r\n  Environment,\r\n  // HtmlInfoWindow,\r\n  VisibleRegion,\r\n  // LatLngBounds,\r\n  ILatLng,\r\n  LatLng,\r\n  // Polygon,\r\n  // PolylineOptions,\r\n  // PolygonOptions,\r\n  // BaseArrayClass,\r\n  Poly\r\n} from '@ionic-native/google-maps';\r\nimport { Diagnostic } from '@ionic-native/diagnostic';\r\nimport { Geolocation, Geoposition } from '@ionic-native/geolocation';\r\n// import { AutocompletePage } from '../autocomplete/autocomplete';\r\nimport { LocationAccuracy } from '@ionic-native/location-accuracy'\r\n//import { fromEvent } from 'rxjs/observable/fromEvent';\r\nimport { LocationsProvider } from '../../providers/Map/locations';\r\nimport { GeoModel } from '../../models/MapModel'\r\nimport { vehicaleModel, vehicaleReservationModel } from '../../models/vehicaleModel';\r\n// import { OpenNativeSettings } from '@ionic-native/open-native-settings';\r\n// import { BackgroundGeolocation, BackgroundGeolocationConfig, BackgroundGeolocationResponse } from '@ionic-native/background-geolocation';\r\nimport { VehiclsProvider } from '../../providers/Map/vechilsApi';\r\nimport { ResponseModel } from '../../models/ResponseModel';\r\nimport { vehiclesIcons } from '../../providers/Enums/vehiclesIcons';\r\nimport { UserStateProvider } from '../../providers/userstate/user-state';\r\nimport { reservationEnum } from '../../providers/Enums/reservationEnum';\r\nimport { Storage } from '@ionic/storage';\r\n// import { AlertsProvider } from '../../providers/generic/AlertsProvider';\r\n// import { reservationEnum } from '../../providers/Enums/reservationEnum';\r\n// import { modelGroupProvider } from '@angular/forms/src/directives/ng_model_group';\r\n//import { ScanCodePage } from '../scan-code/scan-code';\r\n/**\r\n * Generated class for the MapsPage page.\r\n *\r\n * See https://ionicframework.com/docs/components/#navigation for more info on\r\n * Ionic pages and navigation.\r\n */\r\n// declare var google;\r\n\r\n@Component({\r\n  selector: 'page-maps',\r\n  templateUrl: 'maps.html',\r\n})\r\nexport class MapsPage implements OnInit {\r\n\r\n  // Variables\r\n  geoModelVar: GeoModel;\r\n\r\n  vehicalModel: vehicaleModel;\r\n  map: GoogleMap;\r\n  lat: any;\r\n  lng: any;\r\n  address;\r\n\r\n  constructor(public navCtrl: NavController, private platform: Platform, private diagnostic: Diagnostic,\r\n    private menu: MenuController, private _location: LocationsProvider, private storage: Storage,\r\n    public events: Events,\r\n    public navParams: NavParams, private geolocation: Geolocation, private _userState: UserStateProvider,\r\n    private locationAccuracy: LocationAccuracy, public modalController: ModalController, public _VehiclsProvider: VehiclsProvider\r\n    //  ,private ModalCtrl: ModalController, private _alertsService: AlertsProvider,\r\n    //   private openNativeSettings: OpenNativeSettings,private backgroundGeolocation: BackgroundGeolocation,\r\n  ) {\r\n    // Begin Constractor\r\n    this.geoModelVar = new GeoModel();\r\n\r\n    this.storage.get('UserIDVisaState').then(user => {\r\n   \r\n    });\r\n  }\r\n\r\n  vehicles;\r\n\r\n  map2: any;\r\n  ngOnInit() {\r\n\r\n    this.storage.get('UserState').then(user => {\r\n      console.table(user)\r\n      if (user != undefined && user != \"\") {\r\n        this.events.publish('user:created', user);\r\n      } else {\r\n        this.events.publish(\"unauthorized:requestError\");\r\n      }\r\n    });\r\n\r\n    this.storage.get(\"RideStatus\").then(d => {\r\n\r\n      if (d != null) {\r\n        let reservModel = <vehicaleReservationModel>d;\r\n        console.table(reservModel)\r\n        if (reservModel.reservationEnum == reservationEnum.Start) {\r\n\r\n          let modal = this.modalController.create(\r\n            'InridestatusPage', null, { enableBackdropDismiss: false, cssClass: 'modal-bottom' }\r\n          );\r\n          modal.present();\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    this.address = {\r\n      place: ''\r\n    };\r\n\r\n    // let successCallback = (isAvailable) => { console.log('Is available? ' + isAvailable); };\r\n    // let errorCallback = (e) => console.error(e);\r\n\r\n    //this.diagnostic.isGpsLocationAvailable().then(successCallback).catch(errorCallback);\r\n\r\n    ////this.diagnostic.isCameraAvailable().then(successCallback, errorCallback);\r\n\r\n    this.platform.ready().then(() => {\r\n\r\n      this.locationAccuracy.canRequest().then((canRequest: boolean) => {\r\n        // console.log(\"Can req : \" + canRequest)\r\n        if (canRequest) {\r\n          // the accuracy option will be ignored by iOS\r\n          this.locationAccuracy.request(this.locationAccuracy.REQUEST_PRIORITY_LOW_POWER).then(\r\n            () => console.log('Request successful'),\r\n            error => console.log('Error requesting location permissions', error)\r\n          );\r\n        }\r\n\r\n      });\r\n\r\n      this.diagnostic.requestLocationAuthorization(\"always\")\r\n        .then((state) => {\r\n          // console.log(JSON.stringify(state));\r\n        }).catch(e => console.error(e));\r\n\r\n      this._location.GetCurrent().then(((resp) => {\r\n        this.geoModelVar.lat = resp.coords.latitude;\r\n        this.geoModelVar.lng = resp.coords.longitude;\r\n        // console.log(\"longLat : > \" + resp.coords);\r\n        this.loadMap();\r\n      })).catch(err => {\r\n        // console.log(err);\r\n        this.geoModelVar.lat = \"30.0371824\";\r\n        this.geoModelVar.lng = \"31.2145495\";\r\n        this.loadMap();\r\n      }\r\n      );\r\n\r\n\r\n    });\r\n  }\r\n\r\n  // showAddressModal() {\r\n  //   let modal = this.ModalCtrl.create(AutocompletePage);\r\n  //   let me = this;\r\n  //   modal.onDidDismiss(data => {\r\n  //     this.address.place = data;\r\n  //   });\r\n  //   modal.present();\r\n  // }\r\n\r\n  ionViewDidEnter() {\r\n    this.menu.swipeEnable(true);\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    this.menu.swipeEnable(false);\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n  }\r\n\r\n  loadMap() {\r\n    // console.log(\"lkoad map 1\")\r\n    Environment.setEnv({\r\n      'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyBLKRh7JfikPylbNdGfTiDbe6zut1yabxo',\r\n      'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyBLKRh7JfikPylbNdGfTiDbe6zut1yabxo'\r\n    });\r\n\r\n    // this.map = new GoogleMap('map_canvas');\r\n    //  this.map=GoogleMaps.create('map_canvas');\r\n    let mapOptions: GoogleMapOptions = {\r\n      camera: {\r\n        duration: 1000,\r\n        target: {\r\n          lat: this.geoModelVar.lat,\r\n          lng: this.geoModelVar.lng\r\n        },\r\n        zoom: 15,\r\n        tilt: 30\r\n      },\r\n      controls: { zoom: false, compass: false, mapToolbar: false, myLocation: true, myLocationButton: true },\r\n      gestures: {\r\n        scroll: true,\r\n        tilt: false,\r\n        rotate: true,\r\n        zoom: true\r\n      },\r\n    };\r\n\r\n    this.map = GoogleMaps.create('map_canvas', mapOptions);\r\n\r\n    this.map.one(GoogleMapsEvent.MAP_READY)\r\n      .then((readyData) => {\r\n\r\n        setTimeout(() => {\r\n          this.getVehicles(this.map.getVisibleRegion());\r\n        }, 3000);\r\n\r\n\r\n        //console.log(\" <<<  \" + JSON.stringify(readyData));\r\n        // Get area codinates\r\n        this.map.addEventListener(GoogleMapsEvent.CAMERA_MOVE_END).subscribe((e) => {\r\n          //console.log(\"d \" + JSON.stringify(e));\r\n          // this.getVehicles(this.map.getVisibleRegion());\r\n        });\r\n      });\r\n  }\r\n\r\n  getVehicles(data: VisibleRegion) {\r\n    let pointsPoly: ILatLng[] = [];\r\n    pointsPoly.push(new LatLng(data.farLeft.lat, data.farLeft.lng));\r\n    pointsPoly.push(new LatLng(data.farRight.lat, data.farRight.lng));\r\n    pointsPoly.push(new LatLng(data.northeast.lat, data.northeast.lng));\r\n    // pointsPoly.push(new LatLng(data.southwest.lat, data.southwest.lng));\r\n    pointsPoly.push(new LatLng(data.nearRight.lat, data.nearRight.lng));\r\n    pointsPoly.push(new LatLng(data.nearLeft.lat, data.nearLeft.lng));\r\n    //data\r\n    this._VehiclsProvider.byArea().subscribe(returnData => {\r\n      let ResultData = <ResponseModel>returnData;\r\n      this.vehicles = [];\r\n      this.map.clear();\r\n      let tempPosition;\r\n      //console.log(ResultData.ReturnedObject.$values);\r\n      for (let item of ResultData.ReturnedObject.$values) {\r\n        let vechilModel: vehicaleModel = item;\r\n        tempPosition = new LatLng(vechilModel.Lat, vechilModel.Lng);\r\n\r\n        // console.log(Poly.containsLocation(tempPosition, pointsPoly) + \"    \" + tempPosition);\r\n\r\n        //if (Poly.containsLocation(tempPosition, pointsPoly)) {\r\n        item.iconImageEnum = vehiclesIcons[item.iconImageEnum];\r\n        this.vehicles.push(item);\r\n        this.addMarker(item)\r\n        //}\r\n      }\r\n    });\r\n  }\r\n\r\n  successFun(pos) {\r\n    // console.log(\"Success is \" + JSON.stringify(pos));\r\n  }\r\n  failurFun(pos) {\r\n    // console.log(\"Error is\" + JSON.stringify(pos));\r\n  }\r\n  myLocation() {\r\n    this.backGroundGeo();\r\n\r\n    let options = {\r\n      maximumAge: 3000,\r\n      timeout: 30000,\r\n      enableHighAccuracy: true\r\n    };\r\n\r\n    navigator.geolocation.getCurrentPosition(this.successFun, this.failurFun, options);\r\n\r\n    // console.log(\"try to locate \");\r\n    this.geolocation.watchPosition(options).subscribe((position: Geoposition) => {\r\n      // loading.dismiss();\r\n      // console.log(\"current location at login\" + position.coords.latitude);\r\n\r\n      // Run update inside of Angular's zone\r\n      // this.zone.run(() => {\r\n      // this.currentLat = position.coords.latitude;\r\n      // this.currentLng = position.coords.longitude;\r\n      //});\r\n\r\n    });\r\n\r\n    this.geolocation.getCurrentPosition(options).then((resp: Geoposition) => {\r\n      // console.log(\"Ya Rab : \" + JSON.stringify(resp));\r\n      this.lat = resp.coords.latitude;\r\n      this.lng = resp.coords.longitude;\r\n      let mapOptions: GoogleMapOptions = {\r\n        camera: {\r\n          target: {\r\n            lat: this.lat,\r\n            lng: this.lng\r\n          },\r\n          zoom: 15,\r\n          tilt: 30\r\n        },\r\n        controls: { zoom: false, compass: false, mapToolbar: false, myLocation: true, myLocationButton: true },\r\n        gestures: {\r\n          scroll: true,\r\n          tilt: false,\r\n          rotate: true,\r\n          zoom: true\r\n        },\r\n      };\r\n      this.map.setOptions(mapOptions);\r\n\r\n      //      this.loadMap();\r\n\r\n    }).catch((error) => {\r\n      // console.log('Error getting location', error);\r\n    });\r\n  }\r\n\r\n  addMarker(vehicaleModel: vehicaleModel) {\r\n    //var htmlInfoWindow = new HtmlInfoWindow();\r\n    var html = vehicaleModel.id;\r\n    //   [\r\n    //   'This is <b>Html</b> InfoWindow',\r\n    //   '<br>',\r\n    //   '<button onclick=\"javascript:alert(\\'clicked!\\');\">click here</button>',\r\n    // ].join(\"\");\r\n    //htmlInfoWindow.setContent(html)\r\n\r\n    let marker: Marker = this.map.addMarkerSync({\r\n      //title: '<div class=\"infoclass\">Mohamed </div>',\r\n      // icon: 'blue',\r\n      icon: {\r\n        url: vehicaleModel.iconImageEnum,\r\n        size: {\r\n          width: 40,\r\n          height: 62\r\n        }\r\n      },\r\n      iconData: {\r\n        url: vehicaleModel.iconImageEnum,\r\n        size: {\r\n          width: 40,\r\n          height: 62\r\n        }\r\n      }\r\n      ,\r\n      styles: \"\",\r\n      animation: 'DROP',\r\n      draggable: false,\r\n      position: {\r\n        lat: vehicaleModel.Lat,\r\n        lng: vehicaleModel.Lng\r\n      }\r\n    });\r\n\r\n    marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe((e) => {\r\n      // this._VehiclsProvider.distance().subscribe(returnData => {\r\n      //   console.log(returnData)\r\n      // })\r\n      //this.navCtrl.setRoot(\"ScanCodePage\", { vId: \"123\" });\r\n\r\n      //mostafa remove previous line\r\n      let modal = this.modalController.create(\r\n        'SelectedRabbitPage', { vId: html }, { enableBackdropDismiss: true, cssClass: 'modal-center' }\r\n      );\r\n      modal.present();\r\n\r\n      // htmlInfoWindow.open(marker);\r\n    });\r\n  }\r\n\r\n  // query: string = '';\r\n  // autocompleteService: any;\r\n  // searchDisabled: boolean;\r\n  // saveDisabled: boolean;\r\n  // location: any;\r\n  // places: any = [];\r\n  searchPlace() {\r\n\r\n    // this.saveDisabled = true;\r\n\r\n    // if (this.query.length > 0 && !this.searchDisabled) {\r\n\r\n    //   let config = {\r\n    //     types: ['geocode'],\r\n    //     input: this.query\r\n    //   }\r\n\r\n    //   this.autocompleteService.getPlacePredictions(config, (predictions, status) => {\r\n\r\n    //     // if(status == google.maps.places.PlacesServiceStatus.OK && predictions){\r\n\r\n    //     this.places = [];\r\n\r\n    //     predictions.forEach((prediction) => {\r\n    //       this.places.push(prediction);\r\n    //     });\r\n    //     //}\r\n\r\n    //   });\r\n\r\n    // } else {\r\n    //   this.places = [];\r\n    // }\r\n\r\n  }\r\n\r\n\r\n  backGroundGeo() {\r\n    // const config: BackgroundGeolocationConfig = {\r\n    //   desiredAccuracy: 10,\r\n    //   stationaryRadius: 20,\r\n    //   distanceFilter: 30,\r\n    //   debug: true, //  enable this hear sounds for background-geolocation life-cycle.\r\n    //   stopOnTerminate: false, // enable this to clear background location settings when the app terminates\r\n    // };\r\n\r\n    // this.backgroundGeolocation.configure(config)\r\n    //   .subscribe((location: BackgroundGeolocationResponse) => {\r\n\r\n    //     console.log(\"Hero \" + JSON.stringify(location));\r\n    //     // IMPORTANT:  You must execute the finish method here to inform the native plugin that you're finished,\r\n    //     // and the background-task may be completed.  You must do this regardless if your HTTP request is successful or not.\r\n    //     // IF YOU DON'T, ios will CRASH YOUR APP for spending too much time in the background.\r\n    //     this.backgroundGeolocation.finish(); // FOR IOS ONLY\r\n\r\n    //   });\r\n\r\n    // // start recording location\r\n    // this.backgroundGeolocation.start();\r\n\r\n    // // If you wish to turn OFF background-tracking, call the #stop method.\r\n    // //this.backgroundGeolocation.stop();\r\n\r\n    // this.backgroundGeolocation.getValidLocations().then((data) => {\r\n    //   console.log(\"1# \" + data);\r\n    // });\r\n\r\n\r\n    // console.log(\"2# \" + this.backgroundGeolocation.LocationProvider);\r\n\r\n\r\n    // this.backgroundGeolocation.getLocations().then((data) => {\r\n    //   console.log(\"3# \" + data);\r\n    // });\r\n    // this.backgroundGeolocation.stop();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maps/maps.ts","import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { MapsPage } from './maps';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MapsPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(MapsPage),\r\n  ],\r\n})\r\nexport class MapsPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maps/maps.module.ts","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"./maps.module\";\r\nimport * as i2 from \"../../../node_modules/ionic-angular/components/action-sheet/action-sheet-component.ngfactory\";\r\nimport * as i3 from \"../../../node_modules/ionic-angular/components/alert/alert-component.ngfactory\";\r\nimport * as i4 from \"../../../node_modules/ionic-angular/components/app/app-root.ngfactory\";\r\nimport * as i5 from \"../../../node_modules/ionic-angular/components/loading/loading-component.ngfactory\";\r\nimport * as i6 from \"../../../node_modules/ionic-angular/components/modal/modal-component.ngfactory\";\r\nimport * as i7 from \"../../../node_modules/ionic-angular/components/picker/picker-component.ngfactory\";\r\nimport * as i8 from \"../../../node_modules/ionic-angular/components/popover/popover-component.ngfactory\";\r\nimport * as i9 from \"../../../node_modules/ionic-angular/components/select/select-popover-component.ngfactory\";\r\nimport * as i10 from \"../../../node_modules/ionic-angular/components/toast/toast-component.ngfactory\";\r\nimport * as i11 from \"./maps.ngfactory\";\r\nimport * as i12 from \"@angular/common\";\r\nimport * as i13 from \"@angular/forms\";\r\nimport * as i14 from \"ionic-angular/module\";\r\nimport * as i15 from \"ionic-angular/util/module-loader\";\r\nimport * as i16 from \"./maps\";\r\nvar MapsPageModuleNgFactory = i0.ɵcmf(i1.MapsPageModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ActionSheetCmpNgFactory, i3.AlertCmpNgFactory, i4.IonicAppNgFactory, i5.LoadingCmpNgFactory, i6.ModalCmpNgFactory, i7.PickerCmpNgFactory, i8.PopoverCmpNgFactory, i9.SelectPopoverNgFactory, i10.ToastCmpNgFactory, i11.MapsPageNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i12.NgLocalization, i12.NgLocaleLocalization, [i0.LOCALE_ID, [2, i12.ɵa]]), i0.ɵmpd(4608, i13.ɵi, i13.ɵi, []), i0.ɵmpd(4608, i13.FormBuilder, i13.FormBuilder, []), i0.ɵmpd(512, i12.CommonModule, i12.CommonModule, []), i0.ɵmpd(512, i13.ɵba, i13.ɵba, []), i0.ɵmpd(512, i13.FormsModule, i13.FormsModule, []), i0.ɵmpd(512, i13.ReactiveFormsModule, i13.ReactiveFormsModule, []), i0.ɵmpd(512, i14.IonicModule, i14.IonicModule, []), i0.ɵmpd(512, i14.IonicPageModule, i14.IonicPageModule, []), i0.ɵmpd(512, i1.MapsPageModule, i1.MapsPageModule, []), i0.ɵmpd(256, i15.LAZY_LOADED_TOKEN, i16.MapsPage, [])]); });\r\nexport { MapsPageModuleNgFactory as MapsPageModuleNgFactory };\r\n//# sourceMappingURL=maps.module.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/pages/maps/maps.module.ngfactory.js.pre-build-optimizer.js","/**\r\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\r\n *\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\r\n * tslint:disable\r\n */ \r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common\";\r\nimport * as i2 from \"../button/button.ngfactory\";\r\nimport * as i3 from \"../button/button\";\r\nimport * as i4 from \"../../config/config\";\r\nimport * as i5 from \"../icon/icon\";\r\nimport * as i6 from \"./navbar\";\r\nimport * as i7 from \"../app/app\";\r\nimport * as i8 from \"../../navigation/view-controller\";\r\nimport * as i9 from \"../../navigation/nav-controller\";\r\nvar styles_Navbar = [];\r\nvar RenderType_Navbar = i0.ɵcrt({ encapsulation: 2, styles: styles_Navbar, data: {} });\r\nexport { RenderType_Navbar as RenderType_Navbar };\r\nexport function View_Navbar_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"toolbar-background\"]], null, null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 8, \"button\", [[\"class\", \"back-button\"], [\"ion-button\", \"bar-button\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\r\n        var pd_0 = (_co.backButtonClick($event) !== false);\r\n        ad = (pd_0 && ad);\r\n    } return ad; }, i2.View_Button_0, i2.RenderType_Button)), i0.ɵdid(3, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵdid(4, 1097728, null, 0, i3.Button, [[8, \"bar-button\"], i4.Config, i0.ElementRef, i0.Renderer], null, null), (_l()(), i0.ɵeld(5, 0, null, 0, 2, \"ion-icon\", [[\"class\", \"back-button-icon\"], [\"role\", \"img\"]], [[2, \"hide\", null]], null, null, null, null)), i0.ɵdid(6, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵdid(7, 147456, null, 0, i5.Icon, [i4.Config, i0.ElementRef, i0.Renderer], { name: [0, \"name\"] }, null), (_l()(), i0.ɵeld(8, 0, null, 0, 2, \"span\", [[\"class\", \"back-button-text\"]], null, null, null, null, null)), i0.ɵdid(9, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), (_l()(), i0.ɵted(10, null, [\"\", \"\"])), i0.ɵncd(null, 0), i0.ɵncd(null, 1), i0.ɵncd(null, 2), (_l()(), i0.ɵeld(14, 0, null, null, 2, \"div\", [[\"class\", \"toolbar-content\"]], null, null, null, null, null)), i0.ɵdid(15, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵncd(null, 3)], function (_ck, _v) { var _co = _v.component; var currVal_0 = \"toolbar-background\"; var currVal_1 = (\"toolbar-background-\" + _co._mode); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_3 = \"back-button\"; var currVal_4 = (\"back-button-\" + _co._mode); _ck(_v, 3, 0, currVal_3, currVal_4); var currVal_6 = \"back-button-icon\"; var currVal_7 = (\"back-button-icon-\" + _co._mode); _ck(_v, 6, 0, currVal_6, currVal_7); var currVal_8 = _co._bbIcon; _ck(_v, 7, 0, currVal_8); var currVal_9 = \"back-button-text\"; var currVal_10 = (\"back-button-text-\" + _co._mode); _ck(_v, 9, 0, currVal_9, currVal_10); var currVal_12 = \"toolbar-content\"; var currVal_13 = (\"toolbar-content-\" + _co._mode); _ck(_v, 15, 0, currVal_12, currVal_13); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = _co._hideBb; _ck(_v, 2, 0, currVal_2); var currVal_5 = i0.ɵnov(_v, 7)._hidden; _ck(_v, 5, 0, currVal_5); var currVal_11 = _co._backText; _ck(_v, 10, 0, currVal_11); }); }\r\nexport function View_Navbar_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ion-navbar\", [[\"class\", \"toolbar\"]], [[8, \"hidden\", 0], [2, \"statusbar-padding\", null]], null, null, View_Navbar_0, RenderType_Navbar)), i0.ɵdid(1, 49152, null, 0, i6.Navbar, [i7.App, [2, i8.ViewController], [2, i9.NavController], i4.Config, i0.ElementRef, i0.Renderer], null, null)], null, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1)._hidden; var currVal_1 = i0.ɵnov(_v, 1)._sbPadding; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\r\nvar NavbarNgFactory = i0.ɵccf(\"ion-navbar\", i6.Navbar, View_Navbar_Host_0, { color: \"color\", mode: \"mode\", hideBackButton: \"hideBackButton\" }, {}, [\"[menuToggle],ion-buttons[left]\", \"ion-buttons[start]\", \"ion-buttons[end],ion-buttons[right]\", \"*\"]);\r\nexport { NavbarNgFactory as NavbarNgFactory };\r\n//# sourceMappingURL=navbar.ngfactory.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/ionic-angular/components/toolbar/navbar.ngfactory.js.pre-build-optimizer.js","export  enum reservationEnum{\r\n    Start=1,\r\n    End=2,\r\n    TempRequest=3,\r\n    Cancel=4,\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/Enums/reservationEnum.ts","export class GeoModel{\r\n    lat?:any;\r\n    lng?:any;\r\n  }\r\n\r\n  export class GeoArea{\r\n    areaStr :any;\r\n  }\n\n\n// WEBPACK FOOTER //\n// ./src/models/MapModel.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar _this = this;\nimport { CordovaInstance, InstanceCheck, InstanceProperty, IonicNativePlugin, Plugin, checkAvailability } from '@ionic-native/core';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromEvent';\nvar TARGET_ELEMENT_FINDING_QUERYS = [\n    '.show-page #',\n];\n/**\n * @hidden\n */\nvar /**\n * @hidden\n */\nLatLng = (function () {\n    function LatLng(lat, lng) {\n        this.lat = lat;\n        this.lng = lng;\n    }\n    LatLng.prototype.equals = function (other) {\n        return this.lat === other.lat && this.lng === other.lng;\n    };\n    LatLng.prototype.toString = function () {\n        return this.lat + ',' + this.lng;\n    };\n    LatLng.prototype.toUrlValue = function (precision) {\n        precision = precision || 6;\n        return this.lat.toFixed(precision) + ',' + this.lng.toFixed(precision);\n    };\n    return LatLng;\n}());\n/**\n * @hidden\n */\nexport { LatLng };\n/**\n * @hidden\n */\nvar LatLngBounds = (function () {\n    function LatLngBounds(points) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).LatLngBounds(points);\n    }\n    /**\n     * Converts to string\n     * @return {string}\n     */\n    /**\n       * Converts to string\n       * @return {string}\n       */\n    LatLngBounds.prototype.toString = /**\n       * Converts to string\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n     * @param precision {number}\n     * @return {string}\n     */\n    /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    LatLngBounds.prototype.toUrlValue = /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    function (precision) {\n        return;\n    };\n    /**\n     * Extends this bounds to contain the given point.\n     * @param LatLng {ILatLng}\n     */\n    /**\n       * Extends this bounds to contain the given point.\n       * @param LatLng {ILatLng}\n       */\n    LatLngBounds.prototype.extend = /**\n       * Extends this bounds to contain the given point.\n       * @param LatLng {ILatLng}\n       */\n    function (LatLng) {\n    };\n    /**\n     * Returns true if the given lat/lng is in this bounds.\n     * @param LatLng {ILatLng}\n     */\n    /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    LatLngBounds.prototype.contains = /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    function (LatLng) {\n        return;\n    };\n    /**\n     * Computes the center of this LatLngBounds\n     * @return {LatLng}\n     */\n    /**\n       * Computes the center of this LatLngBounds\n       * @return {LatLng}\n       */\n    LatLngBounds.prototype.getCenter = /**\n       * Computes the center of this LatLngBounds\n       * @return {LatLng}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], LatLngBounds.prototype, \"northeast\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], LatLngBounds.prototype, \"southwest\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", String)\n    ], LatLngBounds.prototype, \"type\", void 0);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], LatLngBounds.prototype, \"toString\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", String)\n    ], LatLngBounds.prototype, \"toUrlValue\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], LatLngBounds.prototype, \"extend\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Boolean)\n    ], LatLngBounds.prototype, \"contains\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", LatLng)\n    ], LatLngBounds.prototype, \"getCenter\", null);\n    return LatLngBounds;\n}());\nexport { LatLngBounds };\n/**\n * @hidden\n */\nvar VisibleRegion = (function () {\n    function VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight) {\n        this._objectInstance = new (GoogleMaps.getPlugin()).VisibleRegion(southwest, northeast, farLeft, farRight, nearLeft, nearRight);\n    }\n    /**\n     * Converts to string\n     * @return {string}\n     */\n    /**\n       * Converts to string\n       * @return {string}\n       */\n    VisibleRegion.prototype.toString = /**\n       * Converts to string\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n     * @param precision {number}\n     * @return {string}\n     */\n    /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    VisibleRegion.prototype.toUrlValue = /**\n       * Returns a string of the form \"lat_sw,lng_sw,lat_ne,lng_ne\" for this bounds, where \"sw\" corresponds to the southwest corner of the bounding box, while \"ne\" corresponds to the northeast corner of that box.\n       * @param precision {number}\n       * @return {string}\n       */\n    function (precision) {\n        return;\n    };\n    /**\n     * Returns true if the given lat/lng is in this bounds.\n     * @param LatLng {ILatLng}\n     */\n    /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    VisibleRegion.prototype.contains = /**\n       * Returns true if the given lat/lng is in this bounds.\n       * @param LatLng {ILatLng}\n       */\n    function (LatLng) {\n        return;\n    };\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"northeast\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"southwest\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"farLeft\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"farRight\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"nearLeft\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", Object)\n    ], VisibleRegion.prototype, \"nearRight\", void 0);\n    __decorate([\n        InstanceProperty,\n        __metadata(\"design:type\", String)\n    ], VisibleRegion.prototype, \"type\", void 0);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], VisibleRegion.prototype, \"toString\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", String)\n    ], VisibleRegion.prototype, \"toUrlValue\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Boolean)\n    ], VisibleRegion.prototype, \"contains\", null);\n    return VisibleRegion;\n}());\nexport { VisibleRegion };\n/**\n * @hidden\n */\nexport var StreetViewSource = {\n    DEFAULT: 'DEFAULT',\n    OUTDOOR: 'OUTDOOR'\n};\n/**\n * @hidden\n * You can listen to these events where appropriate\n */\nexport var GoogleMapsEvent = {\n    MAP_READY: 'map_ready',\n    MAP_CLICK: 'map_click',\n    MAP_LONG_CLICK: 'map_long_click',\n    POI_CLICK: 'poi_click',\n    MY_LOCATION_CLICK: 'my_location_click',\n    MY_LOCATION_BUTTON_CLICK: 'my_location_button_click',\n    INDOOR_BUILDING_FOCUSED: 'indoor_building_focused',\n    INDOOR_LEVEL_ACTIVATED: 'indoor_level_activated',\n    CAMERA_MOVE_START: 'camera_move_start',\n    CAMERA_MOVE: 'camera_move',\n    CAMERA_MOVE_END: 'camera_move_end',\n    OVERLAY_CLICK: 'overlay_click',\n    POLYGON_CLICK: 'polygon_click',\n    POLYLINE_CLICK: 'polyline_click',\n    CIRCLE_CLICK: 'circle_click',\n    GROUND_OVERLAY_CLICK: 'groundoverlay_click',\n    INFO_CLICK: 'info_click',\n    INFO_LONG_CLICK: 'info_long_click',\n    INFO_CLOSE: 'info_close',\n    INFO_OPEN: 'info_open',\n    MARKER_CLICK: 'marker_click',\n    MARKER_DRAG: 'marker_drag',\n    MARKER_DRAG_START: 'marker_drag_start',\n    MARKER_DRAG_END: 'marker_drag_end',\n    MAP_DRAG: 'map_drag',\n    MAP_DRAG_START: 'map_drag_start',\n    MAP_DRAG_END: 'map_drag_end',\n    KML_CLICK: 'kml_click',\n    PANORAMA_READY: 'panorama_ready',\n    PANORAMA_CAMERA_CHANGE: 'panorama_camera_change',\n    PANORAMA_LOCATION_CHANGE: 'panorama_location_change',\n    PANORAMA_CLICK: 'panorama_click'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsAnimation = {\n    BOUNCE: 'BOUNCE',\n    DROP: 'DROP'\n};\n/**\n * @hidden\n */\nexport var GoogleMapsMapTypeId = {\n    NORMAL: 'MAP_TYPE_NORMAL',\n    ROADMAP: 'MAP_TYPE_NORMAL',\n    SATELLITE: 'MAP_TYPE_SATELLITE',\n    HYBRID: 'MAP_TYPE_HYBRID',\n    TERRAIN: 'MAP_TYPE_TERRAIN',\n    NONE: 'MAP_TYPE_NONE'\n};\n/**\n * @name Google Maps\n * @description\n * This plugin uses the native Google Maps SDK\n * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\n * @usage\n * ```typescript\n * import {\n *  GoogleMaps,\n *  GoogleMap,\n *  GoogleMapsEvent,\n *  GoogleMapOptions,\n *  CameraPosition,\n *  MarkerOptions,\n *  Marker\n * } from '@ionic-native/google-maps';\n * import { Component } from \"@angular/core/\";\n *\n * @Component({\n *   selector: 'page-home',\n *   templateUrl: 'home.html'\n * })\n * export class HomePage {\n *   map: GoogleMap;\n *   constructor() { }\n *\n *   ionViewDidLoad() {\n *    this.loadMap();\n *   }\n *\n *  loadMap() {\n *\n *     let mapOptions: GoogleMapOptions = {\n *       camera: {\n *         target: {\n *           lat: 43.0741904,\n *           lng: -89.3809802\n *         },\n *         zoom: 18,\n *         tilt: 30\n *       }\n *     }\n *\n *     this.map = GoogleMaps.create('map_canvas', mapOptions);\n *\n *     let marker: Marker = this.map.addMarkerSync({\n *       title: 'Ionic',\n *       icon: 'blue',\n *       animation: 'DROP',\n *       position: {\n *         lat: 43.0741904,\n *         lng: -89.3809802\n *       }\n *     });\n *\n *     marker.on(GoogleMapsEvent.MARKER_CLICK)\n *       .subscribe(() => {\n *         alert('clicked');\n *       });\n *     });\n *   }\n * }\n *\n * ```\n * @classes\n * GoogleMaps\n * GoogleMap\n * StreetView\n * Circle\n * Encoding\n * Environment\n * Geocoder\n * GroundOverlay\n * HtmlInfoWindow\n * Geocoder\n * LatLng\n * LatLngBounds\n * Marker\n * MarkerCluster\n * Polygon\n * Polyline\n * Spherical\n * KmlOverlay\n * Poly\n * TileOverlay\n * BaseClass\n * BaseArrayClass\n * @interfaces\n * GoogleMapOptions\n * CameraPosition\n * CircleOptions\n * GeocoderRequest\n * GeocoderResult\n * GroundOverlayOptions\n * ILatLng\n * MarkerIcon\n * MarkerOptions\n * MarkerClusterIcon\n * MarkerClusterOptions\n * MyLocation\n * MyLocationOptions\n * PolygonOptions\n * PolylineOptions\n * TileOverlayOptions\n * KmlOverlayOptions\n * VisibleRegion\n */\nvar GoogleMaps = (function (_super) {\n    __extends(GoogleMaps, _super);\n    function GoogleMaps() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GoogleMaps_1 = GoogleMaps;\n    /**\n     * Creates a new GoogleMap instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {GoogleMapOptions} [options] Options\n     * @return {GoogleMap}\n     */\n    /**\n       * Creates a new GoogleMap instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {GoogleMapOptions} [options] Options\n       * @return {GoogleMap}\n       */\n    GoogleMaps.create = /**\n       * Creates a new GoogleMap instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {GoogleMapOptions} [options] Options\n       * @return {GoogleMap}\n       */\n    function (element, options) {\n        if (checkAvailability(GoogleMaps_1.getPluginRef(), null, GoogleMaps_1.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            else if (typeof element === 'object') {\n                options = element;\n                element = null;\n            }\n            var googleMap = new GoogleMap(element, options);\n            googleMap.set('_overlays', {});\n            return googleMap;\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    /**\n     * @deprecation keep this for backward compatibility.\n     * @hidden\n     */\n    /**\n       * @deprecation keep this for backward compatibility.\n       * @hidden\n       */\n    GoogleMaps.prototype.create = /**\n       * @deprecation keep this for backward compatibility.\n       * @hidden\n       */\n    function (element, options) {\n        console.error('GoogleMaps', '[deprecated] Please use GoogleMaps.create()');\n        return GoogleMaps_1.create(element, options);\n    };\n    /**\n     * Creates a new StreetView instance\n     * @param element {string | HTMLElement} Element ID or reference to attach the map to\n     * @param options {StreetViewOptions} [options] Options\n     * @return {StreetViewPanorama}\n     */\n    /**\n       * Creates a new StreetView instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {StreetViewOptions} [options] Options\n       * @return {StreetViewPanorama}\n       */\n    GoogleMaps.createPanorama = /**\n       * Creates a new StreetView instance\n       * @param element {string | HTMLElement} Element ID or reference to attach the map to\n       * @param options {StreetViewOptions} [options] Options\n       * @return {StreetViewPanorama}\n       */\n    function (element, options) {\n        if (checkAvailability(GoogleMaps_1.getPluginRef(), null, GoogleMaps_1.getPluginName()) === true) {\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.getAttribute('__pluginMapId')) {\n                    throw new Error(element.tagName + \"[__pluginMapId='\" + element.getAttribute('__pluginMapId') + \"'] has already map.\");\n                }\n            }\n            return new StreetViewPanorama(element, options);\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n    };\n    GoogleMaps.decorators = [\n        { type: Injectable },\n    ];\n    /**\n     * @name Google Maps\n     * @description\n     * This plugin uses the native Google Maps SDK\n     * Note: As of Ionic native 4.0, this using the 2.0 version of the google maps plugin. Please make sure your plugin is updated\n     * @usage\n     * ```typescript\n     * import {\n     *  GoogleMaps,\n     *  GoogleMap,\n     *  GoogleMapsEvent,\n     *  GoogleMapOptions,\n     *  CameraPosition,\n     *  MarkerOptions,\n     *  Marker\n     * } from '@ionic-native/google-maps';\n     * import { Component } from \"@angular/core/\";\n     *\n     * @Component({\n     *   selector: 'page-home',\n     *   templateUrl: 'home.html'\n     * })\n     * export class HomePage {\n     *   map: GoogleMap;\n     *   constructor() { }\n     *\n     *   ionViewDidLoad() {\n     *    this.loadMap();\n     *   }\n     *\n     *  loadMap() {\n     *\n     *     let mapOptions: GoogleMapOptions = {\n     *       camera: {\n     *         target: {\n     *           lat: 43.0741904,\n     *           lng: -89.3809802\n     *         },\n     *         zoom: 18,\n     *         tilt: 30\n     *       }\n     *     }\n     *\n     *     this.map = GoogleMaps.create('map_canvas', mapOptions);\n     *\n     *     let marker: Marker = this.map.addMarkerSync({\n     *       title: 'Ionic',\n     *       icon: 'blue',\n     *       animation: 'DROP',\n     *       position: {\n     *         lat: 43.0741904,\n     *         lng: -89.3809802\n     *       }\n     *     });\n     *\n     *     marker.on(GoogleMapsEvent.MARKER_CLICK)\n     *       .subscribe(() => {\n     *         alert('clicked');\n     *       });\n     *     });\n     *   }\n     * }\n     *\n     * ```\n     * @classes\n     * GoogleMaps\n     * GoogleMap\n     * StreetView\n     * Circle\n     * Encoding\n     * Environment\n     * Geocoder\n     * GroundOverlay\n     * HtmlInfoWindow\n     * Geocoder\n     * LatLng\n     * LatLngBounds\n     * Marker\n     * MarkerCluster\n     * Polygon\n     * Polyline\n     * Spherical\n     * KmlOverlay\n     * Poly\n     * TileOverlay\n     * BaseClass\n     * BaseArrayClass\n     * @interfaces\n     * GoogleMapOptions\n     * CameraPosition\n     * CircleOptions\n     * GeocoderRequest\n     * GeocoderResult\n     * GroundOverlayOptions\n     * ILatLng\n     * MarkerIcon\n     * MarkerOptions\n     * MarkerClusterIcon\n     * MarkerClusterOptions\n     * MyLocation\n     * MyLocationOptions\n     * PolygonOptions\n     * PolylineOptions\n     * TileOverlayOptions\n     * KmlOverlayOptions\n     * VisibleRegion\n     */\n    GoogleMaps = GoogleMaps_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: 'https://github.com/mapsplugin/cordova-plugin-googlemaps',\n            document: 'https://ionicframework.com/docs/native/google-maps/',\n            install: 'ionic cordova plugin add cordova-plugin-googlemaps --variable API_KEY_FOR_ANDROID=\"YOUR_ANDROID_API_KEY_IS_HERE\" --variable API_KEY_FOR_IOS=\"YOUR_IOS_API_KEY_IS_HERE\"',\n            installVariables: ['API_KEY_FOR_ANDROID', 'API_KEY_FOR_IOS'],\n            platforms: ['Android', 'iOS', 'Browser']\n        })\n    ], GoogleMaps);\n    return GoogleMaps;\n    var GoogleMaps_1;\n}(IonicNativePlugin));\nexport { GoogleMaps };\nvar displayErrorMessage = function (element, message) {\n    var errorDiv = document.createElement('div');\n    errorDiv.innerHTML = message;\n    errorDiv.style.color = 'red';\n    errorDiv.style.position = 'absolute';\n    errorDiv.style.width = '80%';\n    errorDiv.style.height = '50%';\n    errorDiv.style.top = '0px';\n    errorDiv.style.bottom = '0px';\n    errorDiv.style.right = '0px';\n    errorDiv.style.left = '0px';\n    errorDiv.style.padding = '0px';\n    errorDiv.style.margin = 'auto';\n    element.style.position = 'relative';\n    element.style.backgroundColor = '#ccc7';\n    element.appendChild(errorDiv);\n};\nvar ɵ0 = displayErrorMessage;\nvar normalizeArgumentsOfEventListener = function (_objectInstance, args) {\n    if (args[args.length - 1] instanceof GoogleMaps.getPlugin().BaseClass) {\n        if (args[args.length - 1].type === 'Map' || args[args.length - 1].type === 'StreetViewPanorama') {\n            args[args.length - 1] = _this;\n        }\n        else if (_objectInstance.__pgmId.indexOf('markercluster_') !== -1) {\n            var _overlays = _objectInstance.getMap().get('_overlays') || {};\n            var overlay = _overlays[args[args.length - 1].getId()];\n            if (!overlay) {\n                var markerJS = args[args.length - 1];\n                var markerId_1 = markerJS.getId();\n                var markerCluster = _objectInstance;\n                overlay = new Marker(markerCluster.getMap(), markerJS);\n                _objectInstance.getMap().get('_overlays')[markerId_1] = overlay;\n                markerJS.one(markerJS.getId() + '_remove', function () {\n                    _objectInstance.getMap().get('_overlays')[markerId_1] = null;\n                    delete _objectInstance.getMap().get('_overlays')[markerId_1];\n                });\n            }\n            args[args.length - 1] = overlay;\n        }\n        else {\n            args[args.length - 1] = _objectInstance.getMap().get('_overlays')[args[args.length - 1].getId()];\n        }\n    }\n    return args;\n};\nvar ɵ1 = normalizeArgumentsOfEventListener;\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\n */\nvar BaseClass = (function () {\n    function BaseClass(objInstance) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            if (!objInstance) {\n                objInstance = new (GoogleMaps.getPlugin().BaseClass)();\n            }\n            this._objectInstance = objInstance;\n        }\n        else {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before executing any methods.');\n        }\n    }\n    /**\n     * Adds an event listener.\n     * @param eventName {string} event name you want to observe.\n     * @return {Observable<any>}\n     */\n    /**\n       * Adds an event listener.\n       * @param eventName {string} event name you want to observe.\n       * @return {Observable<any>}\n       */\n    BaseClass.prototype.addEventListener = /**\n       * Adds an event listener.\n       * @param eventName {string} event name you want to observe.\n       * @return {Observable<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.addEventListener(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                observer.next(newArgs);\n            });\n        });\n    };\n    /**\n     * Attaches the handler for the event that is thrown by the target, where the minimum interval between events (in milliseconds) is specified as a parameter.\n     * @param eventName {string} event name you want to observe.\n     * @param throttleInterval {number} throttle interval in milliseconds\n     * @return {Observable<any>}\n     */\n    // addThrottledEventListener(eventName: string, throttleInterval: number): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.addThrottledEventListener(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n     * Adds an event listener that works once.\n     * @param eventName {string} event name you want to observe.\n     * @return {Promise<any>}\n     */\n    /**\n       * Attaches the handler for the event that is thrown by the target, where the minimum interval between events (in milliseconds) is specified as a parameter.\n       * @param eventName {string} event name you want to observe.\n       * @param throttleInterval {number} throttle interval in milliseconds\n       * @return {Observable<any>}\n       */\n    // addThrottledEventListener(eventName: string, throttleInterval: number): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.addThrottledEventListener(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    BaseClass.prototype.addEventListenerOnce = /**\n       * Attaches the handler for the event that is thrown by the target, where the minimum interval between events (in milliseconds) is specified as a parameter.\n       * @param eventName {string} event name you want to observe.\n       * @param throttleInterval {number} throttle interval in milliseconds\n       * @return {Observable<any>}\n       */\n    // addThrottledEventListener(eventName: string, throttleInterval: number): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.addThrottledEventListener(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.one(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                resolve(newArgs);\n            });\n        });\n    };\n    /**\n     * @deprecated\n     * Adds an event listener that works once.\n     * @param eventName {string} event name you want to observe.\n     * @return {Promise<any>}\n     */\n    /**\n       * @deprecated\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    BaseClass.prototype.addListenerOnce = /**\n       * @deprecated\n       * Adds an event listener that works once.\n       * @param eventName {string} event name you want to observe.\n       * @return {Promise<any>}\n       */\n    function (eventName) {\n        console.warn('[GoogleMaps] \"addListenerOnce\" is deprecated. Please use \"addEventListenerOnce\".');\n        return this.addEventListenerOnce(eventName);\n    };\n    /**\n     * Gets a value\n     * @param key {any}\n     */\n    /**\n       * Gets a value\n       * @param key {any}\n       */\n    BaseClass.prototype.get = /**\n       * Gets a value\n       * @param key {any}\n       */\n    function (key) {\n        return;\n    };\n    /**\n     * Sets a value\n     * @param key {string} The key name for the value. `(key)_changed` will be fired when you set value through this method.\n     * @param value {any}\n     * @param noNotify {boolean} [options] True if you want to prevent firing the `(key)_changed` event.\n     */\n    /**\n       * Sets a value\n       * @param key {string} The key name for the value. `(key)_changed` will be fired when you set value through this method.\n       * @param value {any}\n       * @param noNotify {boolean} [options] True if you want to prevent firing the `(key)_changed` event.\n       */\n    BaseClass.prototype.set = /**\n       * Sets a value\n       * @param key {string} The key name for the value. `(key)_changed` will be fired when you set value through this method.\n       * @param value {any}\n       * @param noNotify {boolean} [options] True if you want to prevent firing the `(key)_changed` event.\n       */\n    function (key, value, noNotify) {\n    };\n    /**\n     * Bind a key to another object\n     * @param key {string} The property name you want to observe.\n     * @param target {any} The target object you want to observe.\n     * @param targetKey? {string} [options]  The property name you want to observe. If you omit this, the `key` argument is used.\n     * @param noNotify? {boolean} [options] True if you want to prevent `(key)_changed` event when you bind first time, because the internal status is changed from `undefined` to something.\n     */\n    /**\n       * Bind a key to another object\n       * @param key {string} The property name you want to observe.\n       * @param target {any} The target object you want to observe.\n       * @param targetKey? {string} [options]  The property name you want to observe. If you omit this, the `key` argument is used.\n       * @param noNotify? {boolean} [options] True if you want to prevent `(key)_changed` event when you bind first time, because the internal status is changed from `undefined` to something.\n       */\n    BaseClass.prototype.bindTo = /**\n       * Bind a key to another object\n       * @param key {string} The property name you want to observe.\n       * @param target {any} The target object you want to observe.\n       * @param targetKey? {string} [options]  The property name you want to observe. If you omit this, the `key` argument is used.\n       * @param noNotify? {boolean} [options] True if you want to prevent `(key)_changed` event when you bind first time, because the internal status is changed from `undefined` to something.\n       */\n    function (key, target, targetKey, noNotify) {\n    };\n    /**\n     * Alias of `addEventListener`\n     * @param key {string} The property name you want to observe.\n     * @return {Observable<any>}\n     */\n    /**\n       * Alias of `addEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    BaseClass.prototype.on = /**\n       * Alias of `addEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._objectInstance.on(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                observer.next(newArgs);\n            });\n        });\n    };\n    /**\n     * Alias of `addThrottledEventListener`\n     * @param key {string} The property name you want to observe.\n     * @return {Observable<any>}\n     */\n    // @InstanceCheck({ observable: true })\n    // onThrottled(eventName: string): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.onThrottled(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n     * Alias of `addEventListenerOnce`\n     * @param key {string} The property name you want to observe.\n     * @return {Promise<any>}\n     */\n    /**\n       * Alias of `addThrottledEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    // @InstanceCheck({ observable: true })\n    // onThrottled(eventName: string): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.onThrottled(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Alias of `addEventListenerOnce`\n       * @param key {string} The property name you want to observe.\n       * @return {Promise<any>}\n       */\n    BaseClass.prototype.one = /**\n       * Alias of `addThrottledEventListener`\n       * @param key {string} The property name you want to observe.\n       * @return {Observable<any>}\n       */\n    // @InstanceCheck({ observable: true })\n    // onThrottled(eventName: string): Observable<any> {\n    //   return new Observable((observer) => {\n    //     this._objectInstance.onThrottled(eventName, (...args: any[]) => {\n    //       const newArgs = normalizeArgumentsOfEventListener.call(this, this._objectInstance, args);\n    //       observer.next(newArgs);\n    //     });\n    //   });\n    // }\n    /**\n       * Alias of `addEventListenerOnce`\n       * @param key {string} The property name you want to observe.\n       * @return {Promise<any>}\n       */\n    function (eventName) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.one(eventName, function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var newArgs = normalizeArgumentsOfEventListener.call(_this, _this._objectInstance, args);\n                resolve(newArgs);\n            });\n        });\n    };\n    /**\n     * Return true if this object has event listener for event name\n     * @param eventName {string} Event name\n     * @return {boolean}\n     */\n    /**\n       * Return true if this object has event listener for event name\n       * @param eventName {string} Event name\n       * @return {boolean}\n       */\n    BaseClass.prototype.hasEventListener = /**\n       * Return true if this object has event listener for event name\n       * @param eventName {string} Event name\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Clears all stored values\n     */\n    /**\n       * Clears all stored values\n       */\n    BaseClass.prototype.empty = /**\n       * Clears all stored values\n       */\n    function () {\n    };\n    /**\n     * Dispatch event.\n     * @param eventName {string} Event name\n     * @param parameters {any} [options] The data you want to pass to event listerners.\n     */\n    /**\n       * Dispatch event.\n       * @param eventName {string} Event name\n       * @param parameters {any} [options] The data you want to pass to event listerners.\n       */\n    BaseClass.prototype.trigger = /**\n       * Dispatch event.\n       * @param eventName {string} Event name\n       * @param parameters {any} [options] The data you want to pass to event listerners.\n       */\n    function (eventName) {\n        var parameters = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parameters[_i - 1] = arguments[_i];\n        }\n    };\n    /**\n     * Executes off() and empty()\n     */\n    /**\n       * Executes off() and empty()\n       */\n    BaseClass.prototype.destroy = /**\n       * Executes off() and empty()\n       */\n    function () {\n        if (this._objectInstance.type === 'Map') {\n            var map = this._objectInstance.getMap();\n            if (map) {\n                delete this._objectInstance.getMap().get('_overlays')[this._objectInstance.getId()];\n            }\n        }\n        this._objectInstance.remove();\n    };\n    /**\n     * Remove event listener(s)\n     * The `removeEventListener()` has three usages:\n     *  - removeEventListener(\"eventName\", listenerFunction);\n     *     This removes one particular event listener\n     *  - removeEventListener(\"eventName\");\n     *     This removes the event listeners that added for the event name.\n     *  - removeEventListener();\n     *     This removes all listeners.\n     *\n     * @param eventName {string} [options] Event name\n     * @param listener {Function} [options] Event listener\n     */\n    /**\n       * Remove event listener(s)\n       * The `removeEventListener()` has three usages:\n       *  - removeEventListener(\"eventName\", listenerFunction);\n       *     This removes one particular event listener\n       *  - removeEventListener(\"eventName\");\n       *     This removes the event listeners that added for the event name.\n       *  - removeEventListener();\n       *     This removes all listeners.\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    BaseClass.prototype.removeEventListener = /**\n       * Remove event listener(s)\n       * The `removeEventListener()` has three usages:\n       *  - removeEventListener(\"eventName\", listenerFunction);\n       *     This removes one particular event listener\n       *  - removeEventListener(\"eventName\");\n       *     This removes the event listeners that added for the event name.\n       *  - removeEventListener();\n       *     This removes all listeners.\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    function (eventName, listener) { };\n    /**\n     * Alias of `removeEventListener`\n     *\n     * @param eventName {string} [options] Event name\n     * @param listener {Function} [options] Event listener\n     */\n    /**\n       * Alias of `removeEventListener`\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    BaseClass.prototype.off = /**\n       * Alias of `removeEventListener`\n       *\n       * @param eventName {string} [options] Event name\n       * @param listener {Function} [options] Event listener\n       */\n    function (eventName, listener) { };\n    __decorate([\n        InstanceCheck({ observable: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], BaseClass.prototype, \"addEventListener\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"addEventListenerOnce\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"addListenerOnce\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseClass.prototype, \"get\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"set\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object, String, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"bindTo\", null);\n    __decorate([\n        InstanceCheck({ observable: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Observable)\n    ], BaseClass.prototype, \"on\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], BaseClass.prototype, \"one\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], BaseClass.prototype, \"hasEventListener\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"empty\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"trigger\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"destroy\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"removeEventListener\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseClass.prototype, \"off\", null);\n    /**\n     * @hidden\n     * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseClass/README.md\n     */\n    BaseClass = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.BaseClass',\n            repo: ''\n        }),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseClass);\n    return BaseClass;\n}());\nexport { BaseClass };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\n */\nvar BaseArrayClass = (function (_super) {\n    __extends(BaseArrayClass, _super);\n    function BaseArrayClass(initialData) {\n        var _this = this;\n        if (initialData instanceof GoogleMaps.getPlugin().BaseArrayClass) {\n            _this = _super.call(this, initialData) || this;\n        }\n        else if (Array.isArray(initialData)) {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)(initialData)) || this;\n        }\n        else {\n            _this = _super.call(this, new (GoogleMaps.getPlugin().BaseArrayClass)([])) || this;\n        }\n        return _this;\n    }\n    /**\n     * Removes all elements from the array.\n     * @param noNotify? {boolean} [options] Set true to prevent remove_at events.\n     */\n    /**\n       * Removes all elements from the array.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at events.\n       */\n    BaseArrayClass.prototype.empty = /**\n       * Removes all elements from the array.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at events.\n       */\n    function (noNotify) {\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     */\n    /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       */\n    BaseArrayClass.prototype.forEach = /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       */\n    function (fn) {\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param fn {Function}\n     * @return {Promise<void>}\n     */\n    /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       * @return {Promise<void>}\n       */\n    BaseArrayClass.prototype.forEachAsync = /**\n       * Iterate over each element, calling the provided callback.\n       * @param fn {Function}\n       * @return {Promise<void>}\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.forEach(fn, resolve);\n        });\n    };\n    /**\n     * Iterate over each element, then Returns a new value.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @return {Object[]} returns a new array with the results\n     */\n    /**\n       * Iterate over each element, then Returns a new value.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @return {Object[]} returns a new array with the results\n       */\n    BaseArrayClass.prototype.map = /**\n       * Iterate over each element, then Returns a new value.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @return {Object[]} returns a new array with the results\n       */\n    function (fn) {\n        return;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * Then you can get the results of each callback.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    /**\n       * Iterate over each element, calling the provided callback.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    BaseArrayClass.prototype.mapAsync = /**\n       * Iterate over each element, calling the provided callback.\n       * Then you can get the results of each callback.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.map(fn, resolve);\n        });\n    };\n    /**\n     * Same as `mapAsync`, but keep the execution order\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<any>} returns a new array with the results\n     */\n    /**\n       * Same as `mapAsync`, but keep the execution order\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    BaseArrayClass.prototype.mapSeries = /**\n       * Same as `mapAsync`, but keep the execution order\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<any>} returns a new array with the results\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.mapSeries(fn, resolve);\n        });\n    };\n    /**\n     * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @return {T[]} returns a new filtered array\n     */\n    /**\n       * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @return {T[]} returns a new filtered array\n       */\n    BaseArrayClass.prototype.filter = /**\n       * The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @return {T[]} returns a new filtered array\n       */\n    function (fn) {\n        return;\n    };\n    /**\n     * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n     * @param fn {Function}\n     * @param callback {Function}\n     * @return {Promise<T[]>} returns a new filtered array\n     */\n    /**\n       * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<T[]>} returns a new filtered array\n       */\n    BaseArrayClass.prototype.filterAsync = /**\n       * The filterAsync() method creates a new array with all elements that pass the test implemented by the provided function.\n       * @param fn {Function}\n       * @param callback {Function}\n       * @return {Promise<T[]>} returns a new filtered array\n       */\n    function (fn) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.filter(fn, resolve);\n        });\n    };\n    /**\n     * Returns a reference to the underlying Array.\n     * @return {Object[]}\n     */\n    /**\n       * Returns a reference to the underlying Array.\n       * @return {Object[]}\n       */\n    BaseArrayClass.prototype.getArray = /**\n       * Returns a reference to the underlying Array.\n       * @return {Object[]}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the element at the specified index.\n     * @param index {number}\n     * @return {Object}\n     */\n    /**\n       * Returns the element at the specified index.\n       * @param index {number}\n       * @return {Object}\n       */\n    BaseArrayClass.prototype.getAt = /**\n       * Returns the element at the specified index.\n       * @param index {number}\n       * @return {Object}\n       */\n    function (index) {\n    };\n    /**\n     * Returns the number of the elements.\n     * @return {number}\n     */\n    /**\n       * Returns the number of the elements.\n       * @return {number}\n       */\n    BaseArrayClass.prototype.getLength = /**\n       * Returns the number of the elements.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n     * @param element {Object}\n     * @return {number}\n     */\n    /**\n       * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n       * @param element {Object}\n       * @return {number}\n       */\n    BaseArrayClass.prototype.indexOf = /**\n       * The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.\n       * @param element {Object}\n       * @return {number}\n       */\n    function (element) {\n        return;\n    };\n    /**\n     * The reverse() method reverses an array in place.\n     */\n    /**\n       * The reverse() method reverses an array in place.\n       */\n    BaseArrayClass.prototype.reverse = /**\n       * The reverse() method reverses an array in place.\n       */\n    function () {\n    };\n    /**\n     * The sort() method sorts the elements of an array in place and returns the array.\n     */\n    /**\n       * The sort() method sorts the elements of an array in place and returns the array.\n       */\n    BaseArrayClass.prototype.sort = /**\n       * The sort() method sorts the elements of an array in place and returns the array.\n       */\n    function () {\n    };\n    /**\n     * Inserts an element at the specified index.\n     * @param index {number}\n     * @param element {Object}\n     * @param noNotify? {boolean} [options] Set true to prevent insert_at event.\n     * @return {Object}\n     */\n    /**\n       * Inserts an element at the specified index.\n       * @param index {number}\n       * @param element {Object}\n       * @param noNotify? {boolean} [options] Set true to prevent insert_at event.\n       * @return {Object}\n       */\n    BaseArrayClass.prototype.insertAt = /**\n       * Inserts an element at the specified index.\n       * @param index {number}\n       * @param element {Object}\n       * @param noNotify? {boolean} [options] Set true to prevent insert_at event.\n       * @return {Object}\n       */\n    function (index, element, noNotify) {\n    };\n    /**\n     * Removes the last element of the array and returns that element.\n     * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n     * @return {Object}\n     */\n    /**\n       * Removes the last element of the array and returns that element.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       * @return {Object}\n       */\n    BaseArrayClass.prototype.pop = /**\n       * Removes the last element of the array and returns that element.\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       * @return {Object}\n       */\n    function (noNotify) {\n        return;\n    };\n    /**\n     * Adds one element to the end of the array and returns the new length of the array.\n     * @param element {object}\n     * @param noNotify? {boolean} Set true to prevent insert_at events.\n     */\n    /**\n       * Adds one element to the end of the array and returns the new length of the array.\n       * @param element {object}\n       * @param noNotify? {boolean} Set true to prevent insert_at events.\n       */\n    BaseArrayClass.prototype.push = /**\n       * Adds one element to the end of the array and returns the new length of the array.\n       * @param element {object}\n       * @param noNotify? {boolean} Set true to prevent insert_at events.\n       */\n    function (element, noNotify) {\n    };\n    /**\n     * Removes an element from the specified index.\n     * @param index {number}\n     * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n     */\n    /**\n       * Removes an element from the specified index.\n       * @param index {number}\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       */\n    BaseArrayClass.prototype.removeAt = /**\n       * Removes an element from the specified index.\n       * @param index {number}\n       * @param noNotify? {boolean} [options] Set true to prevent remove_at event.\n       */\n    function (index, noNotify) { return; };\n    /**\n     * Sets an element at the specified index.\n     * @param index {number}\n     * @param element {object}\n     * @param noNotify? {boolean} [options] Set true to prevent set_at event.\n     */\n    /**\n       * Sets an element at the specified index.\n       * @param index {number}\n       * @param element {object}\n       * @param noNotify? {boolean} [options] Set true to prevent set_at event.\n       */\n    BaseArrayClass.prototype.setAt = /**\n       * Sets an element at the specified index.\n       * @param index {number}\n       * @param element {object}\n       * @param noNotify? {boolean} [options] Set true to prevent set_at event.\n       */\n    function (index, element, noNotify) {\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"empty\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"forEach\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"map\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function]),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"filter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Array)\n    ], BaseArrayClass.prototype, \"getArray\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"getAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], BaseArrayClass.prototype, \"getLength\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Number)\n    ], BaseArrayClass.prototype, \"indexOf\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"reverse\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"sort\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"insertAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"pop\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"push\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Boolean]),\n        __metadata(\"design:returntype\", Object)\n    ], BaseArrayClass.prototype, \"removeAt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Object, Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], BaseArrayClass.prototype, \"setAt\", null);\n    /**\n     * @hidden\n     * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/BaseArrayClass/README.md\n     */\n    BaseArrayClass = __decorate([\n        Plugin({\n            pluginName: 'BaseArrayClass',\n            plugin: 'cordova-plugin-googlemaps',\n            pluginRef: 'plugin.google.maps.BaseArrayClass'\n        }),\n        __metadata(\"design:paramtypes\", [Object])\n    ], BaseArrayClass);\n    return BaseArrayClass;\n}(BaseClass));\nexport { BaseArrayClass };\n/**\n * @hidden\n * https://github.com/mapsplugin/cordova-plugin-googlemaps-doc/blob/master/v2.0.0/class/Circle/README.md\n */\nvar Circle = (function (_super) {\n    __extends(Circle, _super);\n    function Circle(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Circle.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Circle.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the center position.\n     * @param latLng {ILatLng}\n     */\n    /**\n       * Changes the center position.\n       * @param latLng {ILatLng}\n       */\n    Circle.prototype.setCenter = /**\n       * Changes the center position.\n       * @param latLng {ILatLng}\n       */\n    function (latLng) {\n    };\n    /**\n     * Returns the current center position\n     * @return {ILatLng}\n     */\n    /**\n       * Returns the current center position\n       * @return {ILatLng}\n       */\n    Circle.prototype.getCenter = /**\n       * Returns the current center position\n       * @return {ILatLng}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the current circle radius.\n     * @return {number}\n     */\n    /**\n       * Returns the current circle radius.\n       * @return {number}\n       */\n    Circle.prototype.getRadius = /**\n       * Returns the current circle radius.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the circle radius.\n     * @param radius {number}\n     */\n    /**\n       * Changes the circle radius.\n       * @param radius {number}\n       */\n    Circle.prototype.setRadius = /**\n       * Changes the circle radius.\n       * @param radius {number}\n       */\n    function (radius) {\n    };\n    /**\n     * Changes the filling color (inner color).\n     * @param color {string}\n     */\n    /**\n       * Changes the filling color (inner color).\n       * @param color {string}\n       */\n    Circle.prototype.setFillColor = /**\n       * Changes the filling color (inner color).\n       * @param color {string}\n       */\n    function (color) {\n    };\n    /**\n     * Returns the current circle filling color (inner color).\n     * @return {string}\n     */\n    /**\n       * Returns the current circle filling color (inner color).\n       * @return {string}\n       */\n    Circle.prototype.getFillColor = /**\n       * Returns the current circle filling color (inner color).\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the stroke width.\n     * @param strokeWidth {number}\n     */\n    /**\n       * Changes the stroke width.\n       * @param strokeWidth {number}\n       */\n    Circle.prototype.setStrokeWidth = /**\n       * Changes the stroke width.\n       * @param strokeWidth {number}\n       */\n    function (strokeWidth) {\n    };\n    /**\n     * Returns the current circle stroke width (unit: pixel).\n     * @return {number}\n     */\n    /**\n       * Returns the current circle stroke width (unit: pixel).\n       * @return {number}\n       */\n    Circle.prototype.getStrokeWidth = /**\n       * Returns the current circle stroke width (unit: pixel).\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the stroke color (outter color).\n     * @param strokeColor {string}\n     */\n    /**\n       * Changes the stroke color (outter color).\n       * @param strokeColor {string}\n       */\n    Circle.prototype.setStrokeColor = /**\n       * Changes the stroke color (outter color).\n       * @param strokeColor {string}\n       */\n    function (strokeColor) {\n    };\n    /**\n     * Returns the current circle stroke color (outer color).\n     * @return {string}\n     */\n    /**\n       * Returns the current circle stroke color (outer color).\n       * @return {string}\n       */\n    Circle.prototype.getStrokeColor = /**\n       * Returns the current circle stroke color (outer color).\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the circle.\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the circle.\n       * @param clickable {boolean}\n       */\n    Circle.prototype.setClickable = /**\n       * Changes click-ability of the circle.\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the circle is clickable.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the circle is clickable.\n       * @return {boolean}\n       */\n    Circle.prototype.getClickable = /**\n       * Returns true if the circle is clickable.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the circle zIndex order.\n     * @param zIndex {number}\n     */\n    /**\n       * Changes the circle zIndex order.\n       * @param zIndex {number}\n       */\n    Circle.prototype.setZIndex = /**\n       * Changes the circle zIndex order.\n       * @param zIndex {number}\n       */\n    function (zIndex) {\n    };\n    /**\n     * Returns the current circle zIndex.\n     * @return {number}\n     */\n    /**\n       * Returns the current circle zIndex.\n       * @return {number}\n       */\n    Circle.prototype.getZIndex = /**\n       * Returns the current circle zIndex.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the circle.\n     */\n    /**\n       * Remove the circle.\n       */\n    Circle.prototype.remove = /**\n       * Remove the circle.\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Returns the latLngBounds (rectangle) that contains the circle.\n     * @return {LatLngBounds}\n     */\n    /**\n       * Returns the latLngBounds (rectangle) that contains the circle.\n       * @return {LatLngBounds}\n       */\n    Circle.prototype.getBounds = /**\n       * Returns the latLngBounds (rectangle) that contains the circle.\n       * @return {LatLngBounds}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set circle visibility\n     * @param visible {boolean}\n     */\n    /**\n       * Set circle visibility\n       * @param visible {boolean}\n       */\n    Circle.prototype.setVisible = /**\n       * Set circle visibility\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the circle is visible.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the circle is visible.\n       * @return {boolean}\n       */\n    Circle.prototype.getVisible = /**\n       * Returns true if the circle is visible.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setCenter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Circle.prototype, \"getCenter\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getRadius\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setRadius\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Circle.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Circle.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Circle.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", LatLngBounds)\n    ], Circle.prototype, \"getBounds\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Circle.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Circle.prototype, \"getVisible\", null);\n    return Circle;\n}(BaseClass));\nexport { Circle };\n/**\n * @hidden\n */\nvar Environment = (function () {\n    function Environment() {\n    }\n    Environment_1 = Environment;\n    /**\n     * Set environment variables.\n     */\n    /**\n       * Set environment variables.\n       */\n    Environment.setEnv = /**\n       * Set environment variables.\n       */\n    function (envOptions) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setEnv(envOptions);\n    };\n    /**\n     * Get the open source software license information for Google Maps SDK for iOS.\n     * @return {Promise<any>}\n     */\n    /**\n       * Get the open source software license information for Google Maps SDK for iOS.\n       * @return {Promise<any>}\n       */\n    Environment.getLicenseInfo = /**\n       * Get the open source software license information for Google Maps SDK for iOS.\n       * @return {Promise<any>}\n       */\n    function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return new Promise(function (resolve) {\n            GoogleMaps.getPlugin().environment.getLicenseInfo(function (text) { return resolve(text); });\n        });\n    };\n    /**\n     * Specifies the background color of the app.\n     * @param color\n     */\n    /**\n       * Specifies the background color of the app.\n       * @param color\n       */\n    Environment.setBackgroundColor = /**\n       * Specifies the background color of the app.\n       * @param color\n       */\n    function (color) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        GoogleMaps.getPlugin().environment.setBackgroundColor(color);\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.getLicenseInfo()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Environment.getLicenseInfo()\n       * @hidden\n       */\n    Environment.prototype.getLicenseInfo = /**\n       * @deprecation This method is static. Please use Environment.getLicenseInfo()\n       * @hidden\n       */\n    function () {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.getLicenseInfo()');\n        return Environment_1.getLicenseInfo();\n    };\n    /**\n     * @deprecation This method is static. Please use Environment.setBackgroundColor()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Environment.setBackgroundColor()\n       * @hidden\n       */\n    Environment.prototype.setBackgroundColor = /**\n       * @deprecation This method is static. Please use Environment.setBackgroundColor()\n       * @hidden\n       */\n    function (color) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Environment.setBackgroundColor()');\n        Environment_1.setBackgroundColor(color);\n    };\n    /**\n     * @hidden\n     */\n    Environment = Environment_1 = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.environment',\n            repo: ''\n        })\n    ], Environment);\n    return Environment;\n    var Environment_1;\n}());\nexport { Environment };\n/**\n * @hidden\n */\nvar Geocoder = (function () {\n    function Geocoder() {\n    }\n    Geocoder_1 = Geocoder;\n    /**\n     * @deprecation This method is static. Please use Geocoder.geocode()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Geocoder.geocode()\n       * @hidden\n       */\n    Geocoder.prototype.geocode = /**\n       * @deprecation This method is static. Please use Geocoder.geocode()\n       * @hidden\n       */\n    function (request) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Geocoder.geocode()');\n        return Geocoder_1.geocode(request);\n    };\n    /**\n     * Converts position to address and vice versa\n     * @param {GeocoderRequest} request Request object with either an address or a position\n     * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n     */\n    /**\n       * Converts position to address and vice versa\n       * @param {GeocoderRequest} request Request object with either an address or a position\n       * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n       */\n    Geocoder.geocode = /**\n       * Converts position to address and vice versa\n       * @param {GeocoderRequest} request Request object with either an address or a position\n       * @return {Promise<GeocoderResult[] | BaseArrayClass<GeocoderResult>>}\n       */\n    function (request) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        if (request.address instanceof Array || Array.isArray(request.address) ||\n            request.position instanceof Array || Array.isArray(request.position)) {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: [\n            //    \"Kyoto, Japan\",\n            //    \"Tokyo, Japan\"\n            //   ]\n            // })\n            // -------------------------\n            return new Promise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (mvcArray) {\n                    if (mvcArray) {\n                        resolve(new BaseArrayClass(mvcArray));\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n        else {\n            // -------------------------\n            // Geocoder.geocode({\n            //   address: \"Kyoto, Japan\"\n            // })\n            // -------------------------\n            return new Promise(function (resolve, reject) {\n                GoogleMaps.getPlugin().Geocoder.geocode(request, function (results) {\n                    if (results) {\n                        resolve(results);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }\n    };\n    /**\n     * @hidden\n     */\n    Geocoder = Geocoder_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.Geocoder',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Geocoder);\n    return Geocoder;\n    var Geocoder_1;\n}());\nexport { Geocoder };\n/**\n * @hidden\n */\nvar LocationService = (function () {\n    function LocationService() {\n    }\n    /**\n     * Get the current device location without map\n     * @return {Promise<MyLocation>}\n     */\n    /**\n       * Get the current device location without map\n       * @return {Promise<MyLocation>}\n       */\n    LocationService.getMyLocation = /**\n       * Get the current device location without map\n       * @return {Promise<MyLocation>}\n       */\n    function (options) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return new Promise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Return true if the application has geolocation permission\n     * @return {Promise<boolean>}\n     */\n    /**\n       * Return true if the application has geolocation permission\n       * @return {Promise<boolean>}\n       */\n    LocationService.hasPermission = /**\n       * Return true if the application has geolocation permission\n       * @return {Promise<boolean>}\n       */\n    function () {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return new Promise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.hasPermission(resolve, reject);\n        });\n    };\n    /**\n     * @hidden\n     */\n    LocationService = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.LocationService',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], LocationService);\n    return LocationService;\n}());\nexport { LocationService };\n/**\n * @hidden\n */\nvar Encoding = (function () {\n    function Encoding() {\n    }\n    Encoding_1 = Encoding;\n    /**\n     * Decodes an encoded path string into a sequence of LatLngs.\n     * @param encoded {string} an encoded path string\n     * @param precision? {number} default: 5\n     * @return {LatLng}\n     */\n    /**\n       * Decodes an encoded path string into a sequence of LatLngs.\n       * @param encoded {string} an encoded path string\n       * @param precision? {number} default: 5\n       * @return {LatLng}\n       */\n    Encoding.decodePath = /**\n       * Decodes an encoded path string into a sequence of LatLngs.\n       * @param encoded {string} an encoded path string\n       * @param precision? {number} default: 5\n       * @return {LatLng}\n       */\n    function (encoded, precision) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.decodePath(encoded, precision);\n    };\n    /**\n     * Encodes a sequence of LatLngs into an encoded path string.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n     * @return {string}\n     */\n    /**\n       * Encodes a sequence of LatLngs into an encoded path string.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n       * @return {string}\n       */\n    Encoding.encodePath = /**\n       * Encodes a sequence of LatLngs into an encoded path string.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>} a sequence of LatLngs\n       * @return {string}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().encoding.encodePath(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.decodePath()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Encoding.decodePath()\n       * @hidden\n       */\n    Encoding.prototype.decodePath = /**\n       * @deprecation This method is static. Please use Encoding.decodePath()\n       * @hidden\n       */\n    function (encoded, precision) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.decodePath()');\n        return Encoding_1.decodePath(encoded, precision);\n    };\n    /**\n     * @deprecation This method is static. Please use Encoding.encodePath()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Encoding.encodePath()\n       * @hidden\n       */\n    Encoding.prototype.encodePath = /**\n       * @deprecation This method is static. Please use Encoding.encodePath()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Encoding.encodePath()');\n        return Encoding_1.encodePath(path);\n    };\n    /**\n     * @hidden\n     */\n    Encoding = Encoding_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.encoding',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Encoding);\n    return Encoding;\n    var Encoding_1;\n}());\nexport { Encoding };\n/**\n * @hidden\n */\nvar Poly = (function () {\n    function Poly() {\n    }\n    /**\n     * Returns true if the specified location is in the polygon path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the specified location is in the polygon path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    Poly.containsLocation = /**\n       * Returns true if the specified location is in the polygon path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.containsLocation(location, path);\n    };\n    /**\n     * Returns true if the specified location is on the polyline path\n     * @param location {ILatLng}\n     * @param path {ILatLng[]}\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the specified location is on the polyline path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    Poly.isLocationOnEdge = /**\n       * Returns true if the specified location is on the polyline path\n       * @param location {ILatLng}\n       * @param path {ILatLng[]}\n       * @return {boolean}\n       */\n    function (location, path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.poly.isLocationOnEdge(location, path);\n    };\n    /**\n     * @hidden\n     */\n    Poly = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.poly',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Poly);\n    return Poly;\n}());\nexport { Poly };\n/**\n * @hidden\n */\nvar Spherical = (function () {\n    function Spherical() {\n    }\n    Spherical_1 = Spherical;\n    /**\n     * Returns the distance, in meters, between two LatLngs.\n     * @param locationA {ILatLng}\n     * @param locationB {ILatLng}\n     * @return {number}\n     */\n    /**\n       * Returns the distance, in meters, between two LatLngs.\n       * @param locationA {ILatLng}\n       * @param locationB {ILatLng}\n       * @return {number}\n       */\n    Spherical.computeDistanceBetween = /**\n       * Returns the distance, in meters, between two LatLngs.\n       * @param locationA {ILatLng}\n       * @param locationB {ILatLng}\n       * @return {number}\n       */\n    function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeDistanceBetween(from, to);\n    };\n    /**\n     * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n     * @param from {ILatLng}\n     * @param distance {number}\n     * @param heading {number}\n     * @return {LatLng}\n     */\n    /**\n       * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n       * @param from {ILatLng}\n       * @param distance {number}\n       * @param heading {number}\n       * @return {LatLng}\n       */\n    Spherical.computeOffset = /**\n       * Returns the LatLng resulting from moving a distance from an origin in the specified heading (expressed in degrees clockwise from north)\n       * @param from {ILatLng}\n       * @param distance {number}\n       * @param heading {number}\n       * @return {LatLng}\n       */\n    function (from, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffset(from, distance, heading);\n    };\n    /**\n     * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n     * @param to {ILatLng} The destination LatLng.\n     * @param distance {number} The distance travelled, in meters.\n     * @param heading {number} The heading in degrees clockwise from north.\n     * @return {LatLng}\n     */\n    /**\n       * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n       * @param to {ILatLng} The destination LatLng.\n       * @param distance {number} The distance travelled, in meters.\n       * @param heading {number} The heading in degrees clockwise from north.\n       * @return {LatLng}\n       */\n    Spherical.computeOffsetOrigin = /**\n       * Returns the location of origin when provided with a LatLng destination, meters travelled and original heading. Headings are expressed in degrees clockwise from North. This function returns null when no solution is available.\n       * @param to {ILatLng} The destination LatLng.\n       * @param distance {number} The distance travelled, in meters.\n       * @param heading {number} The heading in degrees clockwise from north.\n       * @return {LatLng}\n       */\n    function (to, distance, heading) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * Returns the length of the given path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n     * @return {number}\n     */\n    /**\n       * Returns the length of the given path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n       * @return {number}\n       */\n    Spherical.computeLength = /**\n       * Returns the length of the given path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}\n       * @return {number}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the area of a closed path. The computed area uses the same units as the radius.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    /**\n       * Returns the area of a closed path. The computed area uses the same units as the radius.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    Spherical.computeArea = /**\n       * Returns the area of a closed path. The computed area uses the same units as the radius.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeLength(path);\n    };\n    /**\n     * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n     * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n     * @return {number}\n     */\n    /**\n       * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    Spherical.computeSignedArea = /**\n       * Returns the signed area of a closed path. The signed area may be used to determine the orientation of the path.\n       * @param path {ILatLng[] | BaseArrayClass<ILatLng>}.\n       * @return {number}\n       */\n    function (path) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeSignedArea(path);\n    };\n    /**\n     * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n     * @param from {ILatLng}\n     * @param to {ILatLng}\n     * @return {number}\n     */\n    /**\n       * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n       * @param from {ILatLng}\n       * @param to {ILatLng}\n       * @return {number}\n       */\n    Spherical.computeHeading = /**\n       * Returns the heading from one LatLng to another LatLng. Headings are expressed in degrees clockwise from North within the range (-180,180).\n       * @param from {ILatLng}\n       * @param to {ILatLng}\n       * @return {number}\n       */\n    function (from, to) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.computeHeading(from, to);\n    };\n    /**\n     * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n     * @param from {ILatLng}     The LatLng from which to start.\n     * @param to {ILatLng}       The LatLng toward which to travel.\n     * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n     * @return {LatLng}\n     */\n    /**\n       * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n       * @param from {ILatLng}     The LatLng from which to start.\n       * @param to {ILatLng}       The LatLng toward which to travel.\n       * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n       * @return {LatLng}\n       */\n    Spherical.interpolate = /**\n       * Returns the LatLng which lies the given fraction of the way between the origin LatLng and the destination LatLng.\n       * @param from {ILatLng}     The LatLng from which to start.\n       * @param to {ILatLng}       The LatLng toward which to travel.\n       * @param fraction {number}  A fraction of the distance to travel from 0.0 to 1.0 .\n       * @return {LatLng}\n       */\n    function (from, to, fraction) {\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === false) {\n            throw new Error('cordova-plugin-googlemaps is not ready. Please use platform.ready() before accessing this method.');\n        }\n        return GoogleMaps.getPlugin().geometry.spherical.interpolate(from, to, fraction);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n       * @hidden\n       */\n    Spherical.prototype.computeDistanceBetween = /**\n       * @deprecation This method is static. Please use Spherical.computeDistanceBetween()\n       * @hidden\n       */\n    function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeDistanceBetween()');\n        return Spherical_1.computeDistanceBetween(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffset()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeOffset()\n       * @hidden\n       */\n    Spherical.prototype.computeOffset = /**\n       * @deprecation This method is static. Please use Spherical.computeOffset()\n       * @hidden\n       */\n    function (from, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffset()');\n        return Spherical_1.computeOffset(from, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n       * @hidden\n       */\n    Spherical.prototype.computeOffsetOrigin = /**\n       * @deprecation This method is static. Please use Spherical.computeOffsetOrigin()\n       * @hidden\n       */\n    function (to, distance, heading) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeOffsetOrigin()');\n        return Spherical_1.computeOffsetOrigin(to, distance, heading);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeLength()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeLength()\n       * @hidden\n       */\n    Spherical.prototype.computeLength = /**\n       * @deprecation This method is static. Please use Spherical.computeLength()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeLength()');\n        return Spherical_1.computeLength(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeArea()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeArea()\n       * @hidden\n       */\n    Spherical.prototype.computeArea = /**\n       * @deprecation This method is static. Please use Spherical.computeArea()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeArea()');\n        return Spherical_1.computeArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeSignedArea()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeSignedArea()\n       * @hidden\n       */\n    Spherical.prototype.computeSignedArea = /**\n       * @deprecation This method is static. Please use Spherical.computeSignedArea()\n       * @hidden\n       */\n    function (path) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeSignedArea()');\n        return Spherical_1.computeSignedArea(path);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.computeHeading()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.computeHeading()\n       * @hidden\n       */\n    Spherical.prototype.computeHeading = /**\n       * @deprecation This method is static. Please use Spherical.computeHeading()\n       * @hidden\n       */\n    function (from, to) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.computeHeading()');\n        return Spherical_1.computeHeading(from, to);\n    };\n    /**\n     * @deprecation This method is static. Please use Spherical.interpolate()\n     * @hidden\n     */\n    /**\n       * @deprecation This method is static. Please use Spherical.interpolate()\n       * @hidden\n       */\n    Spherical.prototype.interpolate = /**\n       * @deprecation This method is static. Please use Spherical.interpolate()\n       * @hidden\n       */\n    function (from, to, fraction) {\n        console.error('GoogleMaps', '[deprecated] This method is static. Please use Spherical.interpolate()');\n        return Spherical_1.interpolate(from, to, fraction);\n    };\n    /**\n     * @hidden\n     */\n    Spherical = Spherical_1 = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.geometry.spherical',\n            plugin: 'cordova-plugin-googlemaps',\n            repo: ''\n        })\n    ], Spherical);\n    return Spherical;\n    var Spherical_1;\n}());\nexport { Spherical };\n/**\n * @hidden\n */\nvar StreetViewPanorama = (function (_super) {\n    __extends(StreetViewPanorama, _super);\n    function StreetViewPanorama(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // -------------------\n            // Create a panorama\n            // -------------------\n            if (element instanceof HTMLElement) {\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().StreetView.getPanorama(new Promise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            reject(new Error('Can not find the element [#' + element + ']'));\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n            throw new Error(errorMessage.join(''));\n        }\n        return _this;\n    }\n    /**\n     * Sets the point of view for the Street View panorama.\n     */\n    /**\n       * Sets the point of view for the Street View panorama.\n       */\n    StreetViewPanorama.prototype.setPov = /**\n       * Sets the point of view for the Street View panorama.\n       */\n    function (pov) { };\n    /**\n     * Sets the StreetViewPanorama to a given location.\n     */\n    /**\n       * Sets the StreetViewPanorama to a given location.\n       */\n    StreetViewPanorama.prototype.setPosition = /**\n       * Sets the StreetViewPanorama to a given location.\n       */\n    function (cameraPosition) { };\n    /**\n     * Toggles the ability for users to use pan around on the panorama using gestures.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to use pan around on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setPanningGesturesEnabled = /**\n       * Toggles the ability for users to use pan around on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the panning gesture is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the panning gesture is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getPanningGesturesEnabled = /**\n       * Return true if the panning gesture is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Toggles the ability for users to zoom on the panorama using gestures.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to zoom on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setZoomGesturesEnabled = /**\n       * Toggles the ability for users to zoom on the panorama using gestures.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the zooming gesture is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the zooming gesture is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getZoomGesturesEnabled = /**\n       * Return true if the zooming gesture is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Toggles the ability for users to see street names on the panorama.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to see street names on the panorama.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setStreetNamesEnabled = /**\n       * Toggles the ability for users to see street names on the panorama.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the street names control is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the street names control is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getStreetNamesEnabled = /**\n       * Return true if the street names control is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Toggles the ability for users to move between panoramas.\n     * @param gestureEnable {boolean}\n     */\n    /**\n       * Toggles the ability for users to move between panoramas.\n       * @param gestureEnable {boolean}\n       */\n    StreetViewPanorama.prototype.setNavigationEnabled = /**\n       * Toggles the ability for users to move between panoramas.\n       * @param gestureEnable {boolean}\n       */\n    function (gestureEnable) { };\n    /**\n     * Return true if the navigation control is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Return true if the navigation control is enabled.\n       * @return {boolean}\n       */\n    StreetViewPanorama.prototype.getNavigationEnabled = /**\n       * Return true if the navigation control is enabled.\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Return the navigation links (StreetViewLocation.links)\n     * @return {StreetViewNavigationLink[]}\n     */\n    /**\n       * Return the navigation links (StreetViewLocation.links)\n       * @return {StreetViewNavigationLink[]}\n       */\n    StreetViewPanorama.prototype.getLinks = /**\n       * Return the navigation links (StreetViewLocation.links)\n       * @return {StreetViewNavigationLink[]}\n       */\n    function () { return; };\n    /**\n     * Return the current location\n     * @return {StreetViewLocation}\n     */\n    /**\n       * Return the current location\n       * @return {StreetViewLocation}\n       */\n    StreetViewPanorama.prototype.getLocation = /**\n       * Return the current location\n       * @return {StreetViewLocation}\n       */\n    function () { return; };\n    /**\n     * Return the current panorama id\n     * @return {string}\n     */\n    /**\n       * Return the current panorama id\n       * @return {string}\n       */\n    StreetViewPanorama.prototype.getPanoId = /**\n       * Return the current panorama id\n       * @return {string}\n       */\n    function () { return; };\n    /**\n     * Return the current position (StreetViewLocation.latLng)\n     * @return {string}\n     */\n    /**\n       * Return the current position (StreetViewLocation.latLng)\n       * @return {string}\n       */\n    StreetViewPanorama.prototype.getPosition = /**\n       * Return the current position (StreetViewLocation.latLng)\n       * @return {string}\n       */\n    function () { return; };\n    /**\n     * Destroy a panorama completely\n     * @return {Promise<any>}\n     */\n    /**\n       * Destroy a panorama completely\n       * @return {Promise<any>}\n       */\n    StreetViewPanorama.prototype.remove = /**\n       * Destroy a panorama completely\n       * @return {Promise<any>}\n       */\n    function () {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this._objectInstance.remove(function () { return resolve(); });\n        });\n    };\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setPov\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setPanningGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getPanningGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setZoomGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getZoomGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setStreetNamesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getStreetNamesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], StreetViewPanorama.prototype, \"setNavigationEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], StreetViewPanorama.prototype, \"getNavigationEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Array)\n    ], StreetViewPanorama.prototype, \"getLinks\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], StreetViewPanorama.prototype, \"getLocation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], StreetViewPanorama.prototype, \"getPanoId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], StreetViewPanorama.prototype, \"getPosition\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], StreetViewPanorama.prototype, \"remove\", null);\n    /**\n     * @hidden\n     */\n    StreetViewPanorama = __decorate([\n        Plugin({\n            pluginName: 'StreetViewPanorama',\n            plugin: 'cordova-plugin-googlemaps'\n        }),\n        __metadata(\"design:paramtypes\", [Object, Object])\n    ], StreetViewPanorama);\n    return StreetViewPanorama;\n}(BaseClass));\nexport { StreetViewPanorama };\n/**\n * @hidden\n */\nvar GoogleMap = (function (_super) {\n    __extends(GoogleMap, _super);\n    function GoogleMap(element, options) {\n        var _this = this;\n        if (checkAvailability(GoogleMaps.getPluginRef(), null, GoogleMaps.getPluginName()) === true) {\n            // ---------------\n            // Create a map\n            // ---------------\n            if (element instanceof HTMLElement) {\n                if (!element.offsetParent) {\n                    throw new Error('Element must be under <body>');\n                }\n                if (element.offsetWidth >= 100 && element.offsetHeight >= 100) {\n                    _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(element, options)) || this;\n                }\n                else {\n                    throw new Error(element.tagName + ' is too small. Must be bigger than 100x100.');\n                }\n            }\n            else if (typeof element === 'string') {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(new Promise(function (resolve, reject) {\n                    var count;\n                    var i;\n                    count = 0;\n                    var timer = setInterval(function () {\n                        var targets;\n                        for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                            targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + element));\n                            if (targets.length > 0) {\n                                targets = targets.filter(function (target) {\n                                    return !target.hasAttribute('__pluginmapid');\n                                });\n                            }\n                            if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                                clearInterval(timer);\n                                resolve([targets[0], options]);\n                                return;\n                            }\n                        }\n                        if (count++ < 20) {\n                            return;\n                        }\n                        clearInterval(timer);\n                        _this._objectInstance.remove();\n                        if (targets.length > 0 && targets[0] && targets[0].offsetWidth < 100 || targets[0].offsetHeight < 100) {\n                            reject(new Error(targets[0].tagName + '[#' + element + '] is too small. Must be bigger than 100x100.'));\n                        }\n                        else {\n                            reject(new Error('Can not find the element [#' + element + ']'));\n                        }\n                    }, 100);\n                }), options)) || this;\n            }\n            else if (element === null && options) {\n                _this = _super.call(this, GoogleMaps.getPlugin().Map.getMap(null, options)) || this;\n            }\n        }\n        else {\n            var errorMessage = [\n                '[GoogleMaps]'\n            ];\n            if (!window.cordova) {\n                errorMessage.push('You need to execute \"$> ionic cordova run browser\".');\n                errorMessage.push('\"$> ionic serve\" is not supported.');\n            }\n            else {\n                errorMessage.push('cordova-plugin-googlemaps is not installed or not ready yet.');\n            }\n            console.error(errorMessage.join(''));\n            if (element instanceof HTMLElement) {\n                displayErrorMessage(element, errorMessage.join('<br />'));\n            }\n            else if (typeof element === 'string') {\n                var targets = Array.from(document.querySelectorAll('#' + element));\n                if (targets.length > 0) {\n                    targets = targets.filter(function (target) {\n                        return !target.hasAttribute('__pluginmapid');\n                    });\n                }\n                if (targets.length === 1 && targets[0]) {\n                    displayErrorMessage(targets[0], errorMessage.join('<br />'));\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Changes the map div\n     * @param domNode {HTMLElement | string} [options] If you want to display the map in an html element, you need to specify an element or id. If omit this argument, the map is detached from webview.\n     */\n    /**\n       * Changes the map div\n       * @param domNode {HTMLElement | string} [options] If you want to display the map in an html element, you need to specify an element or id. If omit this argument, the map is detached from webview.\n       */\n    GoogleMap.prototype.setDiv = /**\n       * Changes the map div\n       * @param domNode {HTMLElement | string} [options] If you want to display the map in an html element, you need to specify an element or id. If omit this argument, the map is detached from webview.\n       */\n    function (domNode) {\n        var _this = this;\n        if (!domNode) {\n            this._objectInstance.setDiv();\n            return;\n        }\n        if (typeof domNode === 'string') {\n            (new Promise(function (resolve, reject) {\n                var i, targets;\n                for (i = 0; i < TARGET_ELEMENT_FINDING_QUERYS.length; i++) {\n                    targets = Array.from(document.querySelectorAll(TARGET_ELEMENT_FINDING_QUERYS[i] + domNode));\n                    if (targets.length > 0) {\n                        targets = targets.filter(function (target) {\n                            return !target.hasAttribute('__pluginmapid');\n                        });\n                    }\n                    if (targets.length === 1 && targets[0] && targets[0].offsetWidth >= 100 && targets[0].offsetHeight >= 100) {\n                        resolve(targets[0]);\n                        return;\n                    }\n                }\n                reject('Can not find [#' + domNode + '] element');\n            }))\n                .then(function (element) {\n                _this._objectInstance.setDiv(element);\n            });\n        }\n        else {\n            if (domNode instanceof HTMLElement &&\n                !domNode.offsetParent &&\n                domNode.offsetWidth >= 100 && domNode.offsetHeight >= 100) {\n                this._objectInstance.setDiv(domNode);\n            }\n            else {\n                throw new Error(domNode.tagName + ' is too small. Must be bigger than 100x100.');\n            }\n        }\n    };\n    /**\n     * Returns the map HTML element\n     * @return {HTMLElement}\n     */\n    /**\n       * Returns the map HTML element\n       * @return {HTMLElement}\n       */\n    GoogleMap.prototype.getDiv = /**\n       * Returns the map HTML element\n       * @return {HTMLElement}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the map type id\n     * @param mapTypeId {string}\n     */\n    /**\n       * Changes the map type id\n       * @param mapTypeId {string}\n       */\n    GoogleMap.prototype.setMapTypeId = /**\n       * Changes the map type id\n       * @param mapTypeId {string}\n       */\n    function (mapTypeId) {\n    };\n    /**\n     * Moves the camera with animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Moves the camera with animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.animateCamera = /**\n       * Moves the camera with animation\n       * @return {Promise<any>}\n       */\n    function (cameraPosition) {\n        return;\n    };\n    /**\n     * Zooming in the camera with animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming in the camera with animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.animateCameraZoomIn = /**\n       * Zooming in the camera with animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Zooming out the camera with animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming out the camera with animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.animateCameraZoomOut = /**\n       * Zooming out the camera with animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Moves the camera without animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Moves the camera without animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.moveCamera = /**\n       * Moves the camera without animation\n       * @return {Promise<any>}\n       */\n    function (cameraPosition) {\n        return;\n    };\n    /**\n     * Zooming in the camera without animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming in the camera without animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.moveCameraZoomIn = /**\n       * Zooming in the camera without animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Zooming out the camera without animation\n     * @return {Promise<any>}\n     */\n    /**\n       * Zooming out the camera without animation\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.moveCameraZoomOut = /**\n       * Zooming out the camera without animation\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the position of the camera.\n     * @return {CameraPosition}\n     */\n    /**\n       * Get the position of the camera.\n       * @return {CameraPosition}\n       */\n    GoogleMap.prototype.getCameraPosition = /**\n       * Get the position of the camera.\n       * @return {CameraPosition}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera target position\n     * @return {ILatLng}\n     */\n    /**\n       * Get the current camera target position\n       * @return {ILatLng}\n       */\n    GoogleMap.prototype.getCameraTarget = /**\n       * Get the current camera target position\n       * @return {ILatLng}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera zoom level\n     * @return {number}\n     */\n    /**\n       * Get the current camera zoom level\n       * @return {number}\n       */\n    GoogleMap.prototype.getCameraZoom = /**\n       * Get the current camera zoom level\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera bearing\n     * @return {number}\n     */\n    /**\n       * Get the current camera bearing\n       * @return {number}\n       */\n    GoogleMap.prototype.getCameraBearing = /**\n       * Get the current camera bearing\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current camera tilt (view angle)\n     * @return {number}\n     */\n    /**\n       * Get the current camera tilt (view angle)\n       * @return {number}\n       */\n    GoogleMap.prototype.getCameraTilt = /**\n       * Get the current camera tilt (view angle)\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set the center position of the camera view\n     * @param latLng {ILatLng | ILatLng[]}\n     */\n    /**\n       * Set the center position of the camera view\n       * @param latLng {ILatLng | ILatLng[]}\n       */\n    GoogleMap.prototype.setCameraTarget = /**\n       * Set the center position of the camera view\n       * @param latLng {ILatLng | ILatLng[]}\n       */\n    function (latLng) {\n    };\n    /**\n     * Set zoom level of the camera\n     * @param zoomLevel {number} Zoom level\n     */\n    /**\n       * Set zoom level of the camera\n       * @param zoomLevel {number} Zoom level\n       */\n    GoogleMap.prototype.setCameraZoom = /**\n       * Set zoom level of the camera\n       * @param zoomLevel {number} Zoom level\n       */\n    function (zoomLevel) {\n    };\n    /**\n     * Set the camera view angle\n     * @param tiltAngle {number} Tilt angle\n     */\n    /**\n       * Set the camera view angle\n       * @param tiltAngle {number} Tilt angle\n       */\n    GoogleMap.prototype.setCameraTilt = /**\n       * Set the camera view angle\n       * @param tiltAngle {number} Tilt angle\n       */\n    function (tiltAngle) { };\n    /**\n     * Set camera bearing\n     * @param bearing {any}\n     */\n    /**\n       * Set camera bearing\n       * @param bearing {any}\n       */\n    GoogleMap.prototype.setCameraBearing = /**\n       * Set camera bearing\n       * @param bearing {any}\n       */\n    function (bearing) {\n    };\n    /**\n     * Changes the center of the map by the given distance in pixels\n     * @param x {number}\n     * @param y {number}\n     */\n    /**\n       * Changes the center of the map by the given distance in pixels\n       * @param x {number}\n       * @param y {number}\n       */\n    GoogleMap.prototype.panBy = /**\n       * Changes the center of the map by the given distance in pixels\n       * @param x {number}\n       * @param y {number}\n       */\n    function (x, y) { };\n    /**\n     * Get the current visible region (southWest and northEast)\n     * @return {VisibleRegion}\n     */\n    /**\n       * Get the current visible region (southWest and northEast)\n       * @return {VisibleRegion}\n       */\n    GoogleMap.prototype.getVisibleRegion = /**\n       * Get the current visible region (southWest and northEast)\n       * @return {VisibleRegion}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get the current device location\n     * @return {Promise<MyLocation>}\n     */\n    /**\n       * Get the current device location\n       * @return {Promise<MyLocation>}\n       */\n    GoogleMap.prototype.getMyLocation = /**\n       * Get the current device location\n       * @return {Promise<MyLocation>}\n       */\n    function (options) {\n        return new Promise(function (resolve, reject) {\n            GoogleMaps.getPlugin().LocationService.getMyLocation(options, resolve, reject);\n        });\n    };\n    /**\n     * Set false to ignore all clicks on the map\n     * @param isClickable {boolean}\n     */\n    /**\n       * Set false to ignore all clicks on the map\n       * @param isClickable {boolean}\n       */\n    GoogleMap.prototype.setClickable = /**\n       * Set false to ignore all clicks on the map\n       * @param isClickable {boolean}\n       */\n    function (isClickable) {\n    };\n    /**\n     * Destroy a map completely\n     * @return {Promise<any>}\n     */\n    /**\n       * Destroy a map completely\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.remove = /**\n       * Destroy a map completely\n       * @return {Promise<any>}\n       */\n    function () {\n        var _this = this;\n        if (this.get('_overlays')) {\n            Object.keys(this.get('_overlays')).forEach(function (overlayId) {\n                _this.get('_overlays')[overlayId] = null;\n                delete _this.get('_overlays')[overlayId];\n            });\n        }\n        return new Promise(function (resolve) {\n            _this._objectInstance.remove(function () { return resolve(); });\n        });\n    };\n    /**\n     * Remove all overlays, such as marker\n     * @return {Promise<any>}\n     */\n    /**\n       * Remove all overlays, such as marker\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.clear = /**\n       * Remove all overlays, such as marker\n       * @return {Promise<any>}\n       */\n    function () {\n        var _this = this;\n        if (this.get('_overlays')) {\n            Object.keys(this.get('_overlays')).forEach(function (overlayId) {\n                _this.get('_overlays')[overlayId] = null;\n                delete _this.get('_overlays')[overlayId];\n            });\n        }\n        return new Promise(function (resolve) {\n            _this._objectInstance.clear(function () { return resolve(); });\n        });\n    };\n    /**\n     * Convert the unit from LatLng to the pixels from the left/top of the map div\n     * @return {Promise<any>}\n     */\n    /**\n       * Convert the unit from LatLng to the pixels from the left/top of the map div\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.fromLatLngToPoint = /**\n       * Convert the unit from LatLng to the pixels from the left/top of the map div\n       * @return {Promise<any>}\n       */\n    function (latLng) {\n        return;\n    };\n    /**\n     * Convert the unit from the pixels from the left/top to the LatLng\n     * @return {Promise<LatLng>}\n     */\n    /**\n       * Convert the unit from the pixels from the left/top to the LatLng\n       * @return {Promise<LatLng>}\n       */\n    GoogleMap.prototype.fromPointToLatLng = /**\n       * Convert the unit from the pixels from the left/top to the LatLng\n       * @return {Promise<LatLng>}\n       */\n    function (point) { return; };\n    /**\n     * Set true if you want to show the MyLocation control (blue dot)\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the MyLocation control (blue dot)\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setMyLocationEnabled = /**\n       * Set true if you want to show the MyLocation control (blue dot)\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set true if you want to show the MyLocation button\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the MyLocation button\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setMyLocationButtonEnabled = /**\n       * Set true if you want to show the MyLocation button\n       * @param enabled {boolean}\n       */\n    function (enabled) { };\n    /**\n     * Get the currently focused building\n     * @return {Promise<any>}\n     */\n    /**\n       * Get the currently focused building\n       * @return {Promise<any>}\n       */\n    GoogleMap.prototype.getFocusedBuilding = /**\n       * Get the currently focused building\n       * @return {Promise<any>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set true if you want to show the indoor map\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the indoor map\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setIndoorEnabled = /**\n       * Set true if you want to show the indoor map\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set true if you want to show the traffic layer\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the traffic layer\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setTrafficEnabled = /**\n       * Set true if you want to show the traffic layer\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set true if you want to show the compass button\n     * @param enabled {boolean}\n     */\n    /**\n       * Set true if you want to show the compass button\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setCompassEnabled = /**\n       * Set true if you want to show the compass button\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Sets the preference for whether all gestures should be enabled or disabled\n     * @param enabled {boolean}\n     */\n    /**\n       * Sets the preference for whether all gestures should be enabled or disabled\n       * @param enabled {boolean}\n       */\n    GoogleMap.prototype.setAllGesturesEnabled = /**\n       * Sets the preference for whether all gestures should be enabled or disabled\n       * @param enabled {boolean}\n       */\n    function (enabled) {\n    };\n    /**\n     * Set visibility of the map\n     * @param visible {boolean}\n     */\n    /**\n       * Set visibility of the map\n       * @param visible {boolean}\n       */\n    GoogleMap.prototype.setVisible = /**\n       * Set visibility of the map\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Adjust the map padding (same as CSS padding rule)\n     * @param top {number}\n     * @param right {number}\n     * @param left {number}\n     * @param bottom {number}\n     */\n    /**\n       * Adjust the map padding (same as CSS padding rule)\n       * @param top {number}\n       * @param right {number}\n       * @param left {number}\n       * @param bottom {number}\n       */\n    GoogleMap.prototype.setPadding = /**\n       * Adjust the map padding (same as CSS padding rule)\n       * @param top {number}\n       * @param right {number}\n       * @param left {number}\n       * @param bottom {number}\n       */\n    function (top, right, bottom, left) { };\n    /**\n     * Set options\n     * @param options\n     */\n    /**\n       * Set options\n       * @param options\n       */\n    GoogleMap.prototype.setOptions = /**\n       * Set options\n       * @param options\n       */\n    function (options) {\n    };\n    /**\n     * Adds a marker\n     * @param options {MarkerOptions} options\n     * @return {Promise<Marker>}\n     */\n    /**\n       * Adds a marker\n       * @param options {MarkerOptions} options\n       * @return {Promise<Marker>}\n       */\n    GoogleMap.prototype.addMarker = /**\n       * Adds a marker\n       * @param options {MarkerOptions} options\n       * @return {Promise<Marker>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addMarker(options, function (marker) {\n                if (marker) {\n                    var overlayId_1 = marker.getId();\n                    var overlay_1 = new Marker(_this, marker);\n                    _this.get('_overlays')[overlayId_1] = overlay_1;\n                    marker.one(overlayId_1 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_1] = null;\n                            overlay_1.destroy();\n                        }\n                    });\n                    resolve(overlay_1);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a marker in synchronous\n     * @param options {MarkerOptions} options\n     * @Returns {Marker}\n     */\n    /**\n       * Adds a marker in synchronous\n       * @param options {MarkerOptions} options\n       * @Returns {Marker}\n       */\n    GoogleMap.prototype.addMarkerSync = /**\n       * Adds a marker in synchronous\n       * @param options {MarkerOptions} options\n       * @Returns {Marker}\n       */\n    function (options) {\n        var _this = this;\n        var marker = this._objectInstance.addMarker(options);\n        var overlayId = marker.getId();\n        var overlay = new Marker(this, marker);\n        this.get('_overlays')[overlayId] = overlay;\n        marker.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a marker cluster\n     * @param options {MarkerClusterOptions} options\n     * @return {Promise<MarkerCluster>}\n     */\n    /**\n       * Adds a marker cluster\n       * @param options {MarkerClusterOptions} options\n       * @return {Promise<MarkerCluster>}\n       */\n    GoogleMap.prototype.addMarkerCluster = /**\n       * Adds a marker cluster\n       * @param options {MarkerClusterOptions} options\n       * @return {Promise<MarkerCluster>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addMarkerCluster(options, function (markerCluster) {\n                if (markerCluster) {\n                    var overlayId_2 = markerCluster.getId();\n                    var overlay_2 = new MarkerCluster(_this, markerCluster);\n                    _this.get('_overlays')[overlayId_2] = overlay_2;\n                    markerCluster.one('remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_2] = null;\n                            overlay_2.destroy();\n                        }\n                    });\n                    markerCluster.set('_overlays', new BaseArrayClass());\n                    resolve(overlay_2);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a marker cluster in synchronous\n     * @param options {MarkerClusterOptions} options\n     * @Returns {MarkerCluster}\n     */\n    /**\n       * Adds a marker cluster in synchronous\n       * @param options {MarkerClusterOptions} options\n       * @Returns {MarkerCluster}\n       */\n    GoogleMap.prototype.addMarkerClusterSync = /**\n       * Adds a marker cluster in synchronous\n       * @param options {MarkerClusterOptions} options\n       * @Returns {MarkerCluster}\n       */\n    function (options) {\n        var _this = this;\n        var markerCluster = this._objectInstance.addMarkerCluster(options);\n        var overlayId = markerCluster.getId();\n        var overlay = new MarkerCluster(this, markerCluster);\n        this.get('_overlays')[overlayId] = overlay;\n        markerCluster.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        markerCluster.set('_overlays', new BaseArrayClass());\n        return overlay;\n    };\n    /**\n     * Adds a circle\n     * @param options {CircleOptions} options\n     * @return {Promise<Circle>}\n     */\n    /**\n       * Adds a circle\n       * @param options {CircleOptions} options\n       * @return {Promise<Circle>}\n       */\n    GoogleMap.prototype.addCircle = /**\n       * Adds a circle\n       * @param options {CircleOptions} options\n       * @return {Promise<Circle>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addCircle(options, function (circle) {\n                if (circle) {\n                    var overlayId_3 = circle.getId();\n                    var overlay_3 = new Circle(_this, circle);\n                    _this.get('_overlays')[overlayId_3] = overlay_3;\n                    circle.one(overlayId_3 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_3] = null;\n                            overlay_3.destroy();\n                        }\n                    });\n                    resolve(overlay_3);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a circle in synchronous\n     * @param options {CircleOptions} options\n     * @return {Circle}\n     */\n    /**\n       * Adds a circle in synchronous\n       * @param options {CircleOptions} options\n       * @return {Circle}\n       */\n    GoogleMap.prototype.addCircleSync = /**\n       * Adds a circle in synchronous\n       * @param options {CircleOptions} options\n       * @return {Circle}\n       */\n    function (options) {\n        var _this = this;\n        var circle = this._objectInstance.addCircle(options);\n        var overlayId = circle.getId();\n        var overlay = new Circle(this, circle);\n        this.get('_overlays')[overlayId] = overlay;\n        circle.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a polygon\n     * @param options {PolygonOptions} options\n     * @return {Promise<Polygon>}\n     */\n    /**\n       * Adds a polygon\n       * @param options {PolygonOptions} options\n       * @return {Promise<Polygon>}\n       */\n    GoogleMap.prototype.addPolygon = /**\n       * Adds a polygon\n       * @param options {PolygonOptions} options\n       * @return {Promise<Polygon>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addPolygon(options, function (polygon) {\n                if (polygon) {\n                    var overlayId_4 = polygon.getId();\n                    var overlay_4 = new Polygon(_this, polygon);\n                    _this.get('_overlays')[overlayId_4] = overlay_4;\n                    polygon.one(overlayId_4 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_4] = null;\n                            overlay_4.destroy();\n                        }\n                    });\n                    resolve(overlay_4);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a polygon in synchronous\n     * @param options {PolygonOptions} options\n     * @return {Polygon}\n     */\n    /**\n       * Adds a polygon in synchronous\n       * @param options {PolygonOptions} options\n       * @return {Polygon}\n       */\n    GoogleMap.prototype.addPolygonSync = /**\n       * Adds a polygon in synchronous\n       * @param options {PolygonOptions} options\n       * @return {Polygon}\n       */\n    function (options) {\n        var _this = this;\n        var polygon = this._objectInstance.addPolygon(options);\n        var overlayId = polygon.getId();\n        var overlay = new Polygon(this, polygon);\n        this.get('_overlays')[overlayId] = overlay;\n        polygon.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a polyline\n     * @param options {PolylineOptions} options\n     * @return {Promise<Polyline>}\n     */\n    /**\n       * Adds a polyline\n       * @param options {PolylineOptions} options\n       * @return {Promise<Polyline>}\n       */\n    GoogleMap.prototype.addPolyline = /**\n       * Adds a polyline\n       * @param options {PolylineOptions} options\n       * @return {Promise<Polyline>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addPolyline(options, function (polyline) {\n                if (polyline) {\n                    var overlayId_5 = polyline.getId();\n                    var overlay_5 = new Polyline(_this, polyline);\n                    _this.get('_overlays')[overlayId_5] = overlay_5;\n                    polyline.one(overlayId_5 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_5] = null;\n                            overlay_5.destroy();\n                        }\n                    });\n                    resolve(overlay_5);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a polyline in synchronous\n     * @param options {PolylineOptions} options\n     * @return {Polyline}\n     */\n    /**\n       * Adds a polyline in synchronous\n       * @param options {PolylineOptions} options\n       * @return {Polyline}\n       */\n    GoogleMap.prototype.addPolylineSync = /**\n       * Adds a polyline in synchronous\n       * @param options {PolylineOptions} options\n       * @return {Polyline}\n       */\n    function (options) {\n        var _this = this;\n        var polyline = this._objectInstance.addPolyline(options);\n        var overlayId = polyline.getId();\n        var overlay = new Polyline(this, polyline);\n        this.get('_overlays')[overlayId] = overlay;\n        polyline.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a tile overlay\n     * @param options {TileOverlayOptions} options\n     * @return {Promise<TileOverlay>}\n     */\n    /**\n       * Adds a tile overlay\n       * @param options {TileOverlayOptions} options\n       * @return {Promise<TileOverlay>}\n       */\n    GoogleMap.prototype.addTileOverlay = /**\n       * Adds a tile overlay\n       * @param options {TileOverlayOptions} options\n       * @return {Promise<TileOverlay>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addTileOverlay(options, function (tileOverlay) {\n                if (tileOverlay) {\n                    var overlayId_6 = tileOverlay.getId();\n                    var overlay_6 = new TileOverlay(_this, tileOverlay);\n                    _this.get('_overlays')[overlayId_6] = overlay_6;\n                    tileOverlay.one(overlayId_6 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_6] = null;\n                            overlay_6.destroy();\n                        }\n                    });\n                    resolve(overlay_6);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a tile overlay in synchronous\n     * @param options {TileOverlayOptions} options\n     * @return {TileOverlay}\n     */\n    /**\n       * Adds a tile overlay in synchronous\n       * @param options {TileOverlayOptions} options\n       * @return {TileOverlay}\n       */\n    GoogleMap.prototype.addTileOverlaySync = /**\n       * Adds a tile overlay in synchronous\n       * @param options {TileOverlayOptions} options\n       * @return {TileOverlay}\n       */\n    function (options) {\n        var _this = this;\n        var tileOverlay = this._objectInstance.addTileOverlay(options);\n        var overlayId = tileOverlay.getId();\n        var overlay = new TileOverlay(this, tileOverlay);\n        this.get('_overlays')[overlayId] = overlay;\n        tileOverlay.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a ground overlay\n     * @param options {GroundOverlayOptions} options\n     * @return {Promise<GroundOverlay>}\n     */\n    /**\n       * Adds a ground overlay\n       * @param options {GroundOverlayOptions} options\n       * @return {Promise<GroundOverlay>}\n       */\n    GoogleMap.prototype.addGroundOverlay = /**\n       * Adds a ground overlay\n       * @param options {GroundOverlayOptions} options\n       * @return {Promise<GroundOverlay>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addGroundOverlay(options, function (groundOverlay) {\n                if (groundOverlay) {\n                    var overlayId_7 = groundOverlay.getId();\n                    var overlay_7 = new GroundOverlay(_this, groundOverlay);\n                    _this.get('_overlays')[overlayId_7] = overlay_7;\n                    groundOverlay.one(overlayId_7 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_7] = null;\n                            overlay_7.destroy();\n                        }\n                    });\n                    resolve(overlay_7);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Adds a ground overlay in synchronous\n     * @param options {GroundOverlayOptions} options\n     * @return {GroundOverlay}\n     */\n    /**\n       * Adds a ground overlay in synchronous\n       * @param options {GroundOverlayOptions} options\n       * @return {GroundOverlay}\n       */\n    GoogleMap.prototype.addGroundOverlaySync = /**\n       * Adds a ground overlay in synchronous\n       * @param options {GroundOverlayOptions} options\n       * @return {GroundOverlay}\n       */\n    function (options) {\n        var _this = this;\n        var groundOverlay = this._objectInstance.addGroundOverlay(options);\n        var overlayId = groundOverlay.getId();\n        var overlay = new GroundOverlay(this, groundOverlay);\n        this.get('_overlays')[overlayId] = overlay;\n        groundOverlay.one(overlayId + '_remove', function () {\n            if (_this.get('_overlays')) {\n                _this.get('_overlays')[overlayId] = null;\n                overlay.destroy();\n            }\n        });\n        return overlay;\n    };\n    /**\n     * Adds a kml overlay\n     * @param options {KmlOverlayOptions} options\n     * @return {Promise<KmlOverlay>}\n     */\n    /**\n       * Adds a kml overlay\n       * @param options {KmlOverlayOptions} options\n       * @return {Promise<KmlOverlay>}\n       */\n    GoogleMap.prototype.addKmlOverlay = /**\n       * Adds a kml overlay\n       * @param options {KmlOverlayOptions} options\n       * @return {Promise<KmlOverlay>}\n       */\n    function (options) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._objectInstance.addKmlOverlay(options, function (kmlOverlay) {\n                if (kmlOverlay) {\n                    var overlayId_8 = kmlOverlay.getId();\n                    var overlay_8 = new KmlOverlay(_this, kmlOverlay);\n                    _this.get('_overlays')[overlayId_8] = overlay_8;\n                    kmlOverlay.one(overlayId_8 + '_remove', function () {\n                        if (_this.get('_overlays')) {\n                            _this.get('_overlays')[overlayId_8] = null;\n                            overlay_8.destroy();\n                        }\n                    });\n                    resolve(overlay_8);\n                }\n                else {\n                    reject();\n                }\n            });\n        });\n    };\n    /**\n     * Returns the base64 encoded screen capture of the map.\n     * @param options {ToDataUrlOptions} [options] options\n     * @return {Promise<string>}\n     */\n    /**\n       * Returns the base64 encoded screen capture of the map.\n       * @param options {ToDataUrlOptions} [options] options\n       * @return {Promise<string>}\n       */\n    GoogleMap.prototype.toDataURL = /**\n       * Returns the base64 encoded screen capture of the map.\n       * @param options {ToDataUrlOptions} [options] options\n       * @return {Promise<string>}\n       */\n    function (options) { return; };\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setDiv\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", HTMLElement)\n    ], GoogleMap.prototype, \"getDiv\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMapTypeId\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCamera\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCameraZoomIn\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"animateCameraZoomOut\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCamera\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCameraZoomIn\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"moveCameraZoomOut\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], GoogleMap.prototype, \"getCameraPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], GoogleMap.prototype, \"getCameraTarget\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraZoom\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GoogleMap.prototype, \"getCameraTilt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraTarget\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraZoom\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraTilt\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCameraBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"panBy\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", VisibleRegion)\n    ], GoogleMap.prototype, \"getVisibleRegion\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"getMyLocation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"remove\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"clear\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"fromLatLngToPoint\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"fromPointToLatLng\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMyLocationEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setMyLocationButtonEnabled\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"getFocusedBuilding\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setIndoorEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setTrafficEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setCompassEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setAllGesturesEnabled\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number, Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setPadding\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], GoogleMap.prototype, \"setOptions\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addMarker\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Marker)\n    ], GoogleMap.prototype, \"addMarkerSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addMarkerCluster\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", MarkerCluster)\n    ], GoogleMap.prototype, \"addMarkerClusterSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addCircle\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Circle)\n    ], GoogleMap.prototype, \"addCircleSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addPolygon\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Polygon)\n    ], GoogleMap.prototype, \"addPolygonSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addPolyline\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Polyline)\n    ], GoogleMap.prototype, \"addPolylineSync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addTileOverlay\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", TileOverlay)\n    ], GoogleMap.prototype, \"addTileOverlaySync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addGroundOverlay\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", GroundOverlay)\n    ], GoogleMap.prototype, \"addGroundOverlaySync\", null);\n    __decorate([\n        InstanceCheck(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"addKmlOverlay\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], GoogleMap.prototype, \"toDataURL\", null);\n    /**\n     * @hidden\n     */\n    GoogleMap = __decorate([\n        Plugin({\n            pluginName: 'GoogleMaps',\n            plugin: 'cordova-plugin-googlemaps'\n        }),\n        __metadata(\"design:paramtypes\", [Object, Object])\n    ], GoogleMap);\n    return GoogleMap;\n}(BaseClass));\nexport { GoogleMap };\n/**\n * @hidden\n */\nvar GroundOverlay = (function (_super) {\n    __extends(GroundOverlay, _super);\n    function GroundOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    GroundOverlay.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    GroundOverlay.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the bounds of the GroundOverlay\n     * @param bounds { ILatLng[]}\n     */\n    /**\n       * Changes the bounds of the GroundOverlay\n       * @param bounds { ILatLng[]}\n       */\n    GroundOverlay.prototype.setBounds = /**\n       * Changes the bounds of the GroundOverlay\n       * @param bounds { ILatLng[]}\n       */\n    function (bounds) {\n    };\n    /**\n     * Changes the bearing of the ground overlay\n     * @param bearing {number}\n     */\n    /**\n       * Changes the bearing of the ground overlay\n       * @param bearing {number}\n       */\n    GroundOverlay.prototype.setBearing = /**\n       * Changes the bearing of the ground overlay\n       * @param bearing {number}\n       */\n    function (bearing) {\n    };\n    /**\n     * Returns the current bearing value\n     */\n    /**\n       * Returns the current bearing value\n       */\n    GroundOverlay.prototype.getBearing = /**\n       * Returns the current bearing value\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the image of the ground overlay\n     * @param imageUrl {string} URL of image\n     */\n    /**\n       * Changes the image of the ground overlay\n       * @param imageUrl {string} URL of image\n       */\n    GroundOverlay.prototype.setImage = /**\n       * Changes the image of the ground overlay\n       * @param imageUrl {string} URL of image\n       */\n    function (imageUrl) { };\n    /**\n     * Changes the opacity of the ground overlay from 0.0 to 1.0\n     * @param opacity {number}\n     */\n    /**\n       * Changes the opacity of the ground overlay from 0.0 to 1.0\n       * @param opacity {number}\n       */\n    GroundOverlay.prototype.setOpacity = /**\n       * Changes the opacity of the ground overlay from 0.0 to 1.0\n       * @param opacity {number}\n       */\n    function (opacity) {\n    };\n    /**\n     * Returns the current opacity\n     * @return {number}\n     */\n    /**\n       * Returns the current opacity\n       * @return {number}\n       */\n    GroundOverlay.prototype.getOpacity = /**\n       * Returns the current opacity\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the ground overlay\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the ground overlay\n       * @param clickable {boolean}\n       */\n    GroundOverlay.prototype.setClickable = /**\n       * Changes click-ability of the ground overlay\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the ground overlay is clickable\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the ground overlay is clickable\n       * @return {boolean}\n       */\n    GroundOverlay.prototype.getClickable = /**\n       * Returns true if the ground overlay is clickable\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes visibility of the ground overlay\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the ground overlay\n       * @param visible {boolean}\n       */\n    GroundOverlay.prototype.setVisible = /**\n       * Changes visibility of the ground overlay\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the ground overlay is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the ground overlay is visible\n       * @return {boolean}\n       */\n    GroundOverlay.prototype.getVisible = /**\n       * Returns true if the ground overlay is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the ground overlay zIndex order\n     * @param index {number}\n     */\n    /**\n       * Changes the ground overlay zIndex order\n       * @param index {number}\n       */\n    GroundOverlay.prototype.setZIndex = /**\n       * Changes the ground overlay zIndex order\n       * @param index {number}\n       */\n    function (index) {\n    };\n    /**\n     * Returns the current ground overlay zIndex\n     * @return {number}\n     */\n    /**\n       * Returns the current ground overlay zIndex\n       * @return {number}\n       */\n    GroundOverlay.prototype.getZIndex = /**\n       * Returns the current ground overlay zIndex\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the ground overlay\n     */\n    /**\n       * Remove the ground overlay\n       */\n    GroundOverlay.prototype.remove = /**\n       * Remove the ground overlay\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], GroundOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setBounds\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getBearing\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setImage\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], GroundOverlay.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], GroundOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], GroundOverlay.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], GroundOverlay.prototype, \"remove\", null);\n    return GroundOverlay;\n}(BaseClass));\nexport { GroundOverlay };\n/**\n * @hidden\n */\nvar HtmlInfoWindow = (function (_super) {\n    __extends(HtmlInfoWindow, _super);\n    function HtmlInfoWindow() {\n        return _super.call(this, new (GoogleMaps.getPlugin().HtmlInfoWindow)()) || this;\n    }\n    /**\n     * Changes the backgroundColor\n     * @param color {string}\n     */\n    /**\n       * Changes the backgroundColor\n       * @param color {string}\n       */\n    HtmlInfoWindow.prototype.setBackgroundColor = /**\n       * Changes the backgroundColor\n       * @param color {string}\n       */\n    function (color) {\n    };\n    /**\n     * Set your HTML contents.\n     * @param content {any} String containing text or HTML element\n     * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n     */\n    /**\n       * Set your HTML contents.\n       * @param content {any} String containing text or HTML element\n       * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n       */\n    HtmlInfoWindow.prototype.setContent = /**\n       * Set your HTML contents.\n       * @param content {any} String containing text or HTML element\n       * @param cssOptions? {any} CSS styles for the container element of HTMLInfoWindow\n       */\n    function (content, cssOptions) {\n    };\n    /**\n     * Open the htmlInfoWindow\n     * @param marker {Marker}\n     */\n    /**\n       * Open the htmlInfoWindow\n       * @param marker {Marker}\n       */\n    HtmlInfoWindow.prototype.open = /**\n       * Open the htmlInfoWindow\n       * @param marker {Marker}\n       */\n    function (marker) {\n    };\n    /**\n     * Close the htmlInfoWindow\n     */\n    /**\n       * Close the htmlInfoWindow\n       */\n    HtmlInfoWindow.prototype.close = /**\n       * Close the htmlInfoWindow\n       */\n    function () {\n    };\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"setBackgroundColor\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object, Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"setContent\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Object)\n    ], HtmlInfoWindow.prototype, \"open\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], HtmlInfoWindow.prototype, \"close\", null);\n    /**\n     * @hidden\n     */\n    HtmlInfoWindow = __decorate([\n        Plugin({\n            plugin: 'cordova-plugin-googlemaps',\n            pluginName: 'GoogleMaps',\n            pluginRef: 'plugin.google.maps.HtmlInfoWindow',\n            repo: ''\n        }),\n        __metadata(\"design:paramtypes\", [])\n    ], HtmlInfoWindow);\n    return HtmlInfoWindow;\n}(BaseClass));\nexport { HtmlInfoWindow };\n/**\n * @hidden\n */\nvar Marker = (function (_super) {\n    __extends(Marker, _super);\n    function Marker(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Marker.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Marker.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Set the marker position.\n     * @param latLng {ILatLng}\n     */\n    /**\n       * Set the marker position.\n       * @param latLng {ILatLng}\n       */\n    Marker.prototype.setPosition = /**\n       * Set the marker position.\n       * @param latLng {ILatLng}\n       */\n    function (latLng) {\n        return;\n    };\n    /**\n     * Returns the marker position.\n     * @return {ILatLng}\n     */\n    /**\n       * Returns the marker position.\n       * @return {ILatLng}\n       */\n    Marker.prototype.getPosition = /**\n       * Returns the marker position.\n       * @return {ILatLng}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Show the normal infoWindow of the marker.\n     */\n    /**\n       * Show the normal infoWindow of the marker.\n       */\n    Marker.prototype.showInfoWindow = /**\n       * Show the normal infoWindow of the marker.\n       */\n    function () {\n    };\n    /**\n     * Hide the normal infoWindow of the marker.\n     */\n    /**\n       * Hide the normal infoWindow of the marker.\n       */\n    Marker.prototype.hideInfoWindow = /**\n       * Hide the normal infoWindow of the marker.\n       */\n    function () {\n    };\n    /**\n     * Specify the animation either `DROP` or `BOUNCE`\n     * @param animation {string}\n     */\n    /**\n       * Specify the animation either `DROP` or `BOUNCE`\n       * @param animation {string}\n       */\n    Marker.prototype.setAnimation = /**\n       * Specify the animation either `DROP` or `BOUNCE`\n       * @param animation {string}\n       */\n    function (animation) {\n    };\n    /**\n     * Set true if you **do not want** to move the map when you click on the marker.\n     * @param disableAutoPan {boolean}\n     */\n    /**\n       * Set true if you **do not want** to move the map when you click on the marker.\n       * @param disableAutoPan {boolean}\n       */\n    Marker.prototype.setDisableAutoPan = /**\n       * Set true if you **do not want** to move the map when you click on the marker.\n       * @param disableAutoPan {boolean}\n       */\n    function (disableAutoPan) {\n    };\n    /**\n     * Set false if you want to hide the marker.\n     * @param visible\n     */\n    /**\n       * Set false if you want to hide the marker.\n       * @param visible\n       */\n    Marker.prototype.setVisible = /**\n       * Set false if you want to hide the marker.\n       * @param visible\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the marker is visible\n     */\n    /**\n       * Returns true if the marker is visible\n       */\n    Marker.prototype.isVisible = /**\n       * Returns true if the marker is visible\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes title of the normal infoWindow.\n     * @param title {string}\n     */\n    /**\n       * Changes title of the normal infoWindow.\n       * @param title {string}\n       */\n    Marker.prototype.setTitle = /**\n       * Changes title of the normal infoWindow.\n       * @param title {string}\n       */\n    function (title) {\n    };\n    /**\n     * Returns the title strings.\n     * @return {string}\n     */\n    /**\n       * Returns the title strings.\n       * @return {string}\n       */\n    Marker.prototype.getTitle = /**\n       * Returns the title strings.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes snippet of the normal infoWindow.\n     * @param snippet {string}\n     */\n    /**\n       * Changes snippet of the normal infoWindow.\n       * @param snippet {string}\n       */\n    Marker.prototype.setSnippet = /**\n       * Changes snippet of the normal infoWindow.\n       * @param snippet {string}\n       */\n    function (snippet) {\n    };\n    /**\n     * Returns the snippet strings.\n     * @return {string}\n     */\n    /**\n       * Returns the snippet strings.\n       * @return {string}\n       */\n    Marker.prototype.getSnippet = /**\n       * Returns the snippet strings.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the marker opacity from 0.0 to 1.0.\n     * @param alpha {number} Opacity\n     */\n    /**\n       * Changes the marker opacity from 0.0 to 1.0.\n       * @param alpha {number} Opacity\n       */\n    Marker.prototype.setOpacity = /**\n       * Changes the marker opacity from 0.0 to 1.0.\n       * @param alpha {number} Opacity\n       */\n    function (alpha) {\n    };\n    /**\n     * Returns the marker opacity.\n     * @return {number} Opacity\n     */\n    /**\n       * Returns the marker opacity.\n       * @return {number} Opacity\n       */\n    Marker.prototype.getOpacity = /**\n       * Returns the marker opacity.\n       * @return {number} Opacity\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the marker.\n     */\n    /**\n       * Remove the marker.\n       */\n    Marker.prototype.remove = /**\n       * Remove the marker.\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Changes the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n     * @param x {number} Distance from left of the icon image in pixels.\n     * @param y {number} Distance from top of the icon image in pixels.\n     */\n    /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    Marker.prototype.setIconAnchor = /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the bottom of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    function (x, y) {\n    };\n    /**\n     * Changes the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n     * @param x {number} Distance from left of the icon image in pixels.\n     * @param y {number} Distance from top of the icon image in pixels.\n     */\n    /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    Marker.prototype.setInfoWindowAnchor = /**\n       * Changes the info window anchor. This defaults to 50% from the left of the image and at the top of the image.\n       * @param x {number} Distance from left of the icon image in pixels.\n       * @param y {number} Distance from top of the icon image in pixels.\n       */\n    function (x, y) {\n    };\n    /**\n     * Returns true if the infoWindow is shown on the marker\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the infoWindow is shown on the marker\n       * @return {boolean}\n       */\n    Marker.prototype.isInfoWindowShown = /**\n       * Returns true if the infoWindow is shown on the marker\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n     * @param y {number} z-index\n     */\n    /**\n       * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n       * @param y {number} z-index\n       */\n    Marker.prototype.setZIndex = /**\n       * Higher zIndex value overlays will be drawn on top of lower zIndex value tile layers and overlays.\n       * @param y {number} z-index\n       */\n    function (zIndex) {\n    };\n    /**\n     * Get z-index\n     * @return {number}\n     */\n    /**\n       * Get z-index\n       * @return {number}\n       */\n    Marker.prototype.getZIndex = /**\n       * Get z-index\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set true if you allow all users to drag the marker.\n     * @param draggable {boolean}\n     */\n    /**\n       * Set true if you allow all users to drag the marker.\n       * @param draggable {boolean}\n       */\n    Marker.prototype.setDraggable = /**\n       * Set true if you allow all users to drag the marker.\n       * @param draggable {boolean}\n       */\n    function (draggable) {\n    };\n    /**\n     * Returns true if the marker drag is enabled.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the marker drag is enabled.\n       * @return {boolean}\n       */\n    Marker.prototype.isDraggable = /**\n       * Returns true if the marker drag is enabled.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set true if you want to be flat marker.\n     * @param flat {boolean}\n     */\n    /**\n       * Set true if you want to be flat marker.\n       * @param flat {boolean}\n       */\n    Marker.prototype.setFlat = /**\n       * Set true if you want to be flat marker.\n       * @param flat {boolean}\n       */\n    function (flat) {\n        return;\n    };\n    /**\n     * Changes icon url and/or size\n     * @param icon\n     */\n    /**\n       * Changes icon url and/or size\n       * @param icon\n       */\n    Marker.prototype.setIcon = /**\n       * Changes icon url and/or size\n       * @param icon\n       */\n    function (icon) {\n        return;\n    };\n    /**\n     * Set the marker rotation angle.\n     * @param rotation {number}\n     */\n    /**\n       * Set the marker rotation angle.\n       * @param rotation {number}\n       */\n    Marker.prototype.setRotation = /**\n       * Set the marker rotation angle.\n       * @param rotation {number}\n       */\n    function (rotation) {\n    };\n    /**\n     * Returns the marker rotation angle.\n     * @return {number}\n     */\n    /**\n       * Returns the marker rotation angle.\n       * @return {number}\n       */\n    Marker.prototype.getRotation = /**\n       * Returns the marker rotation angle.\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], Marker.prototype, \"getPosition\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"showInfoWindow\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"hideInfoWindow\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setAnimation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setDisableAutoPan\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setTitle\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getTitle\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setSnippet\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Marker.prototype, \"getSnippet\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setIconAnchor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number, Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setInfoWindowAnchor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isInfoWindowShown\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setDraggable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Marker.prototype, \"isDraggable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setFlat\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setIcon\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Marker.prototype, \"setRotation\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Marker.prototype, \"getRotation\", null);\n    return Marker;\n}(BaseClass));\nexport { Marker };\n/**\n * @hidden\n */\nvar MarkerCluster = (function (_super) {\n    __extends(MarkerCluster, _super);\n    function MarkerCluster(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    MarkerCluster.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Add one marker location\n     * @param marker {MarkerOptions} one location\n     * @param skipRedraw? {boolean} marker cluster does not redraw the marker cluster if true.\n     */\n    /**\n       * Add one marker location\n       * @param marker {MarkerOptions} one location\n       * @param skipRedraw? {boolean} marker cluster does not redraw the marker cluster if true.\n       */\n    MarkerCluster.prototype.addMarker = /**\n       * Add one marker location\n       * @param marker {MarkerOptions} one location\n       * @param skipRedraw? {boolean} marker cluster does not redraw the marker cluster if true.\n       */\n    function (marker) {\n    };\n    /**\n     * Add marker locations\n     * @param markers {MarkerOptions[]} multiple location\n     */\n    /**\n       * Add marker locations\n       * @param markers {MarkerOptions[]} multiple location\n       */\n    MarkerCluster.prototype.addMarkers = /**\n       * Add marker locations\n       * @param markers {MarkerOptions[]} multiple location\n       */\n    function (markers) {\n    };\n    /**\n     * Remove the marker cluster\n     */\n    /**\n       * Remove the marker cluster\n       */\n    MarkerCluster.prototype.remove = /**\n       * Remove the marker cluster\n       */\n    function () {\n        this._objectInstance.set('_overlays', undefined);\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    MarkerCluster.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], MarkerCluster.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"addMarker\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"addMarkers\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], MarkerCluster.prototype, \"remove\", null);\n    return MarkerCluster;\n}(BaseClass));\nexport { MarkerCluster };\n/**\n * @hidden\n */\nvar Polygon = (function (_super) {\n    __extends(Polygon, _super);\n    function Polygon(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Polygon.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Polygon.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the polygon points.\n     * @param points {ILatLng[]}\n     */\n    /**\n       * Changes the polygon points.\n       * @param points {ILatLng[]}\n       */\n    Polygon.prototype.setPoints = /**\n       * Changes the polygon points.\n       * @param points {ILatLng[]}\n       */\n    function (points) {\n    };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    Polygon.prototype.getPoints = /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    /**\n     * Changes the polygon holes.\n     * @param holes {ILatLng[][]}\n     */\n    /**\n       * Changes the polygon holes.\n       * @param holes {ILatLng[][]}\n       */\n    Polygon.prototype.setHoles = /**\n       * Changes the polygon holes.\n       * @param holes {ILatLng[][]}\n       */\n    function (holes) {\n    };\n    /**\n     * Returns an instance of the BaseArrayClass.\n     * You can modify the holes.\n     * @return {BaseArrayClass<ILatLng[]>}\n     */\n    /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the holes.\n       * @return {BaseArrayClass<ILatLng[]>}\n       */\n    Polygon.prototype.getHoles = /**\n       * Returns an instance of the BaseArrayClass.\n       * You can modify the holes.\n       * @return {BaseArrayClass<ILatLng[]>}\n       */\n    function () {\n        var holes = this._objectInstance.getPoints();\n        var results = new BaseArrayClass();\n        holes.forEach(function (hole) {\n            results.push(hole);\n        });\n        return results;\n    };\n    /**\n     * Changes the filling color (inner color)\n     * @param fillColor {string}\n     */\n    /**\n       * Changes the filling color (inner color)\n       * @param fillColor {string}\n       */\n    Polygon.prototype.setFillColor = /**\n       * Changes the filling color (inner color)\n       * @param fillColor {string}\n       */\n    function (fillColor) {\n    };\n    /**\n     * Returns the current polygon filling color (inner color).\n     * @return {string}\n     */\n    /**\n       * Returns the current polygon filling color (inner color).\n       * @return {string}\n       */\n    Polygon.prototype.getFillColor = /**\n       * Returns the current polygon filling color (inner color).\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the stroke color (outer color)\n     * @param strokeColor {string}\n     */\n    /**\n       * Changes the stroke color (outer color)\n       * @param strokeColor {string}\n       */\n    Polygon.prototype.setStrokeColor = /**\n       * Changes the stroke color (outer color)\n       * @param strokeColor {string}\n       */\n    function (strokeColor) {\n    };\n    /**\n     * Returns the current polygon stroke color (outer color)\n     * @return {string}\n     */\n    /**\n       * Returns the current polygon stroke color (outer color)\n       * @return {string}\n       */\n    Polygon.prototype.getStrokeColor = /**\n       * Returns the current polygon stroke color (outer color)\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the polygon\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the polygon\n       * @param clickable {boolean}\n       */\n    Polygon.prototype.setClickable = /**\n       * Changes click-ability of the polygon\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the polygon is clickable\n     */\n    /**\n       * Returns true if the polygon is clickable\n       */\n    Polygon.prototype.getClickable = /**\n       * Returns true if the polygon is clickable\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes visibility of the polygon\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the polygon\n       * @param visible {boolean}\n       */\n    Polygon.prototype.setVisible = /**\n       * Changes visibility of the polygon\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the polygon is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polygon is visible\n       * @return {boolean}\n       */\n    Polygon.prototype.getVisible = /**\n       * Returns true if the polygon is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polygon zIndex order.\n     * @param zIndex {number}\n     */\n    /**\n       * Changes the polygon zIndex order.\n       * @param zIndex {number}\n       */\n    Polygon.prototype.setZIndex = /**\n       * Changes the polygon zIndex order.\n       * @param zIndex {number}\n       */\n    function (zIndex) {\n    };\n    /**\n     * Returns the current polygon zIndex\n     * @return {number}\n     */\n    /**\n       * Returns the current polygon zIndex\n       * @return {number}\n       */\n    Polygon.prototype.getZIndex = /**\n       * Returns the current polygon zIndex\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the polygon.\n     */\n    /**\n       * Remove the polygon.\n       */\n    Polygon.prototype.remove = /**\n       * Remove the polygon.\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    /**\n     * Changes the polygon stroke width\n     */\n    /**\n       * Changes the polygon stroke width\n       */\n    Polygon.prototype.setStrokeWidth = /**\n       * Changes the polygon stroke width\n       */\n    function (strokeWidth) {\n    };\n    /**\n     * Returns the polygon stroke width\n     */\n    /**\n       * Returns the polygon stroke width\n       */\n    Polygon.prototype.getStrokeWidth = /**\n       * Returns the polygon stroke width\n       */\n    function () {\n        return;\n    };\n    /**\n     * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n     * @param geodesic {boolean}\n     */\n    /**\n       * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geodesic {boolean}\n       */\n    Polygon.prototype.setGeodesic = /**\n       * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geodesic {boolean}\n       */\n    function (geodesic) {\n    };\n    /**\n     * Returns true if the polygon is geodesic.\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polygon is geodesic.\n       * @return {boolean}\n       */\n    Polygon.prototype.getGeodesic = /**\n       * Returns true if the polygon is geodesic.\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setPoints\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setHoles\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getFillColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polygon.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polygon.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"remove\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polygon.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polygon.prototype, \"setGeodesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polygon.prototype, \"getGeodesic\", null);\n    return Polygon;\n}(BaseClass));\nexport { Polygon };\n/**\n * @hidden\n */\nvar Polyline = (function (_super) {\n    __extends(Polyline, _super);\n    function Polyline(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    Polyline.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    Polyline.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Changes the polyline points.\n     * @param points {ILatLng[]}\n     */\n    /**\n       * Changes the polyline points.\n       * @param points {ILatLng[]}\n       */\n    Polyline.prototype.setPoints = /**\n       * Changes the polyline points.\n       * @param points {ILatLng[]}\n       */\n    function (points) {\n    };\n    /**\n     * Returns an instance of the BaseArrayClass\n     * You can modify the points.\n     * @return {BaseArrayClass<ILatLng>}\n     */\n    /**\n       * Returns an instance of the BaseArrayClass\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    Polyline.prototype.getPoints = /**\n       * Returns an instance of the BaseArrayClass\n       * You can modify the points.\n       * @return {BaseArrayClass<ILatLng>}\n       */\n    function () {\n        return new BaseArrayClass(this._objectInstance.getPoints());\n    };\n    /**\n     * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n     * @param geoDesic {boolean}\n     */\n    /**\n       * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geoDesic {boolean}\n       */\n    Polyline.prototype.setGeoDesic = /**\n       * When true, edges of the polyline are interpreted as geodesic and will follow the curvature of the Earth.\n       * @param geoDesic {boolean}\n       */\n    function (geoDesic) {\n    };\n    /**\n     * Returns true if the polyline is geodesic\n     */\n    /**\n       * Returns true if the polyline is geodesic\n       */\n    Polyline.prototype.getGeodesic = /**\n       * Returns true if the polyline is geodesic\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes visibility of the polyline\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the polyline\n       * @param visible {boolean}\n       */\n    Polyline.prototype.setVisible = /**\n       * Changes visibility of the polyline\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the polyline is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polyline is visible\n       * @return {boolean}\n       */\n    Polyline.prototype.getVisible = /**\n       * Returns true if the polyline is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes click-ability of the polyline\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the polyline\n       * @param clickable {boolean}\n       */\n    Polyline.prototype.setClickable = /**\n       * Changes click-ability of the polyline\n       * @param clickable {boolean}\n       */\n    function (clickable) {\n    };\n    /**\n     * Returns true if the polyline is clickable\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the polyline is clickable\n       * @return {boolean}\n       */\n    Polyline.prototype.getClickable = /**\n       * Returns true if the polyline is clickable\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polyline color\n     * @param strokeColor {string}\n     */\n    /**\n       * Changes the polyline color\n       * @param strokeColor {string}\n       */\n    Polyline.prototype.setStrokeColor = /**\n       * Changes the polyline color\n       * @param strokeColor {string}\n       */\n    function (strokeColor) {\n    };\n    /**\n     * Returns the current polyline color\n     * @return {string}\n     */\n    /**\n       * Returns the current polyline color\n       * @return {string}\n       */\n    Polyline.prototype.getStrokeColor = /**\n       * Returns the current polyline color\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polyline stroke width\n     * @param strokeWidth {number}\n     */\n    /**\n       * Changes the polyline stroke width\n       * @param strokeWidth {number}\n       */\n    Polyline.prototype.setStrokeWidth = /**\n       * Changes the polyline stroke width\n       * @param strokeWidth {number}\n       */\n    function (strokeWidth) {\n    };\n    /**\n     * Returns the current stroke width (unit: pixel).\n     * @return {number}\n     */\n    /**\n       * Returns the current stroke width (unit: pixel).\n       * @return {number}\n       */\n    Polyline.prototype.getStrokeWidth = /**\n       * Returns the current stroke width (unit: pixel).\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Changes the polyline zIndex order.\n     * @param index {number}\n     */\n    /**\n       * Changes the polyline zIndex order.\n       * @param index {number}\n       */\n    Polyline.prototype.setZIndex = /**\n       * Changes the polyline zIndex order.\n       * @param index {number}\n       */\n    function (index) {\n    };\n    /**\n     * Returns the current polyline zIndex\n     * @return {number}\n     */\n    /**\n       * Returns the current polyline zIndex\n       * @return {number}\n       */\n    Polyline.prototype.getZIndex = /**\n       * Returns the current polyline zIndex\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the polyline\n     */\n    /**\n       * Remove the polyline\n       */\n    Polyline.prototype.remove = /**\n       * Remove the polyline\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polyline.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setPoints\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setGeoDesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getGeodesic\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], Polyline.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], Polyline.prototype, \"getStrokeColor\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polyline.prototype, \"getStrokeWidth\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], Polyline.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], Polyline.prototype, \"remove\", null);\n    return Polyline;\n}(BaseClass));\nexport { Polyline };\n/**\n * @hidden\n */\nvar TileOverlay = (function (_super) {\n    __extends(TileOverlay, _super);\n    function TileOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        return _this;\n    }\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    TileOverlay.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    TileOverlay.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () {\n        return this._map;\n    };\n    /**\n     * Set whether the tiles should fade in.\n     * @param fadeIn {boolean}\n     */\n    /**\n       * Set whether the tiles should fade in.\n       * @param fadeIn {boolean}\n       */\n    TileOverlay.prototype.setFadeIn = /**\n       * Set whether the tiles should fade in.\n       * @param fadeIn {boolean}\n       */\n    function (fadeIn) {\n    };\n    /**\n     * Get whether the tiles should fade in\n     * @return {boolean}\n     */\n    /**\n       * Get whether the tiles should fade in\n       * @return {boolean}\n       */\n    TileOverlay.prototype.getFadeIn = /**\n       * Get whether the tiles should fade in\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set the zIndex of the tile overlay\n     * @param zIndex {number}\n     */\n    /**\n       * Set the zIndex of the tile overlay\n       * @param zIndex {number}\n       */\n    TileOverlay.prototype.setZIndex = /**\n       * Set the zIndex of the tile overlay\n       * @param zIndex {number}\n       */\n    function (zIndex) {\n    };\n    /**\n     * Returns the zIndex of the tile overlay\n     * @return {number}\n     */\n    /**\n       * Returns the zIndex of the tile overlay\n       * @return {number}\n       */\n    TileOverlay.prototype.getZIndex = /**\n       * Returns the zIndex of the tile overlay\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set the opacity of the tile overlay\n     * @param opacity {number}\n     */\n    /**\n       * Set the opacity of the tile overlay\n       * @param opacity {number}\n       */\n    TileOverlay.prototype.setOpacity = /**\n       * Set the opacity of the tile overlay\n       * @param opacity {number}\n       */\n    function (opacity) {\n    };\n    /**\n     * Returns the opacity of the tile overlay\n     * @return {number}\n     */\n    /**\n       * Returns the opacity of the tile overlay\n       * @return {number}\n       */\n    TileOverlay.prototype.getOpacity = /**\n       * Returns the opacity of the tile overlay\n       * @return {number}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Set false if you want to hide\n     * @param visible {boolean}\n     */\n    /**\n       * Set false if you want to hide\n       * @param visible {boolean}\n       */\n    TileOverlay.prototype.setVisible = /**\n       * Set false if you want to hide\n       * @param visible {boolean}\n       */\n    function (visible) {\n    };\n    /**\n     * Returns true if the tile overlay is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the tile overlay is visible\n       * @return {boolean}\n       */\n    TileOverlay.prototype.getVisible = /**\n       * Returns true if the tile overlay is visible\n       * @return {boolean}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Get tile size\n     */\n    /**\n       * Get tile size\n       */\n    TileOverlay.prototype.getTileSize = /**\n       * Get tile size\n       */\n    function () {\n        return;\n    };\n    /**\n     * Remove the tile overlay\n     */\n    /**\n       * Remove the tile overlay\n       */\n    TileOverlay.prototype.remove = /**\n       * Remove the tile overlay\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], TileOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setFadeIn\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], TileOverlay.prototype, \"getFadeIn\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], TileOverlay.prototype, \"getZIndex\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Number]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Number)\n    ], TileOverlay.prototype, \"getOpacity\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], TileOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], TileOverlay.prototype, \"getTileSize\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], TileOverlay.prototype, \"remove\", null);\n    return TileOverlay;\n}(BaseClass));\nexport { TileOverlay };\n/**\n * @hidden\n */\nvar KmlOverlay = (function (_super) {\n    __extends(KmlOverlay, _super);\n    function KmlOverlay(_map, _objectInstance) {\n        var _this = _super.call(this, _objectInstance) || this;\n        _this._map = _map;\n        Object.defineProperty(self, 'camera', {\n            value: _this._objectInstance.camera,\n            writable: false\n        });\n        Object.defineProperty(self, 'kmlData', {\n            value: _this._objectInstance.kmlData,\n            writable: false\n        });\n        return _this;\n    }\n    /**\n     * Returns the viewport to contains all overlays\n     */\n    /**\n       * Returns the viewport to contains all overlays\n       */\n    KmlOverlay.prototype.getDefaultViewport = /**\n       * Returns the viewport to contains all overlays\n       */\n    function () { return; };\n    /**\n     * Returns the ID of instance.\n     * @return {string}\n     */\n    /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    KmlOverlay.prototype.getId = /**\n       * Returns the ID of instance.\n       * @return {string}\n       */\n    function () { return; };\n    /**\n     * Returns the map instance.\n     * @return {GoogleMap}\n     */\n    /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    KmlOverlay.prototype.getMap = /**\n       * Returns the map instance.\n       * @return {GoogleMap}\n       */\n    function () { return this._map; };\n    /**\n     * Changes visibility of the kml overlay\n     * @param visible {boolean}\n     */\n    /**\n       * Changes visibility of the kml overlay\n       * @param visible {boolean}\n       */\n    KmlOverlay.prototype.setVisible = /**\n       * Changes visibility of the kml overlay\n       * @param visible {boolean}\n       */\n    function (visible) { };\n    /**\n     * Returns true if the kml overlay is visible\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the kml overlay is visible\n       * @return {boolean}\n       */\n    KmlOverlay.prototype.getVisible = /**\n       * Returns true if the kml overlay is visible\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Changes click-ability of the KmlOverlay\n     * @param clickable {boolean}\n     */\n    /**\n       * Changes click-ability of the KmlOverlay\n       * @param clickable {boolean}\n       */\n    KmlOverlay.prototype.setClickable = /**\n       * Changes click-ability of the KmlOverlay\n       * @param clickable {boolean}\n       */\n    function (clickable) { };\n    /**\n     * Returns true if the KmlOverlay is clickable\n     * @return {boolean}\n     */\n    /**\n       * Returns true if the KmlOverlay is clickable\n       * @return {boolean}\n       */\n    KmlOverlay.prototype.getClickable = /**\n       * Returns true if the KmlOverlay is clickable\n       * @return {boolean}\n       */\n    function () { return; };\n    /**\n     * Remove the KmlOverlay\n     */\n    /**\n       * Remove the KmlOverlay\n       */\n    KmlOverlay.prototype.remove = /**\n       * Remove the KmlOverlay\n       */\n    function () {\n        delete this._objectInstance.getMap().get('_overlays')[this.getId()];\n        this._objectInstance.remove();\n        this.destroy();\n    };\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Object)\n    ], KmlOverlay.prototype, \"getDefaultViewport\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", String)\n    ], KmlOverlay.prototype, \"getId\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], KmlOverlay.prototype, \"setVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], KmlOverlay.prototype, \"getVisible\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Boolean]),\n        __metadata(\"design:returntype\", void 0)\n    ], KmlOverlay.prototype, \"setClickable\", null);\n    __decorate([\n        CordovaInstance({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Boolean)\n    ], KmlOverlay.prototype, \"getClickable\", null);\n    __decorate([\n        CordovaInstance(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], KmlOverlay.prototype, \"remove\", null);\n    return KmlOverlay;\n}(BaseClass));\nexport { KmlOverlay };\nexport { ɵ0, ɵ1 };\n//# sourceMappingURL=index.js.map\n\n\n// WEBPACK FOOTER //\n// ./node_modules/@ionic-native/google-maps/index.js.pre-build-optimizer.js","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromEvent_1 = require('../../observable/fromEvent');\nObservable_1.Observable.fromEvent = fromEvent_1.fromEvent;\n//# sourceMappingURL=fromEvent.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/fromEvent.js\n// module id = 415\n// module chunks = 0 1","export  enum vehiclesIcons{\r\n    Moto=\"assets/imgs/marker.png\"\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/Enums/vehiclesIcons.ts"]}